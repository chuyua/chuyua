<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>最近的一些事</title>
    <link href="/2020/05/14/%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B/"/>
    <url>/2020/05/14/%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<p>咳咳咳，因为新冠的影响，2020 年已经快要过去一半了，这半年里啥也没干，光见证历史了</p><ul><li>1.23 武汉封城</li><li>1.31 英国脱欧</li><li>3 月 美股熔断 4 次</li><li>2020 奥运会延期至 2021</li><li>2020 高考推迟</li><li>4.4 10:00 降半旗、防空警报鸣响、行人止步、车辆停驶鸣笛、全国人民默哀3分钟… 愿逝者安息</li><li>4.20 原油期货合约跌至负数</li><li>…</li></ul><p>似乎预料到了以后的历史考题（逃</p><blockquote><p>2020 年东京奥运会于何时举办（ ）  </p><p>A. 2019 B. 2020 C. 2021 D. 未举办</p><p>如果你现在穿越回 2020，你能看见几次美股熔断  </p><p>A.0 B.1 C.2 D.3</p></blockquote><p>目前，在中国共产党的领导下，国内疫情已经基本控制住了，但国外情况依旧严峻。美国在<del>优秀总统特朗普</del>的领导下，确诊人数超过一百万，人民是无辜的，对美国人民表示深切同情，全球确诊人数也超过了两百万。</p><h3 id="开学"><a href="#开学" class="headerlink" title="开学"></a>开学</h3><p>2020-05-12 终于开学了，但随之而来的是开学考，啊这…<br>2020-05-12 傍晚，怀着忐忑紧张的心情到家，放下书包，还没饭吃，拿出语文书，打开手机，瞄了一眼社会主义群（聊天群），我…我…woc</p><blockquote><p>请转达孩子，接学校通知，阶段一考试推迟，明天按课表正常上课(周二)，请同学们作好准备，准时错峰到校！谢谢</p></blockquote><p>一个人发出了这样一条消息，然后…然后就炸了，他说是班级微信群里的，接着又有人说他们老师也发了，接着！我们班主任也在微信群里发了！</p><p>我…我…我…哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈</p><p>原谅我没什么写作水平，但真的，我相信你们没用亲身经历过就绝对没办法体会到这种干啥，当时真的手在抖，就那种感受，你知道吧，就…没办法用语言描述</p><p>今天去学习领了书，玉辉胖了但还是一如既往的喜欢灌鸡汤，珍珍感觉完全变了样，dxy 还是一如既往的<del>有点憨</del></p><p>明天也就正式开学了，嗯加油吧</p><h3 id="关于博客"><a href="#关于博客" class="headerlink" title="关于博客"></a>关于博客</h3><p>建议移步副站 <a href="https://blog.royce2003.top/posts/7174.html#关于博客" target="_blank" rel="noopener">副站链接</a></p><p>如你所见，这是一个和之前完全不一样的副站，原来用的是 Fluid 主题，但是现在用的还是 Fluid 主题，是的，你没看错，只不过整体的改动比较大。折腾久了，慢慢觉得这种简约但不简陋的设计越来越好看</p><p>目前的主页参考 <a href="https://dmx.pub" target="_blank" rel="noopener">DmxZ</a>，可以去看看他写的<a href="https://github.com/a2396837/hexo-theme-blank" target="_blank" rel="noopener">主题</a>，非常不错</p><p>目前会尽量保持这两边同时更新，主站目前还是在用原来的，说不定哪天副站这边完善了就会主副互换</p><p>现在的代码真的是非常非常的乱，但是由于用了 Acion，还是放在了 GitHub 上，如果有兴趣可以看看 <a href="https://github.com/Royce003/simpleHexo" target="_blank" rel="noopener">simpleHexo</a></p><p>因为是自己用的，所以之后可能会把各类东西写死</p><hr><p>用 Hexo 也差不多有半年了，也因为这个比暑假还长的寒假，折腾了非常非常多，一直都想自己写一个主题，但是，你知道的，因为比较菜，还没能力写，不过已经在慢慢推进了，目前进度 <del>0.01/100</del>，也因为开学了，没什么时间再继续了，所以，只好以后再来咯</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CorelDRAW X6完美破解方法，彻底去掉防盗版服务！</title>
    <link href="/2020/05/12/CorelDRAW%20X6/"/>
    <url>/2020/05/12/CorelDRAW%20X6/</url>
    
    <content type="html"><![CDATA[<p><strong>断网再安装 Coreldraw X6 软件（务必断网安装，否则又可能出现注册反弹）</strong>，选择试用版安装，安装完后启动软件，按稍后注册，关闭软件，出现注册选项，用注册工具注册（这部分很多网上都有介绍， 关键是下面这部分 ）。</p><ol><li>开始&gt;&gt;运行&gt;&gt;输入 services.msc，找到Protexis Licensing V2服务 &gt;&gt; 禁用。</li><li>开始&gt;&gt;运行&gt;&gt;输入 sc delete Protexis Licensing V2，目的是删除该服务(可选操作)。</li><li>删除 <code>C:\Program Files\Common Files\Protexis\License Service</code> 下的 PsiService_2.exe (得先在&gt;&gt;任务管理器 &gt;&gt; PsiService_2.exe 结束进程，上述文件才能删除)。</li><li>将同一路径下的 PsiKey_.dll 重命名为 PsiClient.dll， _表示任意字元，例如:PSIKey-03000201.dll。</li><li><strong>将 PsiClient.dll 档替换掉 CorelDRAW 安装路径下所有的 PsiClient.dll 同名档</strong>（可用搜索功能搜一下文件位置），共4 个！ <em>必须替换，否则，启动 CorelDraw 时会告诉你文件损坏。</em></li><li>然后就是禁止CDR软件联网了，可以用系统自带防火墙，或者专业防火墙，把下面4个程序加入到防火墙的出站规则以及入站规则中（全部禁止联网）。<br>以 CorelDRW.exe 为例：打开控制面板&gt;&gt;windows防火墙（确定你已经开启了防火墙功能），进入高级设置&gt;&gt;入站规则&gt;&gt;新建规则&gt;&gt;规则类型：程序&gt;&gt;下一步&gt;&gt;选择CorelDraw主程序&gt;&gt;下一步&gt;&gt;阻止连接&gt;&gt;配置文件：全选&gt;&gt;名称：CorelDraw&gt;&gt;完成。<br>同理：出站规则&gt;&gt;新建规则&gt;&gt;规则类型：程序&gt;&gt;下一步&gt;&gt;选择CorelDraw主程序&gt;&gt;下一步&gt;&gt;阻止连接&gt;&gt;配置文件：全选&gt;&gt;名称：CorelDraw&gt;&gt;完成。</li></ol><blockquote><p>C:\Program Files\Corel\CorelDRAW Graphics SuiteX6\Programs64\CorelDRW.exe<br>C:\Program Files\Corel\CorelDRAW GraphicsSuite X6\Programs64\DIM.exe<br>C:\Program Files\Corel\CorelDRAW GraphicsSuite X6\Programs64\CorelPP.exe<br>C:\Program Files\Corel\CorelDRAW Graphics Suite X6\Draw\DIM.exe</p></blockquote><ol start="7"><li>打开C:\Windows\System32\drivers\etc\hosts文件（此文件无扩展名）在文件末尾另起一行，输入：</li></ol><blockquote><p>127.0.0.1 apps.corel.com<br>127.0.0.1 mc.corel.com<br>127.0.0.1 origin-mc.corel.com<br>127.0.0.1 iws.corel.com</p></blockquote><p>保存并关闭文件。</p><h4 id="简单总结起来就是："><a href="#简单总结起来就是：" class="headerlink" title="简单总结起来就是："></a>简单总结起来就是：</h4><ul><li>禁用Protexis Licensing V2服务</li><li>删除PsiService_2.exe</li><li>覆写PsiClient.dll</li><li>防火墙设定(其他防火墙禁止出入站规则亦可以)</li><li>hosts相关网址(亦是防止连网)</li></ul><h3 id="另一种，启动时提示盗版的解决办法："><a href="#另一种，启动时提示盗版的解决办法：" class="headerlink" title="另一种，启动时提示盗版的解决办法："></a>另一种，启动时提示盗版的解决办法：</h3><ol><li>删除 <code>C:\Users\用户名\AppData\Roaming\Corel</code> 文件夹里的所有内容，注意这个 AppData 文件夹是隐藏的，需要显示隐藏文件夹，才能看到。本地判断是否是盗版的数据就保存在这个文件夹里，这个文件夹下的文件是 CorelDRAW 的缓存文件，删除了没有影响，下次打开 CorelDRAW 又会自动生成。</li><li>第二步，把 CorelDRAW 主程序添加到防火墙出站规则里，屏蔽软件联网即可。</li></ol><p>当然，上述方法多是治标不治本的临时性方案，如果你一定要用CorelDraw软件，建议购买正版授权。</p>]]></content>
    
    
    
    <tags>
      
      <tag>CorelDraw</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HandShaker 好看实用的手机管理工具</title>
    <link href="/2020/04/26/HandShaker/"/>
    <url>/2020/04/26/HandShaker/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">经</span><p>常为了手机电脑间传文件烦恼，想着什么时候在 Windows 和 Android 之间能有 iCloud 的体验 <del>（我知道我在想:peach:）</del>。或许 OneDrive 能实现类似体验，但是我这同步文件的速度并不是很理想，手机端传一个文件上去，电脑端要过一段时间才能同步出来，那我还不如用 QQ 传文件</p><p>在网上:surfer:时，看到了别人推荐这款软件，就下下来试了试，没报太大希望，但是用了一段时间，真的超 nice 啊</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>HandShaker[^1] 是一款轻便易用的 Android 手机管理工具，融合了 Mac 系统和 Smartisan OS 的界面风格和操作逻辑，可直观、简洁的帮助用户管理 Android 手机中的照片、视频、音乐等文件。[^2]</p><p>HandShaker，<strong>握手</strong>？那咱<strong>交个朋友</strong>？还是熟悉的锤子风格啊</p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>支持<strong>无线</strong>链接</li><li>可同步全部文件（双端完全同步）</li><li><strong>支持拖拽操作</strong></li><li>支持文件预览</li><li>闪念胶囊</li></ul><p>不夸张的说，我认为这或许是最好的<strong>非系统的</strong>安卓手机管理工具，全平台通用，不限制机型（就我目前发现的软件而言）</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/01.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>UI 还是锤子的一贯风格<br>看惯了 Material Design，再看看锤子的扁平感觉也挺不错的:laughing:</p><p>虽然:hammer:现在一言难尽，但是它出的软件可以说大部分都是精品，甚至你可以看到许多非数码圈的人在用锤子便签</p><h4 id="无线链接"><a href="#无线链接" class="headerlink" title="无线链接"></a>无线链接</h4><p>连接速度还不错的，也非常方便，第一次连接好像要在手机上同意<br><del>我第一次连的时候狂点连接，半点反应都没有，都想卸载了，然后发现是自己 zz 了</del></p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/02.gif?w=1280" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>还可通过二维码和 USB 数据线连接</p><h4 id="文件同步"><a href="#文件同步" class="headerlink" title="文件同步"></a>文件同步</h4><p>不仅能同步全部文件，还能将相册、音乐、视频和下载进行单独分类</p><p>相册页面还能按照手机上的不同相册来显示</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/03.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>同时，如果开启完全同步，还可将相册保存在本地，即使与手机断开连接，也能操作</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/04.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>但这里的相册有个小问题，<strong>相机相册</strong>中的照片并不是系统相机而是<strong>谷歌相机</strong>，这就有的迷了，不知道是不是只有 Flyme 这样</p><p>其他页面也感觉非常 nice</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/05.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="音乐界面"></p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/06.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="视频界面"></p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/07.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="下载界面"></p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/08.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="文件页面"></p><p>文件页面的图标能看得出非常用心</p><h4 id="拖拽操作"><a href="#拖拽操作" class="headerlink" title="拖拽操作"></a>拖拽操作</h4><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/09.gif?w=1280" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>支持全类型文件双向拖拽，速度非常快，比传文件的那些软件方便多了</p><p>挑了个视频文件测试，文件过大时提示 ”当前传输文件过大，建议通过 USB 数据线传输“，还是非常细心啊，并且你也可以不接受建议 :joy:</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/10.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>但是无线传输的速度还是同不错的，能达到将近 10MB/S</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/11.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>而 USB 传输的速度能达到将近 20MB/S</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/12.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>基本满足了传输需求，比 OneDrive 的玄学速度好太多了</p><h4 id="文件预览"><a href="#文件预览" class="headerlink" title="文件预览"></a>文件预览</h4><p>文件预览在我这有点玄学，是我的食用方法不对？和拖拽一样传文件到本地，但是速度只有 2MB/s 左右，偶尔能跑的和之前一样的 8MB/s</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/13.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>所以用来预览大文件不太方便，不过图片什么的还是非常方便的，图片的预览会先跳出略缩图，再加载清楚</p><p>还内置了音乐播放器，可以直接播放音乐，不过功能比较简陋</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/14.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h4 id="闪念胶囊"><a href="#闪念胶囊" class="headerlink" title="闪念胶囊"></a>闪念胶囊</h4><p>真的超级超级 nice 啊，非常好用，之前一直在用微软的 ToDo，手机上可以同步，UI 也做的挺不错的</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/15.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>不过最近已经开始用闪念胶囊了，至于原因，<del>我自己可能也说不出来</del>，总之，感觉用着更舒服一点吧，虽然这是锤子手机内置的功能，其他手机用不了。但是认真想想，在手机上记录的 ToDo 可能更多是一些零碎的小事情，需要马上去做，记下来只是怕忘了，用负一屏自带的备忘录就可以了，而在电脑上记录的可能则是一些任务规划。</p><p>一开始我并不觉得 ToDo 这种东西有用，但是用了一段时间发现还真有用 :joy_cat:，看到那一项一项就贼想把它打勾</p><p>虽然说不出什么原因让我换到了闪念胶囊，但是可能就是体验和 UI 吧，还是开头那句话，看惯了现有的设计，再看看锤子的扁平感觉也挺不错的 :laughing:</p><p>同样的，也支持一些拖拽，操作很方便</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/16.gif?w=1280" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>还能对每个胶囊添加附件，同样可以拖拽<br>但是对于附件有一些小限制，一个胶囊最多添加 14 个附件</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/17.gif?w=1280" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>当然了，ToDo 必备的日期肯定也是有的</p><p><img src="https://rmt.dogedoge.com/fetch/royce/storage/17291/18.png?w=1280&fmt=webp" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>知乎上一篇写的挺好的文章，某人在评论区撒野，最后真相：没用过，<strong>纯</strong>云体验，但想到前段时间发布的网民收入数据，害，只要自己用着开心就好:stuck_out_tongue_winking_eye:</p><p>那么，关于 HandShaker，还有些没提到的地方，就自己探索啦<br>虽然已经停更了，但还是感谢锤科:smiley_cat:</p><p><del>OK 各位，这就是这篇文章的全部内容了，非常感谢你能看到这里，如果你觉得这篇文章写的还不错的话，求赞求收藏求硬币求转发，最重要的是点一个大大的关注</del></p><p>[^1]: 下载地址 <a href="https://www.smartisan.com/apps/#/handshaker" target="_blank" rel="noopener">Smartisan 应用下载-锤子商城</a><br>[^2]: 参考 <a href="http://www.cnmo.com/news/551241.html" target="_blank" rel="noopener">体验至上 SmartFinder 更名为 HandShaker</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>加速网页加载？我选择对图片下手</title>
    <link href="/2020/04/20/WebP%20%E6%A0%BC%E5%BC%8F/"/>
    <url>/2020/04/20/WebP%20%E6%A0%BC%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">W</span><p>ebP 是一种现代图像格式，可为 Web 上的图像提供出色的无损和有损压缩。使用 WebP ，网站管理员和 Web 开发人员可以创建更小，更丰富的图像，从而使 Web 更快。<br>与 PNG 相比，WebP 无损图像的尺寸要小 26％。 在同等的 SSIM 质量指数下，WebP 有损图像比同类 JPEG 图像小 25-34％。<br>无损 WebP 支持透明性（也称为 Alpha 通道），而仅增加 22％ 的字节数。 对于可以接受有损 RGB 压缩的情况，有损 WebP 还支持透明性，与 PNG 相比，文件大小通常小 3 倍。</p><h2 id="WebP"><a href="#WebP" class="headerlink" title="WebP"></a>WebP</h2><p>新型图像格式，由 Google 开发[^1]</p><h3 id="WebP-是如何工作的"><a href="#WebP-是如何工作的" class="headerlink" title="WebP 是如何工作的"></a>WebP 是如何工作的</h3><blockquote><p>有损 WebP 压缩使用预测编码对图像进行编码，这与 VP8 视频编解码器用于压缩视频中的关键帧的方法相同。预测编码使用相邻像素块中的值来预测块中的值，然后仅对差异进行编码。</p><p>无损 WebP 压缩使用已经看到的图像片段来精确地重建新像素。如果找不到有趣的匹配项，它也可以使用本地调色板。</p><p>WebP 文件由 VP8 或 VP8L 图像数据以及基于 RIFF 的容器组成。</p></blockquote><h3 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h3><p>这种东西就贼烦了:hear_no_evil:</p><p>Google Chrome，Firefox，Edge，Opera 等都支持 WebP</p><p>[^2]<img src="https://cos.royce2003.top/12013/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="支持列表"></p><p><del>万恶的</del> Safari 居然还不支持，但当看到下方的 <code>Safari is experimenting with supporting WebP images.</code>[^3] 时，还兴奋了一小会，但点进去之后…</p><p><img src="https://cos.royce2003.top/12013/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="Safari 支持情况"></p><p>2016 年 7 月 19 日 … wd*md:anger::anger:<br>而且 2016 年就内测过，居然给删了…<br>和 Google 竞争？没有技术做好？我肯定相信前者</p><h3 id="使用情况"><a href="#使用情况" class="headerlink" title="使用情况"></a>使用情况</h3><p>随便找了几个网站测下</p><h4 id="淘宝"><a href="#淘宝" class="headerlink" title="淘宝"></a>淘宝</h4><p>淘宝官网中大部分图片均采用了 WebP 格式</p><p><img src="https://cos.royce2003.top/12013/03.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>对于部分较小的图片仍采用 JPG or PNG 格式</p><p><img src="https://cos.royce2003.top/12013/04.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h4 id="京东"><a href="#京东" class="headerlink" title="京东"></a>京东</h4><p>京东官网中大部分图片均采用了 WebP 格式</p><p><img src="https://cos.royce2003.top/12013/05.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>对于极少的图片仍采用 JPG or PNG 格式，如 Logo 等</p><p><img src="https://cos.royce2003.top/12013/06.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h4 id="腾讯、阿里云"><a href="#腾讯、阿里云" class="headerlink" title="腾讯、阿里云"></a>腾讯、阿里云</h4><p>两者均无 WebP 格式图片:-1:</p><h3 id="大小"><a href="#大小" class="headerlink" title="大小"></a>大小</h3><p>[^4]<br><img src="https://cos.royce2003.top/12013/07.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="PNG WebP 对比1"><br><img src="https://cos.royce2003.top/12013/08.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="PNG WebP 对比2"></p><p>这些都是较小图片的对比，感觉没差太多，于是乎自己找了几张大图测了下<br>图片名字为 分辨率 + 大小</p><p><img src="https://cos.royce2003.top/12013/09.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>好像图片有点大诶，由于采用本地软件<a href="https://zhitu.isux.us/" target="_blank" rel="noopener">智图</a>转换，CPU 直接拉满了 qaq:sob:</p><p><img src="https://cos.royce2003.top/12013/10.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>而且两张图图还出错了 qaq，就成功了两张:sob:</p><p><img src="https://cos.royce2003.top/12013/11.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>这数据吓到我了<br>5.7 MB 直接被干到了 74.2 KB<br>11.6 MB 直接被干到了 266 KB</p><p>再来看看网络上一个<a href="https://renzhezhilu.gitee.io/webp2jpg-online/" target="_blank" rel="noopener">工具</a>的转换情况</p><p><img src="https://cos.royce2003.top/12013/12.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>也是很吓人，不过前两张和智图比一下就效果不怎么样了，但是智图有对图片进行适当压缩，所以…</p><p>原本四张图总大小 87.5 MB，现在 15.7 MB<br>反正都 NB 就是了</p><p>再说下智图的压缩，和网络上处理的对比了下，除非放大看细节，要不然没差</p><p>三张对比图放在蓝奏云上了</p><a class="btn" href="https://royce.lanzous.com/ibnfvza"  target="_blank">下载链接</a><p>顺便再说下，WebP 是支持动图的，也就是说 GIF 也可以转成 WebP，不过目前我找到的大部分工具都不支持转换，<a href="https://www.upyun.com/webp" target="_blank" rel="noopener">又拍云</a>支持</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>图片体积小，支持透明、动画，不过少数浏览器不支持<br><del>万恶的</del> Safari 以后应该也是会支持的吧</p><p>能有效缓解网页加载过慢的情况 <del>（不配图加载最快了）</del><br>还能有效缓解流量太大导致的费用过高（针对对象存储）</p><p>WebP 支持 Alpha 透明和 24-bit 颜色数，例如 PNG8 中的毛边问题是不会出现的</p><p>在大幅缩小体积的情况下保证了图片质量，所以还是非常推荐使用的</p><p>但是有的时候就很玄学了，我曾试过在 JPG 图片通过压缩工具压缩到体积很小的情况下，再去转成 WebP，体积反而变大了，这说明 JPG 比 WebP 体积更小吗？我觉得应该没有。<br>本身 JPG 的体积已经很小了，图片质量也非常差，但是大部分情况 WebP 在差不多相同大小的情况下，图片质量能明显高出很多，不排除个例</p><p>真是因为这些优势，本站已将所有的图片换成了 WebP 格式（图标 icon 和个别特例除外）<br>那对于<del>万恶的</del> Safari 怎么办呢？<br>加几行代码不就好了，<del>简单高效（bushi）</del></p><div class="hljs"><pre><code class="hljs js"><span class="hljs-keyword">if</span> ((sessionStorage.getItem(<span class="hljs-string">'confirm'</span>) !== <span class="hljs-string">'1'</span>) &amp;&amp; (<span class="hljs-regexp">/Safari/</span>.test(navigator.userAgent) &amp;&amp; !<span class="hljs-regexp">/Chrome/</span>.test(navigator.userAgent))) &#123;    confirm(<span class="hljs-string">'抱歉，本博客在 Safari 中大部分图片无法显示'</span>);    sessionStorage.setItem(<span class="hljs-string">'confirm'</span>, <span class="hljs-string">'1'</span>);&#125;</code></pre></div><p>当然了，也可以通过一些 JS 代码来进行转换，但是效率不怎么高</p><p>还有就是又拍云支持 WebP 自适应，根据浏览器对 WebP 的支持情况，自动返回对应格式图片</p><p>希望 cos 等也能尽快出个这种功能</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>最后来推荐些转换工具，当然了，可以自己写代码转换，但是我菜啊，只好找现成的</p><h3 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h3><p><a href="https://www.upyun.com/webp" target="_blank" rel="noopener">转换工具地址</a><br>这东西事实上是个 Demo，给用户体验用的，所以下载时需要手动右键另存为，不过它没限制上传数量啊</p><p><img src="https://cos.royce2003.top/12013/13.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>下面这张图片为 GIF to WebP</p><p><img src="https://cos.royce2003.top/12013/14.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ol><li>智能压缩</li><li>转换速度较快</li><li>支持 GIF 转 WebP</li></ol><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ol><li>不支持较大图片</li><li>只能一张一张转换（可以开多个网页同时进行）</li><li>不可自己调节质量</li></ol><p>如果使用又拍云 CDN，可以开启 WebP 自适应<br>智能判断浏览器是否支持 WebP，来决定返回 WebP 格式图片还是原图，从而减少网络传输消耗</p><p><img src="https://cos.royce2003.top/12013/15.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h3 id="智图"><a href="#智图" class="headerlink" title="智图"></a>智图</h3><p>腾讯的东西，为数不多的一个良心产品，<a href="https://zhitu.isux.us/" target="_blank" rel="noopener">官网</a><br>这东西不仅可以转成 WebP，还能优化图片</p><p>软件中需要在右上角的菜单中打开生成 WebP</p><p><img src="https://cos.royce2003.top/12013/16.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>会在图片相同位置新建一个文件夹，里面包含了智能处理后的图片和一个 WebP 文件夹</p><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ol><li>智能压缩</li><li>支持多张图一起转换</li></ol><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ol><li>不支持较大图片</li><li>不支持 GIF 转 WebP</li><li>不可自己调节质量</li><li>偶尔出现转换失败或提示文件格式错误</li></ol><div class="note note-info">            <p>软件中的质量调节对生成 WebP 图片无效</p>          </div><h3 id="WebP-Converter"><a href="#WebP-Converter" class="headerlink" title="WebP Converter"></a>WebP Converter</h3><p><a href="https://webp-converter.com/" target="_blank" rel="noopener">官网</a></p><p><img src="https://cos.royce2003.top/12013/17.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>options 可调节质量</p><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><ol><li>支持多张图一起转换</li><li>可自行调节质量</li><li>转换速度较快</li></ol><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><ol><li>限制 8MB 以下</li><li>不支持 GIF 转 WebP</li></ol><h3 id="webp2jpg-online"><a href="#webp2jpg-online" class="headerlink" title="webp2jpg-online"></a>webp2jpg-online</h3><p><a href="https://renzhezhilu.gitee.io/webp2jpg-online/" target="_blank" rel="noopener">官网</a></p><p><img src="https://cos.royce2003.top/12013/18.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>options 可调节质量</p><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h4><ol><li>转换速度非常快</li><li>支持多张图一起转换</li><li>可自行调节质量</li><li><strong>可自行裁剪</strong></li><li><strong>支持大图片</strong></li><li><strong>支持 jpeg, jpg, png, gif, svg, ico, bmp 转 WebP</strong></li></ol><p>还可以转换成 JPEG PNG ICO</p><h4 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a>缺点</h4><p>好像没找到缺点，还是托管在 gitee 的，访问速度非常快:laughing:</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>上面推荐的工具用着都还不错，各有各的优势</p><p>我在转换时的优先级排序</p><p>单张图片：又拍云 &gt; webp2jpg-online &gt; 智图 &gt; WebP Converter</p><p>大量图片：智图 &gt; webp2jpg-online &gt; WebP Converter &gt; 又拍云</p><p>单张图片最优选又拍云是因为会智能压缩而且比较快，比较方便<br>多图主要还是因为智图有客户端，方便一点，webp2jpg-online 如果出客户端我肯定毫不犹豫选它</p><p>这篇文章在此之前一共 18 张图片，PNG 格式大小为 25.1 MB，Snipaste 直接100质量输出，智图转 WebP 之后仅 645 KB，直接就省了 24 MB 啊:+1:</p><p><img src="https://cos.royce2003.top/12013/19.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>[^1]: 参考 <a href="https://developers.google.com/speed/webp" target="_blank" rel="noopener">A new image format for the Web</a><br>[^2]: 图片来源 <a href="https://caniuse.com/#feat=webp" target="_blank" rel="noopener">Can I use…</a><br>[^3]: 来源 <a href="https://www.cnet.com/news/apple-ios-macos-tests-googles-webp-graphics-to-speed-up-web/" target="_blank" rel="noopener">Apple tests Google graphics format to speed up websites</a><br>[^4]: 图片来源 <a href="https://isparta.github.io/compare-webp/index.html#12345" target="_blank" rel="noopener">WebP 示例 (PNG 转 WebP)</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>横向评测</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>坦克大战</title>
    <link href="/2020/04/16/%E5%9D%A6%E5%85%8B%E5%A4%A7%E6%88%98/"/>
    <url>/2020/04/16/%E5%9D%A6%E5%85%8B%E5%A4%A7%E6%88%98/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">终</span>于，Kotlin 的基础语法学的差不多了，本来打算跟着继续往下学 Gradle 的<p>但教程里用的版本和现在的有一定区别，不太方便学，就先跳到下面的实战了</p><p><img src="https://cos.royce2003.top/51049/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>这个是跟着教程<a href="[教程地址](https://www.bilibili.com/video/BV1WW411z7PA)">^1</a>里写的<br>u1s1，不知道是学 OI 的原因还是什么，感觉自己的思路跟他差好多啊 ┭┮﹏┭┮</p><h3 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h3><div>            <input type="checkbox" class=" green" disabled checked="checked">            <p>游戏窗口</p>          </div><div>            <input type="checkbox" class=" green" disabled checked="checked">            <p>我方坦克</p>          </div><div>            <input type="checkbox" class=" green" disabled checked="checked">            <p>障碍阻挡</p>          </div>            <input type="checkbox" class=" green" disabled checked="checked">            <p>子弹发射</p>                      <input type="checkbox" class=" green" disabled checked="checked">            <p>元素回收</p>          <br>            <input type="checkbox" class=" green" disabled checked="checked">            <p>攻受分析</p>                      <input type="checkbox" class=" green" disabled checked="checked">            <p>爆炸</p>          <br>            <input type="checkbox" class=" red" disabled >            <p>敌方坦克</p>                      <input type="checkbox" class=" red" disabled >            <p>自动移动</p>                      <input type="checkbox" class=" red" disabled >            <p>自动发射子弹</p>          <br><div>            <input type="checkbox" class=" red" disabled >            <p>伤害</p>          </div><div>            <input type="checkbox" class=" red" disabled >            <p>大本营</p>          </div><div>            <input type="checkbox" class=" red" disabled >            <p>游戏结束</p>          </div><div>            <input type="checkbox" class=" red" disabled >            <p>打包</p>          </div><br><a class="btn" href="https://github.com/royce003/TankWar"  title="源码地址" target="_blank">源码地址</a>]]></content>
    
    
    
    <tags>
      
      <tag>Kotlin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github Emoji 速查</title>
    <link href="/2020/04/15/emoji-list/"/>
    <url>/2020/04/15/emoji-list/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">c</span><p>ommit 的时候喜欢前面加个 emoji，每次上 Github 找这个仓库[^1]很不方便，就复制了一份放博客上，正好博客的渲染器支持:satisfied:</p><h3 id="People"><a href="#People" class="headerlink" title="People"></a>People</h3><table><thead><tr><th>:bowtie: <code>:bowtie:</code></th><th>:smile: <code>:smile:</code></th><th>:laughing: <code>:laughing:</code></th></tr></thead><tbody><tr><td>:blush: <code>:blush:</code></td><td>:smiley: <code>:smiley:</code></td><td>:relaxed: <code>:relaxed:</code></td></tr><tr><td>:smirk: <code>:smirk:</code></td><td>:heart_eyes: <code>:heart_eyes:</code></td><td>:kissing_heart: <code>:kissing_heart:</code></td></tr><tr><td>:kissing_closed_eyes: <code>:kissing_closed_eyes:</code></td><td>:flushed: <code>:flushed:</code></td><td>:relieved: <code>:relieved:</code></td></tr><tr><td>:satisfied: <code>:satisfied:</code></td><td>:grin: <code>:grin:</code></td><td>:wink: <code>:wink:</code></td></tr><tr><td>:stuck_out_tongue_winking_eye: <code>:stuck_out_tongue_winking_eye:</code></td><td>:stuck_out_tongue_closed_eyes: <code>:stuck_out_tongue_closed_eyes:</code></td><td>:grinning: <code>:grinning:</code></td></tr><tr><td>:kissing: <code>:kissing:</code></td><td>:kissing_smiling_eyes: <code>:kissing_smiling_eyes:</code></td><td>:stuck_out_tongue: <code>:stuck_out_tongue:</code></td></tr><tr><td>:sleeping: <code>:sleeping:</code></td><td>:worried: <code>:worried:</code></td><td>:frowning: <code>:frowning:</code></td></tr><tr><td>:anguished: <code>:anguished:</code></td><td>:open_mouth: <code>:open_mouth:</code></td><td>:grimacing: <code>:grimacing:</code></td></tr><tr><td>:confused: <code>:confused:</code></td><td>:hushed: <code>:hushed:</code></td><td>:expressionless: <code>:expressionless:</code></td></tr><tr><td>:unamused: <code>:unamused:</code></td><td>:sweat_smile: <code>:sweat_smile:</code></td><td>:sweat: <code>:sweat:</code></td></tr><tr><td>:disappointed_relieved: <code>:disappointed_relieved:</code></td><td>:weary: <code>:weary:</code></td><td>:pensive: <code>:pensive:</code></td></tr><tr><td>:disappointed: <code>:disappointed:</code></td><td>:confounded: <code>:confounded:</code></td><td>:fearful: <code>:fearful:</code></td></tr><tr><td>:cold_sweat: <code>:cold_sweat:</code></td><td>:persevere: <code>:persevere:</code></td><td>:cry: <code>:cry:</code></td></tr><tr><td>:sob: <code>:sob:</code></td><td>:joy: <code>:joy:</code></td><td>:astonished: <code>:astonished:</code></td></tr><tr><td>:scream: <code>:scream:</code></td><td>:neckbeard: <code>:neckbeard:</code></td><td>:tired_face: <code>:tired_face:</code></td></tr><tr><td>:angry: <code>:angry:</code></td><td>:rage: <code>:rage:</code></td><td>:triumph: <code>:triumph:</code></td></tr><tr><td>:sleepy: <code>:sleepy:</code></td><td>:yum: <code>:yum:</code></td><td>:mask: <code>:mask:</code></td></tr><tr><td>:sunglasses: <code>:sunglasses:</code></td><td>:dizzy_face: <code>:dizzy_face:</code></td><td>:imp: <code>:imp:</code></td></tr><tr><td>:smiling_imp: <code>:smiling_imp:</code></td><td>:neutral_face: <code>:neutral_face:</code></td><td>:no_mouth: <code>:no_mouth:</code></td></tr><tr><td>:innocent: <code>:innocent:</code></td><td>:alien: <code>:alien:</code></td><td>:yellow_heart: <code>:yellow_heart:</code></td></tr><tr><td>:blue_heart: <code>:blue_heart:</code></td><td>:purple_heart: <code>:purple_heart:</code></td><td>:heart: <code>:heart:</code></td></tr><tr><td>:green_heart: <code>:green_heart:</code></td><td>:broken_heart: <code>:broken_heart:</code></td><td>:heartbeat: <code>:heartbeat:</code></td></tr><tr><td>:heartpulse: <code>:heartpulse:</code></td><td>:two_hearts: <code>:two_hearts:</code></td><td>:revolving_hearts: <code>:revolving_hearts:</code></td></tr><tr><td>:cupid: <code>:cupid:</code></td><td>:sparkling_heart: <code>:sparkling_heart:</code></td><td>:sparkles: <code>:sparkles:</code></td></tr><tr><td>:star: <code>:star:</code></td><td>:star2: <code>:star2:</code></td><td>:dizzy: <code>:dizzy:</code></td></tr><tr><td>:boom: <code>:boom:</code></td><td>:collision: <code>:collision:</code></td><td>:anger: <code>:anger:</code></td></tr><tr><td>:exclamation: <code>:exclamation:</code></td><td>:question: <code>:question:</code></td><td>:grey_exclamation: <code>:grey_exclamation:</code></td></tr><tr><td>:grey_question: <code>:grey_question:</code></td><td>:zzz: <code>:zzz:</code></td><td>:dash: <code>:dash:</code></td></tr><tr><td>:sweat_drops: <code>:sweat_drops:</code></td><td>:notes: <code>:notes:</code></td><td>:musical_note: <code>:musical_note:</code></td></tr><tr><td>:fire: <code>:fire:</code></td><td>:hankey: <code>:hankey:</code></td><td>:poop: <code>:poop:</code></td></tr><tr><td>:shit: <code>:shit:</code></td><td>:+1: <code>:+1:</code></td><td>:thumbsup: <code>:thumbsup:</code></td></tr><tr><td>:-1: <code>:-1:</code></td><td>:thumbsdown: <code>:thumbsdown:</code></td><td>:ok_hand: <code>:ok_hand:</code></td></tr><tr><td>:punch: <code>:punch:</code></td><td>:facepunch: <code>:facepunch:</code></td><td>:fist: <code>:fist:</code></td></tr><tr><td>:v: <code>:v:</code></td><td>:wave: <code>:wave:</code></td><td>:hand: <code>:hand:</code></td></tr><tr><td>:raised_hand: <code>:raised_hand:</code></td><td>:open_hands: <code>:open_hands:</code></td><td>:point_up: <code>:point_up:</code></td></tr><tr><td>:point_down: <code>:point_down:</code></td><td>:point_left: <code>:point_left:</code></td><td>:point_right: <code>:point_right:</code></td></tr><tr><td>:raised_hands: <code>:raised_hands:</code></td><td>:pray: <code>:pray:</code></td><td>:point_up_2: <code>:point_up_2:</code></td></tr><tr><td>:clap: <code>:clap:</code></td><td>:muscle: <code>:muscle:</code></td><td>:metal: <code>:metal:</code></td></tr><tr><td>:fu: <code>:fu:</code></td><td>:walking: <code>:walking:</code></td><td>:runner: <code>:runner:</code></td></tr><tr><td>:running: <code>:running:</code></td><td>:couple: <code>:couple:</code></td><td>:family: <code>:family:</code></td></tr><tr><td>:two_men_holding_hands: <code>:two_men_holding_hands:</code></td><td>:two_women_holding_hands: <code>:two_women_holding_hands:</code></td><td>:dancer: <code>:dancer:</code></td></tr><tr><td>:dancers: <code>:dancers:</code></td><td>:ok_woman: <code>:ok_woman:</code></td><td>:no_good: <code>:no_good:</code></td></tr><tr><td>:information_desk_person: <code>:information_desk_person:</code></td><td>:raising_hand: <code>:raising_hand:</code></td><td>:bride_with_veil: <code>:bride_with_veil:</code></td></tr><tr><td>:person_with_pouting_face: <code>:person_with_pouting_face:</code></td><td>:person_frowning: <code>:person_frowning:</code></td><td>:bow: <code>:bow:</code></td></tr><tr><td>:couplekiss: <code>:couplekiss:</code></td><td>:couple_with_heart: <code>:couple_with_heart:</code></td><td>:massage: <code>:massage:</code></td></tr><tr><td>:haircut: <code>:haircut:</code></td><td>:nail_care: <code>:nail_care:</code></td><td>:boy: <code>:boy:</code></td></tr><tr><td>:girl: <code>:girl:</code></td><td>:woman: <code>:woman:</code></td><td>:man: <code>:man:</code></td></tr><tr><td>:baby: <code>:baby:</code></td><td>:older_woman: <code>:older_woman:</code></td><td>:older_man: <code>:older_man:</code></td></tr><tr><td>:person_with_blond_hair: <code>:person_with_blond_hair:</code></td><td>:man_with_gua_pi_mao: <code>:man_with_gua_pi_mao:</code></td><td>:man_with_turban: <code>:man_with_turban:</code></td></tr><tr><td>:construction_worker: <code>:construction_worker:</code></td><td>:cop: <code>:cop:</code></td><td>:angel: <code>:angel:</code></td></tr><tr><td>:princess: <code>:princess:</code></td><td>:smiley_cat: <code>:smiley_cat:</code></td><td>:smile_cat: <code>:smile_cat:</code></td></tr><tr><td>:heart_eyes_cat: <code>:heart_eyes_cat:</code></td><td>:kissing_cat: <code>:kissing_cat:</code></td><td>:smirk_cat: <code>:smirk_cat:</code></td></tr><tr><td>:scream_cat: <code>:scream_cat:</code></td><td>:crying_cat_face: <code>:crying_cat_face:</code></td><td>:joy_cat: <code>:joy_cat:</code></td></tr><tr><td>:pouting_cat: <code>:pouting_cat:</code></td><td>:japanese_ogre: <code>:japanese_ogre:</code></td><td>:japanese_goblin: <code>:japanese_goblin:</code></td></tr><tr><td>:see_no_evil: <code>:see_no_evil:</code></td><td>:hear_no_evil: <code>:hear_no_evil:</code></td><td>:speak_no_evil: <code>:speak_no_evil:</code></td></tr><tr><td>:guardsman: <code>:guardsman:</code></td><td>:skull: <code>:skull:</code></td><td>:feet: <code>:feet:</code></td></tr><tr><td>:lips: <code>:lips:</code></td><td>:kiss: <code>:kiss:</code></td><td>:droplet: <code>:droplet:</code></td></tr><tr><td>:ear: <code>:ear:</code></td><td>:eyes: <code>:eyes:</code></td><td>:nose: <code>:nose:</code></td></tr><tr><td>:tongue: <code>:tongue:</code></td><td>:love_letter: <code>:love_letter:</code></td><td>:bust_in_silhouette: <code>:bust_in_silhouette:</code></td></tr><tr><td>:busts_in_silhouette: <code>:busts_in_silhouette:</code></td><td>:speech_balloon: <code>:speech_balloon:</code></td><td>:thought_balloon: <code>:thought_balloon:</code></td></tr><tr><td>:feelsgood: <code>:feelsgood:</code></td><td>:finnadie: <code>:finnadie:</code></td><td>:goberserk: <code>:goberserk:</code></td></tr><tr><td>:godmode: <code>:godmode:</code></td><td>:hurtrealbad: <code>:hurtrealbad:</code></td><td>:rage1: <code>:rage1:</code></td></tr><tr><td>:rage2: <code>:rage2:</code></td><td>:rage3: <code>:rage3:</code></td><td>:rage4: <code>:rage4:</code></td></tr><tr><td>:suspect: <code>:suspect:</code></td><td>:trollface: <code>:trollface:</code></td><td></td></tr></tbody></table><h3 id="Nature"><a href="#Nature" class="headerlink" title="Nature"></a>Nature</h3><table><thead><tr><th>:sunny: <code>:sunny:</code></th><th>:umbrella: <code>:umbrella:</code></th><th>:cloud: <code>:cloud:</code></th></tr></thead><tbody><tr><td>:snowflake: <code>:snowflake:</code></td><td>:snowman: <code>:snowman:</code></td><td>:zap: <code>:zap:</code></td></tr><tr><td>:cyclone: <code>:cyclone:</code></td><td>:foggy: <code>:foggy:</code></td><td>:ocean: <code>:ocean:</code></td></tr><tr><td>:cat: <code>:cat:</code></td><td>:dog: <code>:dog:</code></td><td>:mouse: <code>:mouse:</code></td></tr><tr><td>:hamster: <code>:hamster:</code></td><td>:rabbit: <code>:rabbit:</code></td><td>:wolf: <code>:wolf:</code></td></tr><tr><td>:frog: <code>:frog:</code></td><td>:tiger: <code>:tiger:</code></td><td>:koala: <code>:koala:</code></td></tr><tr><td>:bear: <code>:bear:</code></td><td>:pig: <code>:pig:</code></td><td>:pig_nose: <code>:pig_nose:</code></td></tr><tr><td>:cow: <code>:cow:</code></td><td>:boar: <code>:boar:</code></td><td>:monkey_face: <code>:monkey_face:</code></td></tr><tr><td>:monkey: <code>:monkey:</code></td><td>:horse: <code>:horse:</code></td><td>:racehorse: <code>:racehorse:</code></td></tr><tr><td>:camel: <code>:camel:</code></td><td>:sheep: <code>:sheep:</code></td><td>:elephant: <code>:elephant:</code></td></tr><tr><td>:panda_face: <code>:panda_face:</code></td><td>:snake: <code>:snake:</code></td><td>:bird: <code>:bird:</code></td></tr><tr><td>:baby_chick: <code>:baby_chick:</code></td><td>:hatched_chick: <code>:hatched_chick:</code></td><td>:hatching_chick: <code>:hatching_chick:</code></td></tr><tr><td>:chicken: <code>:chicken:</code></td><td>:penguin: <code>:penguin:</code></td><td>:turtle: <code>:turtle:</code></td></tr><tr><td>:bug: <code>:bug:</code></td><td>:honeybee: <code>:honeybee:</code></td><td>:ant: <code>:ant:</code></td></tr><tr><td>:beetle: <code>:beetle:</code></td><td>:snail: <code>:snail:</code></td><td>:octopus: <code>:octopus:</code></td></tr><tr><td>:tropical_fish: <code>:tropical_fish:</code></td><td>:fish: <code>:fish:</code></td><td>:whale: <code>:whale:</code></td></tr><tr><td>:whale2: <code>:whale2:</code></td><td>:dolphin: <code>:dolphin:</code></td><td>:cow2: <code>:cow2:</code></td></tr><tr><td>:ram: <code>:ram:</code></td><td>:rat: <code>:rat:</code></td><td>:water_buffalo: <code>:water_buffalo:</code></td></tr><tr><td>:tiger2: <code>:tiger2:</code></td><td>:rabbit2: <code>:rabbit2:</code></td><td>:dragon: <code>:dragon:</code></td></tr><tr><td>:goat: <code>:goat:</code></td><td>:rooster: <code>:rooster:</code></td><td>:dog2: <code>:dog2:</code></td></tr><tr><td>:pig2: <code>:pig2:</code></td><td>:mouse2: <code>:mouse2:</code></td><td>:ox: <code>:ox:</code></td></tr><tr><td>:dragon_face: <code>:dragon_face:</code></td><td>:blowfish: <code>:blowfish:</code></td><td>:crocodile: <code>:crocodile:</code></td></tr><tr><td>:dromedary_camel: <code>:dromedary_camel:</code></td><td>:leopard: <code>:leopard:</code></td><td>:cat2: <code>:cat2:</code></td></tr><tr><td>:poodle: <code>:poodle:</code></td><td>:paw_prints: <code>:paw_prints:</code></td><td>:bouquet: <code>:bouquet:</code></td></tr><tr><td>:cherry_blossom: <code>:cherry_blossom:</code></td><td>:tulip: <code>:tulip:</code></td><td>:four_leaf_clover: <code>:four_leaf_clover:</code></td></tr><tr><td>:rose: <code>:rose:</code></td><td>:sunflower: <code>:sunflower:</code></td><td>:hibiscus: <code>:hibiscus:</code></td></tr><tr><td>:maple_leaf: <code>:maple_leaf:</code></td><td>:leaves: <code>:leaves:</code></td><td>:fallen_leaf: <code>:fallen_leaf:</code></td></tr><tr><td>:herb: <code>:herb:</code></td><td>:mushroom: <code>:mushroom:</code></td><td>:cactus: <code>:cactus:</code></td></tr><tr><td>:palm_tree: <code>:palm_tree:</code></td><td>:evergreen_tree: <code>:evergreen_tree:</code></td><td>:deciduous_tree: <code>:deciduous_tree:</code></td></tr><tr><td>:chestnut: <code>:chestnut:</code></td><td>:seedling: <code>:seedling:</code></td><td>:blossom: <code>:blossom:</code></td></tr><tr><td>:ear_of_rice: <code>:ear_of_rice:</code></td><td>:shell: <code>:shell:</code></td><td>:globe_with_meridians: <code>:globe_with_meridians:</code></td></tr><tr><td>:sun_with_face: <code>:sun_with_face:</code></td><td>:full_moon_with_face: <code>:full_moon_with_face:</code></td><td>:new_moon_with_face: <code>:new_moon_with_face:</code></td></tr><tr><td>:new_moon: <code>:new_moon:</code></td><td>:waxing_crescent_moon: <code>:waxing_crescent_moon:</code></td><td>:first_quarter_moon: <code>:first_quarter_moon:</code></td></tr><tr><td>:waxing_gibbous_moon: <code>:waxing_gibbous_moon:</code></td><td>:full_moon: <code>:full_moon:</code></td><td>:waning_gibbous_moon: <code>:waning_gibbous_moon:</code></td></tr><tr><td>:last_quarter_moon: <code>:last_quarter_moon:</code></td><td>:waning_crescent_moon: <code>:waning_crescent_moon:</code></td><td>:last_quarter_moon_with_face: <code>:last_quarter_moon_with_face:</code></td></tr><tr><td>:first_quarter_moon_with_face: <code>:first_quarter_moon_with_face:</code></td><td>:moon: <code>:moon:</code></td><td>:earth_africa: <code>:earth_africa:</code></td></tr><tr><td>:earth_americas: <code>:earth_americas:</code></td><td>:earth_asia: <code>:earth_asia:</code></td><td>:volcano: <code>:volcano:</code></td></tr><tr><td>:milky_way: <code>:milky_way:</code></td><td>:partly_sunny: <code>:partly_sunny:</code></td><td>:octocat: <code>:octocat:</code></td></tr><tr><td>:squirrel: <code>:squirrel:</code></td><td></td><td></td></tr></tbody></table><h3 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h3><table><thead><tr><th>:bamboo: <code>:bamboo:</code></th><th>:gift_heart: <code>:gift_heart:</code></th><th>:dolls: <code>:dolls:</code></th></tr></thead><tbody><tr><td>:school_satchel: <code>:school_satchel:</code></td><td>:mortar_board: <code>:mortar_board:</code></td><td>:flags: <code>:flags:</code></td></tr><tr><td>:fireworks: <code>:fireworks:</code></td><td>:sparkler: <code>:sparkler:</code></td><td>:wind_chime: <code>:wind_chime:</code></td></tr><tr><td>:rice_scene: <code>:rice_scene:</code></td><td>:jack_o_lantern: <code>:jack_o_lantern:</code></td><td>:ghost: <code>:ghost:</code></td></tr><tr><td>:santa: <code>:santa:</code></td><td>:christmas_tree: <code>:christmas_tree:</code></td><td>:gift: <code>:gift:</code></td></tr><tr><td>:bell: <code>:bell:</code></td><td>:no_bell: <code>:no_bell:</code></td><td>:tanabata_tree: <code>:tanabata_tree:</code></td></tr><tr><td>:tada: <code>:tada:</code></td><td>:confetti_ball: <code>:confetti_ball:</code></td><td>:balloon: <code>:balloon:</code></td></tr><tr><td>:crystal_ball: <code>:crystal_ball:</code></td><td>:cd: <code>:cd:</code></td><td>:dvd: <code>:dvd:</code></td></tr><tr><td>:floppy_disk: <code>:floppy_disk:</code></td><td>:camera: <code>:camera:</code></td><td>:video_camera: <code>:video_camera:</code></td></tr><tr><td>:movie_camera: <code>:movie_camera:</code></td><td>:computer: <code>:computer:</code></td><td>:tv: <code>:tv:</code></td></tr><tr><td>:iphone: <code>:iphone:</code></td><td>:phone: <code>:phone:</code></td><td>:telephone: <code>:telephone:</code></td></tr><tr><td>:telephone_receiver: <code>:telephone_receiver:</code></td><td>:pager: <code>:pager:</code></td><td>:fax: <code>:fax:</code></td></tr><tr><td>:minidisc: <code>:minidisc:</code></td><td>:vhs: <code>:vhs:</code></td><td>:sound: <code>:sound:</code></td></tr><tr><td>:speaker: <code>:speaker:</code></td><td>:mute: <code>:mute:</code></td><td>:loudspeaker: <code>:loudspeaker:</code></td></tr><tr><td>:mega: <code>:mega:</code></td><td>:hourglass: <code>:hourglass:</code></td><td>:hourglass_flowing_sand: <code>:hourglass_flowing_sand:</code></td></tr><tr><td>:alarm_clock: <code>:alarm_clock:</code></td><td>:watch: <code>:watch:</code></td><td>:radio: <code>:radio:</code></td></tr><tr><td>:satellite: <code>:satellite:</code></td><td>:loop: <code>:loop:</code></td><td>:mag: <code>:mag:</code></td></tr><tr><td>:mag_right: <code>:mag_right:</code></td><td>:unlock: <code>:unlock:</code></td><td>:lock: <code>:lock:</code></td></tr><tr><td>:lock_with_ink_pen: <code>:lock_with_ink_pen:</code></td><td>:closed_lock_with_key: <code>:closed_lock_with_key:</code></td><td>:key: <code>:key:</code></td></tr><tr><td>:bulb: <code>:bulb:</code></td><td>:flashlight: <code>:flashlight:</code></td><td>:high_brightness: <code>:high_brightness:</code></td></tr><tr><td>:low_brightness: <code>:low_brightness:</code></td><td>:electric_plug: <code>:electric_plug:</code></td><td>:battery: <code>:battery:</code></td></tr><tr><td>:calling: <code>:calling:</code></td><td>:email: <code>:email:</code></td><td>:mailbox: <code>:mailbox:</code></td></tr><tr><td>:postbox: <code>:postbox:</code></td><td>:bath: <code>:bath:</code></td><td>:bathtub: <code>:bathtub:</code></td></tr><tr><td>:shower: <code>:shower:</code></td><td>:toilet: <code>:toilet:</code></td><td>:wrench: <code>:wrench:</code></td></tr><tr><td>:nut_and_bolt: <code>:nut_and_bolt:</code></td><td>:hammer: <code>:hammer:</code></td><td>:seat: <code>:seat:</code></td></tr><tr><td>:moneybag: <code>:moneybag:</code></td><td>:yen: <code>:yen:</code></td><td>:dollar: <code>:dollar:</code></td></tr><tr><td>:pound: <code>:pound:</code></td><td>:euro: <code>:euro:</code></td><td>:credit_card: <code>:credit_card:</code></td></tr><tr><td>:money_with_wings: <code>:money_with_wings:</code></td><td>:e-mail: <code>:e-mail:</code></td><td>:inbox_tray: <code>:inbox_tray:</code></td></tr><tr><td>:outbox_tray: <code>:outbox_tray:</code></td><td>:envelope: <code>:envelope:</code></td><td>:incoming_envelope: <code>:incoming_envelope:</code></td></tr><tr><td>:postal_horn: <code>:postal_horn:</code></td><td>:mailbox_closed: <code>:mailbox_closed:</code></td><td>:mailbox_with_mail: <code>:mailbox_with_mail:</code></td></tr><tr><td>:mailbox_with_no_mail: <code>:mailbox_with_no_mail:</code></td><td>:door: <code>:door:</code></td><td>:smoking: <code>:smoking:</code></td></tr><tr><td>:bomb: <code>:bomb:</code></td><td>:gun: <code>:gun:</code></td><td>:hocho: <code>:hocho:</code></td></tr><tr><td>:pill: <code>:pill:</code></td><td>:syringe: <code>:syringe:</code></td><td>:page_facing_up: <code>:page_facing_up:</code></td></tr><tr><td>:page_with_curl: <code>:page_with_curl:</code></td><td>:bookmark_tabs: <code>:bookmark_tabs:</code></td><td>:bar_chart: <code>:bar_chart:</code></td></tr><tr><td>:chart_with_upwards_trend: <code>:chart_with_upwards_trend:</code></td><td>:chart_with_downwards_trend: <code>:chart_with_downwards_trend:</code></td><td>:scroll: <code>:scroll:</code></td></tr><tr><td>:clipboard: <code>:clipboard:</code></td><td>:calendar: <code>:calendar:</code></td><td>:date: <code>:date:</code></td></tr><tr><td>:card_index: <code>:card_index:</code></td><td>:file_folder: <code>:file_folder:</code></td><td>:open_file_folder: <code>:open_file_folder:</code></td></tr><tr><td>:scissors: <code>:scissors:</code></td><td>:pushpin: <code>:pushpin:</code></td><td>:paperclip: <code>:paperclip:</code></td></tr><tr><td>:black_nib: <code>:black_nib:</code></td><td>:pencil2: <code>:pencil2:</code></td><td>:straight_ruler: <code>:straight_ruler:</code></td></tr><tr><td>:triangular_ruler: <code>:triangular_ruler:</code></td><td>:closed_book: <code>:closed_book:</code></td><td>:green_book: <code>:green_book:</code></td></tr><tr><td>:blue_book: <code>:blue_book:</code></td><td>:orange_book: <code>:orange_book:</code></td><td>:notebook: <code>:notebook:</code></td></tr><tr><td>:notebook_with_decorative_cover: <code>:notebook_with_decorative_cover:</code></td><td>:ledger: <code>:ledger:</code></td><td>:books: <code>:books:</code></td></tr><tr><td>:bookmark: <code>:bookmark:</code></td><td>:name_badge: <code>:name_badge:</code></td><td>:microscope: <code>:microscope:</code></td></tr><tr><td>:telescope: <code>:telescope:</code></td><td>:newspaper: <code>:newspaper:</code></td><td>:football: <code>:football:</code></td></tr><tr><td>:basketball: <code>:basketball:</code></td><td>:soccer: <code>:soccer:</code></td><td>:baseball: <code>:baseball:</code></td></tr><tr><td>:tennis: <code>:tennis:</code></td><td>:8ball: <code>:8ball:</code></td><td>:rugby_football: <code>:rugby_football:</code></td></tr><tr><td>:bowling: <code>:bowling:</code></td><td>:golf: <code>:golf:</code></td><td>:mountain_bicyclist: <code>:mountain_bicyclist:</code></td></tr><tr><td>:bicyclist: <code>:bicyclist:</code></td><td>:horse_racing: <code>:horse_racing:</code></td><td>:snowboarder: <code>:snowboarder:</code></td></tr><tr><td>:swimmer: <code>:swimmer:</code></td><td>:surfer: <code>:surfer:</code></td><td>:ski: <code>:ski:</code></td></tr><tr><td>:spades: <code>:spades:</code></td><td>:hearts: <code>:hearts:</code></td><td>:clubs: <code>:clubs:</code></td></tr><tr><td>:diamonds: <code>:diamonds:</code></td><td>:gem: <code>:gem:</code></td><td>:ring: <code>:ring:</code></td></tr><tr><td>:trophy: <code>:trophy:</code></td><td>:musical_score: <code>:musical_score:</code></td><td>:musical_keyboard: <code>:musical_keyboard:</code></td></tr><tr><td>:violin: <code>:violin:</code></td><td>:space_invader: <code>:space_invader:</code></td><td>:video_game: <code>:video_game:</code></td></tr><tr><td>:black_joker: <code>:black_joker:</code></td><td>:flower_playing_cards: <code>:flower_playing_cards:</code></td><td>:game_die: <code>:game_die:</code></td></tr><tr><td>:dart: <code>:dart:</code></td><td>:mahjong: <code>:mahjong:</code></td><td>:clapper: <code>:clapper:</code></td></tr><tr><td>:memo: <code>:memo:</code></td><td>:pencil: <code>:pencil:</code></td><td>:book: <code>:book:</code></td></tr><tr><td>:art: <code>:art:</code></td><td>:microphone: <code>:microphone:</code></td><td>:headphones: <code>:headphones:</code></td></tr><tr><td>:trumpet: <code>:trumpet:</code></td><td>:saxophone: <code>:saxophone:</code></td><td>:guitar: <code>:guitar:</code></td></tr><tr><td>:shoe: <code>:shoe:</code></td><td>:sandal: <code>:sandal:</code></td><td>:high_heel: <code>:high_heel:</code></td></tr><tr><td>:lipstick: <code>:lipstick:</code></td><td>:boot: <code>:boot:</code></td><td>:shirt: <code>:shirt:</code></td></tr><tr><td>:tshirt: <code>:tshirt:</code></td><td>:necktie: <code>:necktie:</code></td><td>:womans_clothes: <code>:womans_clothes:</code></td></tr><tr><td>:dress: <code>:dress:</code></td><td>:running_shirt_with_sash: <code>:running_shirt_with_sash:</code></td><td>:jeans: <code>:jeans:</code></td></tr><tr><td>:kimono: <code>:kimono:</code></td><td>:bikini: <code>:bikini:</code></td><td>:ribbon: <code>:ribbon:</code></td></tr><tr><td>:tophat: <code>:tophat:</code></td><td>:crown: <code>:crown:</code></td><td>:womans_hat: <code>:womans_hat:</code></td></tr><tr><td>:mans_shoe: <code>:mans_shoe:</code></td><td>:closed_umbrella: <code>:closed_umbrella:</code></td><td>:briefcase: <code>:briefcase:</code></td></tr><tr><td>:handbag: <code>:handbag:</code></td><td>:pouch: <code>:pouch:</code></td><td>:purse: <code>:purse:</code></td></tr><tr><td>:eyeglasses: <code>:eyeglasses:</code></td><td>:fishing_pole_and_fish: <code>:fishing_pole_and_fish:</code></td><td>:coffee: <code>:coffee:</code></td></tr><tr><td>:tea: <code>:tea:</code></td><td>:sake: <code>:sake:</code></td><td>:baby_bottle: <code>:baby_bottle:</code></td></tr><tr><td>:beer: <code>:beer:</code></td><td>:beers: <code>:beers:</code></td><td>:cocktail: <code>:cocktail:</code></td></tr><tr><td>:tropical_drink: <code>:tropical_drink:</code></td><td>:wine_glass: <code>:wine_glass:</code></td><td>:fork_and_knife: <code>:fork_and_knife:</code></td></tr><tr><td>:pizza: <code>:pizza:</code></td><td>:hamburger: <code>:hamburger:</code></td><td>:fries: <code>:fries:</code></td></tr><tr><td>:poultry_leg: <code>:poultry_leg:</code></td><td>:meat_on_bone: <code>:meat_on_bone:</code></td><td>:spaghetti: <code>:spaghetti:</code></td></tr><tr><td>:curry: <code>:curry:</code></td><td>:fried_shrimp: <code>:fried_shrimp:</code></td><td>:bento: <code>:bento:</code></td></tr><tr><td>:sushi: <code>:sushi:</code></td><td>:fish_cake: <code>:fish_cake:</code></td><td>:rice_ball: <code>:rice_ball:</code></td></tr><tr><td>:rice_cracker: <code>:rice_cracker:</code></td><td>:rice: <code>:rice:</code></td><td>:ramen: <code>:ramen:</code></td></tr><tr><td>:stew: <code>:stew:</code></td><td>:oden: <code>:oden:</code></td><td>:dango: <code>:dango:</code></td></tr><tr><td>:egg: <code>:egg:</code></td><td>:bread: <code>:bread:</code></td><td>:doughnut: <code>:doughnut:</code></td></tr><tr><td>:custard: <code>:custard:</code></td><td>:icecream: <code>:icecream:</code></td><td>:ice_cream: <code>:ice_cream:</code></td></tr><tr><td>:shaved_ice: <code>:shaved_ice:</code></td><td>:birthday: <code>:birthday:</code></td><td>:cake: <code>:cake:</code></td></tr><tr><td>:cookie: <code>:cookie:</code></td><td>:chocolate_bar: <code>:chocolate_bar:</code></td><td>:candy: <code>:candy:</code></td></tr><tr><td>:lollipop: <code>:lollipop:</code></td><td>:honey_pot: <code>:honey_pot:</code></td><td>:apple: <code>:apple:</code></td></tr><tr><td>:green_apple: <code>:green_apple:</code></td><td>:tangerine: <code>:tangerine:</code></td><td>:lemon: <code>:lemon:</code></td></tr><tr><td>:cherries: <code>:cherries:</code></td><td>:grapes: <code>:grapes:</code></td><td>:watermelon: <code>:watermelon:</code></td></tr><tr><td>:strawberry: <code>:strawberry:</code></td><td>:peach: <code>:peach:</code></td><td>:melon: <code>:melon:</code></td></tr><tr><td>:banana: <code>:banana:</code></td><td>:pear: <code>:pear:</code></td><td>:pineapple: <code>:pineapple:</code></td></tr><tr><td>:sweet_potato: <code>:sweet_potato:</code></td><td>:eggplant: <code>:eggplant:</code></td><td>:tomato: <code>:tomato:</code></td></tr><tr><td>:corn: <code>:corn:</code></td><td></td><td></td></tr></tbody></table><h3 id="Places"><a href="#Places" class="headerlink" title="Places"></a>Places</h3><table><thead><tr><th>:house: <code>:house:</code></th><th>:house_with_garden: <code>:house_with_garden:</code></th><th>:school: <code>:school:</code></th></tr></thead><tbody><tr><td>:office: <code>:office:</code></td><td>:post_office: <code>:post_office:</code></td><td>:hospital: <code>:hospital:</code></td></tr><tr><td>:bank: <code>:bank:</code></td><td>:convenience_store: <code>:convenience_store:</code></td><td>:love_hotel: <code>:love_hotel:</code></td></tr><tr><td>:hotel: <code>:hotel:</code></td><td>:wedding: <code>:wedding:</code></td><td>:church: <code>:church:</code></td></tr><tr><td>:department_store: <code>:department_store:</code></td><td>:european_post_office: <code>:european_post_office:</code></td><td>:city_sunrise: <code>:city_sunrise:</code></td></tr><tr><td>:city_sunset: <code>:city_sunset:</code></td><td>:japanese_castle: <code>:japanese_castle:</code></td><td>:european_castle: <code>:european_castle:</code></td></tr><tr><td>:tent: <code>:tent:</code></td><td>:factory: <code>:factory:</code></td><td>:tokyo_tower: <code>:tokyo_tower:</code></td></tr><tr><td>:japan: <code>:japan:</code></td><td>:mount_fuji: <code>:mount_fuji:</code></td><td>:sunrise_over_mountains: <code>:sunrise_over_mountains:</code></td></tr><tr><td>:sunrise: <code>:sunrise:</code></td><td>:stars: <code>:stars:</code></td><td>:statue_of_liberty: <code>:statue_of_liberty:</code></td></tr><tr><td>:bridge_at_night: <code>:bridge_at_night:</code></td><td>:carousel_horse: <code>:carousel_horse:</code></td><td>:rainbow: <code>:rainbow:</code></td></tr><tr><td>:ferris_wheel: <code>:ferris_wheel:</code></td><td>:fountain: <code>:fountain:</code></td><td>:roller_coaster: <code>:roller_coaster:</code></td></tr><tr><td>:ship: <code>:ship:</code></td><td>:speedboat: <code>:speedboat:</code></td><td>:boat: <code>:boat:</code></td></tr><tr><td>:sailboat: <code>:sailboat:</code></td><td>:rowboat: <code>:rowboat:</code></td><td>:anchor: <code>:anchor:</code></td></tr><tr><td>:rocket: <code>:rocket:</code></td><td>:airplane: <code>:airplane:</code></td><td>:helicopter: <code>:helicopter:</code></td></tr><tr><td>:steam_locomotive: <code>:steam_locomotive:</code></td><td>:tram: <code>:tram:</code></td><td>:mountain_railway: <code>:mountain_railway:</code></td></tr><tr><td>:bike: <code>:bike:</code></td><td>:aerial_tramway: <code>:aerial_tramway:</code></td><td>:suspension_railway: <code>:suspension_railway:</code></td></tr><tr><td>:mountain_cableway: <code>:mountain_cableway:</code></td><td>:tractor: <code>:tractor:</code></td><td>:blue_car: <code>:blue_car:</code></td></tr><tr><td>:oncoming_automobile: <code>:oncoming_automobile:</code></td><td>:car: <code>:car:</code></td><td>:red_car: <code>:red_car:</code></td></tr><tr><td>:taxi: <code>:taxi:</code></td><td>:oncoming_taxi: <code>:oncoming_taxi:</code></td><td>:articulated_lorry: <code>:articulated_lorry:</code></td></tr><tr><td>:bus: <code>:bus:</code></td><td>:oncoming_bus: <code>:oncoming_bus:</code></td><td>:rotating_light: <code>:rotating_light:</code></td></tr><tr><td>:police_car: <code>:police_car:</code></td><td>:oncoming_police_car: <code>:oncoming_police_car:</code></td><td>:fire_engine: <code>:fire_engine:</code></td></tr><tr><td>:ambulance: <code>:ambulance:</code></td><td>:minibus: <code>:minibus:</code></td><td>:truck: <code>:truck:</code></td></tr><tr><td>:train: <code>:train:</code></td><td>:station: <code>:station:</code></td><td>:train2: <code>:train2:</code></td></tr><tr><td>:bullettrain_front: <code>:bullettrain_front:</code></td><td>:bullettrain_side: <code>:bullettrain_side:</code></td><td>:light_rail: <code>:light_rail:</code></td></tr><tr><td>:monorail: <code>:monorail:</code></td><td>:railway_car: <code>:railway_car:</code></td><td>:trolleybus: <code>:trolleybus:</code></td></tr><tr><td>:ticket: <code>:ticket:</code></td><td>:fuelpump: <code>:fuelpump:</code></td><td>:vertical_traffic_light: <code>:vertical_traffic_light:</code></td></tr><tr><td>:traffic_light: <code>:traffic_light:</code></td><td>:warning: <code>:warning:</code></td><td>:construction: <code>:construction:</code></td></tr><tr><td>:beginner: <code>:beginner:</code></td><td>:atm: <code>:atm:</code></td><td>:slot_machine: <code>:slot_machine:</code></td></tr><tr><td>:busstop: <code>:busstop:</code></td><td>:barber: <code>:barber:</code></td><td>:hotsprings: <code>:hotsprings:</code></td></tr><tr><td>:checkered_flag: <code>:checkered_flag:</code></td><td>:crossed_flags: <code>:crossed_flags:</code></td><td>:izakaya_lantern: <code>:izakaya_lantern:</code></td></tr><tr><td>:moyai: <code>:moyai:</code></td><td>:circus_tent: <code>:circus_tent:</code></td><td>:performing_arts: <code>:performing_arts:</code></td></tr><tr><td>:round_pushpin: <code>:round_pushpin:</code></td><td>:triangular_flag_on_post: <code>:triangular_flag_on_post:</code></td><td>:jp: <code>:jp:</code></td></tr><tr><td>:kr: <code>:kr:</code></td><td>:cn: <code>:cn:</code></td><td>:us: <code>:us:</code></td></tr><tr><td>:fr: <code>:fr:</code></td><td>:es: <code>:es:</code></td><td>:it: <code>:it:</code></td></tr><tr><td>:ru: <code>:ru:</code></td><td>:gb: <code>:gb:</code></td><td>:uk: <code>:uk:</code></td></tr><tr><td>:de: <code>:de:</code></td><td></td><td></td></tr></tbody></table><h3 id="Symbols"><a href="#Symbols" class="headerlink" title="Symbols"></a>Symbols</h3><table><thead><tr><th>:one: <code>:one:</code></th><th>:two: <code>:two:</code></th><th>:three: <code>:three:</code></th></tr></thead><tbody><tr><td>:four: <code>:four:</code></td><td>:five: <code>:five:</code></td><td>:six: <code>:six:</code></td></tr><tr><td>:seven: <code>:seven:</code></td><td>:eight: <code>:eight:</code></td><td>:nine: <code>:nine:</code></td></tr><tr><td>:keycap_ten: <code>:keycap_ten:</code></td><td>:1234: <code>:1234:</code></td><td>:zero: <code>:zero:</code></td></tr><tr><td>:hash: <code>:hash:</code></td><td>:symbols: <code>:symbols:</code></td><td>:arrow_backward: <code>:arrow_backward:</code></td></tr><tr><td>:arrow_down: <code>:arrow_down:</code></td><td>:arrow_forward: <code>:arrow_forward:</code></td><td>:arrow_left: <code>:arrow_left:</code></td></tr><tr><td>:capital_abcd: <code>:capital_abcd:</code></td><td>:abcd: <code>:abcd:</code></td><td>:abc: <code>:abc:</code></td></tr><tr><td>:arrow_lower_left: <code>:arrow_lower_left:</code></td><td>:arrow_lower_right: <code>:arrow_lower_right:</code></td><td>:arrow_right: <code>:arrow_right:</code></td></tr><tr><td>:arrow_up: <code>:arrow_up:</code></td><td>:arrow_upper_left: <code>:arrow_upper_left:</code></td><td>:arrow_upper_right: <code>:arrow_upper_right:</code></td></tr><tr><td>:arrow_double_down: <code>:arrow_double_down:</code></td><td>:arrow_double_up: <code>:arrow_double_up:</code></td><td>:arrow_down_small: <code>:arrow_down_small:</code></td></tr><tr><td>:arrow_heading_down: <code>:arrow_heading_down:</code></td><td>:arrow_heading_up: <code>:arrow_heading_up:</code></td><td>:leftwards_arrow_with_hook: <code>:leftwards_arrow_with_hook:</code></td></tr><tr><td>:arrow_right_hook: <code>:arrow_right_hook:</code></td><td>:left_right_arrow: <code>:left_right_arrow:</code></td><td>:arrow_up_down: <code>:arrow_up_down:</code></td></tr><tr><td>:arrow_up_small: <code>:arrow_up_small:</code></td><td>:arrows_clockwise: <code>:arrows_clockwise:</code></td><td>:arrows_counterclockwise: <code>:arrows_counterclockwise:</code></td></tr><tr><td>:rewind: <code>:rewind:</code></td><td>:fast_forward: <code>:fast_forward:</code></td><td>:information_source: <code>:information_source:</code></td></tr><tr><td>:ok: <code>:ok:</code></td><td>:twisted_rightwards_arrows: <code>:twisted_rightwards_arrows:</code></td><td>:repeat: <code>:repeat:</code></td></tr><tr><td>:repeat_one: <code>:repeat_one:</code></td><td>:new: <code>:new:</code></td><td>:top: <code>:top:</code></td></tr><tr><td>:up: <code>:up:</code></td><td>:cool: <code>:cool:</code></td><td>:free: <code>:free:</code></td></tr><tr><td>:ng: <code>:ng:</code></td><td>:cinema: <code>:cinema:</code></td><td>:koko: <code>:koko:</code></td></tr><tr><td>:signal_strength: <code>:signal_strength:</code></td><td>:u5272: <code>:u5272:</code></td><td>:u5408: <code>:u5408:</code></td></tr><tr><td>:u55b6: <code>:u55b6:</code></td><td>:u6307: <code>:u6307:</code></td><td>:u6708: <code>:u6708:</code></td></tr><tr><td>:u6709: <code>:u6709:</code></td><td>:u6e80: <code>:u6e80:</code></td><td>:u7121: <code>:u7121:</code></td></tr><tr><td>:u7533: <code>:u7533:</code></td><td>:u7a7a: <code>:u7a7a:</code></td><td>:u7981: <code>:u7981:</code></td></tr><tr><td>:sa: <code>:sa:</code></td><td>:restroom: <code>:restroom:</code></td><td>:mens: <code>:mens:</code></td></tr><tr><td>:womens: <code>:womens:</code></td><td>:baby_symbol: <code>:baby_symbol:</code></td><td>:no_smoking: <code>:no_smoking:</code></td></tr><tr><td>:parking: <code>:parking:</code></td><td>:wheelchair: <code>:wheelchair:</code></td><td>:metro: <code>:metro:</code></td></tr><tr><td>:baggage_claim: <code>:baggage_claim:</code></td><td>:accept: <code>:accept:</code></td><td>:wc: <code>:wc:</code></td></tr><tr><td>:potable_water: <code>:potable_water:</code></td><td>:put_litter_in_its_place: <code>:put_litter_in_its_place:</code></td><td>:secret: <code>:secret:</code></td></tr><tr><td>:congratulations: <code>:congratulations:</code></td><td>:m: <code>:m:</code></td><td>:passport_control: <code>:passport_control:</code></td></tr><tr><td>:left_luggage: <code>:left_luggage:</code></td><td>:customs: <code>:customs:</code></td><td>:ideograph_advantage: <code>:ideograph_advantage:</code></td></tr><tr><td>:cl: <code>:cl:</code></td><td>:sos: <code>:sos:</code></td><td>:id: <code>:id:</code></td></tr><tr><td>:no_entry_sign: <code>:no_entry_sign:</code></td><td>:underage: <code>:underage:</code></td><td>:no_mobile_phones: <code>:no_mobile_phones:</code></td></tr><tr><td>:do_not_litter: <code>:do_not_litter:</code></td><td>:non-potable_water: <code>:non-potable_water:</code></td><td>:no_bicycles: <code>:no_bicycles:</code></td></tr><tr><td>:no_pedestrians: <code>:no_pedestrians:</code></td><td>:children_crossing: <code>:children_crossing:</code></td><td>:no_entry: <code>:no_entry:</code></td></tr><tr><td>:eight_spoked_asterisk: <code>:eight_spoked_asterisk:</code></td><td>:eight_pointed_black_star: <code>:eight_pointed_black_star:</code></td><td>:heart_decoration: <code>:heart_decoration:</code></td></tr><tr><td>:vs: <code>:vs:</code></td><td>:vibration_mode: <code>:vibration_mode:</code></td><td>:mobile_phone_off: <code>:mobile_phone_off:</code></td></tr><tr><td>:chart: <code>:chart:</code></td><td>:currency_exchange: <code>:currency_exchange:</code></td><td>:aries: <code>:aries:</code></td></tr><tr><td>:taurus: <code>:taurus:</code></td><td>:gemini: <code>:gemini:</code></td><td>:cancer: <code>:cancer:</code></td></tr><tr><td>:leo: <code>:leo:</code></td><td>:virgo: <code>:virgo:</code></td><td>:libra: <code>:libra:</code></td></tr><tr><td>:scorpius: <code>:scorpius:</code></td><td>:sagittarius: <code>:sagittarius:</code></td><td>:capricorn: <code>:capricorn:</code></td></tr><tr><td>:aquarius: <code>:aquarius:</code></td><td>:pisces: <code>:pisces:</code></td><td>:ophiuchus: <code>:ophiuchus:</code></td></tr><tr><td>:six_pointed_star: <code>:six_pointed_star:</code></td><td>:negative_squared_cross_mark: <code>:negative_squared_cross_mark:</code></td><td>:a: <code>:a:</code></td></tr><tr><td>:b: <code>:b:</code></td><td>:ab: <code>:ab:</code></td><td>:o2: <code>:o2:</code></td></tr><tr><td>:diamond_shape_with_a_dot_inside: <code>:diamond_shape_with_a_dot_inside:</code></td><td>:recycle: <code>:recycle:</code></td><td>:end: <code>:end:</code></td></tr><tr><td>:on: <code>:on:</code></td><td>:soon: <code>:soon:</code></td><td>:clock1: <code>:clock1:</code></td></tr><tr><td>:clock130: <code>:clock130:</code></td><td>:clock10: <code>:clock10:</code></td><td>:clock1030: <code>:clock1030:</code></td></tr><tr><td>:clock11: <code>:clock11:</code></td><td>:clock1130: <code>:clock1130:</code></td><td>:clock12: <code>:clock12:</code></td></tr><tr><td>:clock1230: <code>:clock1230:</code></td><td>:clock2: <code>:clock2:</code></td><td>:clock230: <code>:clock230:</code></td></tr><tr><td>:clock3: <code>:clock3:</code></td><td>:clock330: <code>:clock330:</code></td><td>:clock4: <code>:clock4:</code></td></tr><tr><td>:clock430: <code>:clock430:</code></td><td>:clock5: <code>:clock5:</code></td><td>:clock530: <code>:clock530:</code></td></tr><tr><td>:clock6: <code>:clock6:</code></td><td>:clock630: <code>:clock630:</code></td><td>:clock7: <code>:clock7:</code></td></tr><tr><td>:clock730: <code>:clock730:</code></td><td>:clock8: <code>:clock8:</code></td><td>:clock830: <code>:clock830:</code></td></tr><tr><td>:clock9: <code>:clock9:</code></td><td>:clock930: <code>:clock930:</code></td><td>:heavy_dollar_sign: <code>:heavy_dollar_sign:</code></td></tr><tr><td>:copyright: <code>:copyright:</code></td><td>:registered: <code>:registered:</code></td><td>:tm: <code>:tm:</code></td></tr><tr><td>:x: <code>:x:</code></td><td>:heavy_exclamation_mark: <code>:heavy_exclamation_mark:</code></td><td>:bangbang: <code>:bangbang:</code></td></tr><tr><td>:interrobang: <code>:interrobang:</code></td><td>:o: <code>:o:</code></td><td>:heavy_multiplication_x: <code>:heavy_multiplication_x:</code></td></tr><tr><td>:heavy_plus_sign: <code>:heavy_plus_sign:</code></td><td>:heavy_minus_sign: <code>:heavy_minus_sign:</code></td><td>:heavy_division_sign: <code>:heavy_division_sign:</code></td></tr><tr><td>:white_flower: <code>:white_flower:</code></td><td>:100: <code>:100:</code></td><td>:heavy_check_mark: <code>:heavy_check_mark:</code></td></tr><tr><td>:ballot_box_with_check: <code>:ballot_box_with_check:</code></td><td>:radio_button: <code>:radio_button:</code></td><td>:link: <code>:link:</code></td></tr><tr><td>:curly_loop: <code>:curly_loop:</code></td><td>:wavy_dash: <code>:wavy_dash:</code></td><td>:part_alternation_mark: <code>:part_alternation_mark:</code></td></tr><tr><td>:trident: <code>:trident:</code></td><td>:black_square: <code>:black_square:</code></td><td>:white_square: <code>:white_square:</code></td></tr><tr><td>:white_check_mark: <code>:white_check_mark:</code></td><td>:black_square_button: <code>:black_square_button:</code></td><td>:white_square_button: <code>:white_square_button:</code></td></tr><tr><td>:black_circle: <code>:black_circle:</code></td><td>:white_circle: <code>:white_circle:</code></td><td>:red_circle: <code>:red_circle:</code></td></tr><tr><td>:large_blue_circle: <code>:large_blue_circle:</code></td><td>:large_blue_diamond: <code>:large_blue_diamond:</code></td><td>:large_orange_diamond: <code>:large_orange_diamond:</code></td></tr><tr><td>:small_blue_diamond: <code>:small_blue_diamond:</code></td><td>:small_orange_diamond: <code>:small_orange_diamond:</code></td><td>:small_red_triangle: <code>:small_red_triangle:</code></td></tr><tr><td>:small_red_triangle_down: <code>:small_red_triangle_down:</code></td><td>:shipit: <code>:shipit:</code></td><td></td></tr></tbody></table><p>[^1]: 来源 <a href="https://github.com/caiyongji/emoji-list" target="_blank" rel="noopener">emoji-list</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>others</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3865 【模板】ST表</title>
    <link href="/2020/04/15/P3865%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91ST%E8%A1%A8/"/>
    <url>/2020/04/15/P3865%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91ST%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目[^1]"></a>题目[^1]</h3><h4 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h4><p>这是一道 ST 表经典题——静态区间最大值</p><!--more--><p><strong>请注意最大数据时限只有 0.8s，数据强度不低，请务必保证你的每次查询复杂度为 $O(1)$。若使用更高时间复杂度算法不保证能通过。</strong></p><p>如果您认为您的代码时间复杂度正确但是 TLE，可以尝试使用快速读入：</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;<span class="hljs-keyword">int</span> x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<span class="hljs-keyword">char</span> ch=getchar();<span class="hljs-keyword">while</span> (!<span class="hljs-built_in">isdigit</span>(ch))&#123;<span class="hljs-keyword">if</span> (ch==<span class="hljs-string">'-'</span>) f=<span class="hljs-number">-1</span>;ch=getchar();&#125;<span class="hljs-keyword">while</span> (<span class="hljs-built_in">isdigit</span>(ch))&#123;x=x*<span class="hljs-number">10</span>+ch<span class="hljs-number">-48</span>;ch=getchar();&#125;<span class="hljs-keyword">return</span> x*f;&#125;</code></pre></div><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个长度为 $N$ 的数列，和 $M$ 次询问，求出每一次询问的区间内数字的最大值。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 $N, M$ ，分别表示数列的长度和询问的个数。</p><p>第二行包含 $N$ 个整数（记为 $a_i$），依次表示数列的第 $i$ 项。</p><p>接下来 $M$ 行，每行包含两个整数 $l_i, r_i$，表示查询的区间为 $[l_i, r_i]$</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出包含 $M$ 行，每行一个整数，依次表示每一次询问的结果。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><div class="hljs"><pre><code class="hljs basic"><span class="hljs-symbol">8 </span><span class="hljs-number">8</span><span class="hljs-symbol">9 </span><span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">7</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span> <span class="hljs-number">0</span> <span class="hljs-number">8</span><span class="hljs-symbol">1 </span><span class="hljs-number">6</span><span class="hljs-symbol">1 </span><span class="hljs-number">5</span><span class="hljs-symbol">2 </span><span class="hljs-number">7</span><span class="hljs-symbol">2 </span><span class="hljs-number">6</span><span class="hljs-symbol">1 </span><span class="hljs-number">8</span><span class="hljs-symbol">4 </span><span class="hljs-number">8</span><span class="hljs-symbol">3 </span><span class="hljs-number">7</span><span class="hljs-symbol">1 </span><span class="hljs-number">8</span></code></pre></div><p><strong>输出 #1</strong></p><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-number">9</span><span class="hljs-number">9</span><span class="hljs-number">7</span><span class="hljs-number">7</span><span class="hljs-number">9</span><span class="hljs-number">8</span><span class="hljs-number">7</span><span class="hljs-number">9</span></code></pre></div><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>对于 $30%$ 的数据，满足：$1 \leq N, M \leq 10$</p><p>对于 $70%$ 的数据，满足：$1 \leq N, M \leq {10}^5$</p><p>对于 $100%$ 的数据，满足： $1 \leq N \leq {10}^5, 1 \leq M \leq 2 \times {10}^6, a_i \in [0, {10}^9], 1 \leq l_i \leq r_i \leq N$</p><hr><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>ST 表是用于解决 $RMQ$ 问题的数据结构<br>$RMQ$ ，英文 $Range Maximum/Minimum Query$ 的缩写，即区间最大（最小）值</p><p>解决 $RMQ$ 问题有很多种方法，比如：<del>线段树，笛卡尔树</del>，然鹅这些高级的树我都不会啊啊啊，只好用 ST 表了</p><p>ST 表基于==倍增==思想，可以做到 $O(n logn)$  的预处理，  $O(1)$ 的查询，但是不支持修改操作。</p><p>我们用 $MAX_{i,j}$ 表示从 $a_i$ 开始 $2^j$ 个数的最大值，比如 $MAX_{1,0}$ 表示 $a_1$，$MAX_{1,1}$ 表示 $max(a_1,a_2)$</p><p>可以看看图片的例子，竖着看，看完一列再看下一列，应该就能理解了（B 站上一个视频里的，个人感觉思想讲的挺好的，可以看完再去 luogu 上看看题解的代码）<a href="https://www.bilibili.com/video/BV1pE411u7Gq?t=762" target="_blank" rel="noopener">视频链接</a></p><p><img src="https://cos.royce2003.top/55323/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>最后查询的时候将查询区间分成两段，比如查询 $1\sim7$ ，那就分成 $1\sim4$， $4\sim7$</p><p>$$<br>t = log_2(right - left + 1)\<br>4=r-2^t+1<br>$$</p><p>最后，$MAX[i][j]$ 中，$j = log_2n$</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> max std::max <span class="hljs-comment">//骚一下...</span></span><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> maxn = <span class="hljs-number">1e6</span> + <span class="hljs-number">10</span>;<span class="hljs-keyword">int</span> n, m, MAX[maxn][<span class="hljs-number">20</span>];<span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-keyword">bool</span> flag = <span class="hljs-number">0</span>; <span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>; <span class="hljs-keyword">char</span> ch = getchar();    <span class="hljs-keyword">while</span>(ch&lt;<span class="hljs-string">'0'</span> || ch&gt;<span class="hljs-string">'9'</span>) &#123;<span class="hljs-keyword">if</span>(ch == <span class="hljs-string">'-'</span>) flag = <span class="hljs-number">1</span>; ch = getchar();&#125;    <span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch &lt;= <span class="hljs-string">'9'</span>) &#123;x *= <span class="hljs-number">10</span>; x += ch - <span class="hljs-string">'0'</span>; ch = getchar();&#125;    <span class="hljs-keyword">return</span> flag ? - x : x;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ST</span><span class="hljs-params">()</span> </span>&#123;    n = read(), m = read();    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=n; i++)        MAX[i][<span class="hljs-number">0</span>] = read();    <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> maxLog = (<span class="hljs-keyword">int</span>)log2(n);    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>; j&lt;=maxLog; j++)        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=n-(<span class="hljs-number">1</span>&lt;&lt;j)+<span class="hljs-number">1</span>; i++)            MAX[i][j] = max(MAX[i][j<span class="hljs-number">-1</span>],MAX[i+(<span class="hljs-number">1</span>&lt;&lt;(j<span class="hljs-number">-1</span>))][j<span class="hljs-number">-1</span>]);&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Query</span><span class="hljs-params">(<span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r)</span> </span>&#123;    <span class="hljs-keyword">int</span> t = log2(r - l + <span class="hljs-number">1</span>);     <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, max(MAX[l][t], MAX[r-(<span class="hljs-number">1</span>&lt;&lt;t)+<span class="hljs-number">1</span>][t]));&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;    ST();    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>; i&lt;m; i++) &#123;        <span class="hljs-keyword">int</span> l = read(), r = read();        Query(l, r);    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><h3 id="P2251"><a href="#P2251" class="headerlink" title="P2251"></a>P2251</h3><p>然后再<del>水</del>一题 <a href="https://www.luogu.com.cn/problem/P2251" target="_blank" rel="noopener">P2251 质量检测</a><br>题目大意基本相同，不过这里是求 $min$<br>查询区间依次是$1\sim m$, $2\sim m+1$, $3\sim m+2$ …</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> min std::min <span class="hljs-comment">//倔强</span></span><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> maxn = <span class="hljs-number">1e6</span> + <span class="hljs-number">10</span>;<span class="hljs-keyword">int</span> n, m, MIN[maxn][<span class="hljs-number">21</span>];<span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-keyword">bool</span> flag = <span class="hljs-number">0</span>; <span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>; <span class="hljs-keyword">char</span> ch = getchar();    <span class="hljs-keyword">while</span>(ch&lt;<span class="hljs-string">'0'</span> || ch&gt;<span class="hljs-string">'9'</span>) &#123;<span class="hljs-keyword">if</span>(ch == <span class="hljs-string">'-'</span>) flag = <span class="hljs-number">1</span>; ch = getchar();&#125;    <span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch &lt;= <span class="hljs-string">'9'</span>) &#123;x *= <span class="hljs-number">10</span>; x += ch - <span class="hljs-string">'0'</span>; ch = getchar();&#125;    <span class="hljs-keyword">return</span> flag ? - x : x;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ST</span><span class="hljs-params">()</span> </span>&#123;    n = read(), m = read();    <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> maxLog = (<span class="hljs-keyword">int</span>)log2(n);    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=n; i++)        MIN[i][<span class="hljs-number">0</span>] = read();    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>; j&lt;=maxLog; j++)        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=n-(<span class="hljs-number">1</span>&lt;&lt;j)+<span class="hljs-number">1</span>; i++)            MIN[i][j] = min(MIN[i][j<span class="hljs-number">-1</span>],MIN[i+(<span class="hljs-number">1</span>&lt;&lt;(j<span class="hljs-number">-1</span>))][j<span class="hljs-number">-1</span>]);&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;    ST();    <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> Log2 = log2(m);     <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=n-m+<span class="hljs-number">1</span>; i++)        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, min(MIN[i][Log2], MIN[i+m-(<span class="hljs-number">1</span>&lt;&lt;Log2)][Log2]));    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P3865" target="_blank" rel="noopener">P3865 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OI</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Fluid 暗黑模式</title>
    <link href="/2020/04/02/Hexo%20Fluid%20%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F/"/>
    <url>/2020/04/02/Hexo%20Fluid%20%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">大</span><p>概花了一个晚上搞暗黑模式，之后几天陆续优化了下<br>目前博客已经基本上适配完成了<br>目前是三种方案（优先级递减）</p><ol><li>媒体查询</li><li>定时开启</li><li>localStorage/sessionStorage 查询<!--more--><code>媒体查询</code>，判断系统是否处于暗黑模式，支持大部分系统<br>Win10 需要浏览器开启深色模式<br>Android 同理，需要浏览器支持手机开启夜间模式的时候将自身切换到神色模式，目前 Chrome 支持，Edge 不支持，其他没测<br>iOS、MacOS 上的 Safari 也支持</li></ol><p><code>定时开启</code>，在规定时间自动开启，如果在该时间段内取消了暗黑模式，能一直保持</p><p><code>localStorage/sessionStorage 查询</code>，能一直保持某一个模式的依赖</p><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>在 <code>\themes\fluid\layout\layout.ejs</code> 中找到 <code>&lt;body&gt;</code>，在其之后加入如下代码</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dark"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"switchDarkMode()"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">var</span> isNight = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getHours() &gt;= <span class="hljs-number">22</span> || <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getHours() &lt; <span class="hljs-number">7</span>;</span><span class="actionscript">  <span class="hljs-keyword">if</span>( matchMedia(<span class="hljs-string">'(prefers-color-scheme: dark)'</span>).matches || isNight || localStorage.getItem(<span class="hljs-string">'dark'</span>) === <span class="hljs-string">'1'</span>) &#123;</span><span class="actionscript">    <span class="hljs-keyword">if</span>(!(isNight&amp;&amp;localStorage.getItem(<span class="hljs-string">'noDark'</span>) === <span class="hljs-string">'1'</span>)) &#123;</span><span class="javascript">      <span class="hljs-built_in">document</span>.body.classList.add(<span class="hljs-string">'dark'</span>);</span>    &#125;  &#125;<span class="javascript">  <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'dark'</span>).innerHTML = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">"body"</span>).classList.contains(<span class="hljs-string">"dark"</span>)?<span class="hljs-string">"🌙"</span>:<span class="hljs-string">"🌞"</span>;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><div class="note note-danger">            <p>注意！一定紧跟在 <code>body</code> 标签之后，否则会出现闪烁</p>          </div><h3 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h3><p>然后随便找个 JS 把下面代码加进去，直接加到 <code>&lt;/body&gt;</code> 之前也行</p><div class="hljs"><pre><code class="hljs js"><span class="hljs-comment">//点击事件</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">switchDarkMode</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-keyword">if</span> ($(<span class="hljs-string">'body'</span>).hasClass(<span class="hljs-string">'dark'</span>)) &#123;$(<span class="hljs-string">"#dark"</span>).html(<span class="hljs-string">"🌞"</span>);<span class="hljs-built_in">document</span>.body.classList.remove(<span class="hljs-string">'dark'</span>);localStorage.setItem(<span class="hljs-string">'noDark'</span>, <span class="hljs-string">'1'</span>);localStorage.setItem(<span class="hljs-string">'dark'</span>, <span class="hljs-string">'0'</span>);&#125; <span class="hljs-keyword">else</span> &#123;$(<span class="hljs-string">"#dark"</span>).html(<span class="hljs-string">"🌙"</span>); <span class="hljs-built_in">document</span>.body.classList.add(<span class="hljs-string">'dark'</span>);localStorage.setItem(<span class="hljs-string">'dark'</span>, <span class="hljs-string">'1'</span>);localStorage.setItem(<span class="hljs-string">'noDark'</span>, <span class="hljs-string">'0'</span>);&#125;&#125;</code></pre></div><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>在自定义 CSS 中加入代码</p><div class="note note-primary">            <p>可以用 <code>stylus</code>，能少些写<br>但是引入时记得后缀还是 <code>.css</code> 不要变</p>          </div><p>下面是我的样式代码，基本覆盖所有内容，根据自身情况修改</p><div class="hljs"><pre><code class="hljs stylus"><span class="hljs-comment">/* 切换按钮 */</span>#dark  <span class="hljs-attribute">cursor</span> pointer  <span class="hljs-attribute">position</span> fixed  <span class="hljs-attribute">right</span> <span class="hljs-number">40px</span>  <span class="hljs-attribute">bottom</span> <span class="hljs-number">98px</span>  <span class="hljs-attribute">width</span> <span class="hljs-number">16px</span>  <span class="hljs-attribute">height</span> <span class="hljs-number">14px</span>  <span class="hljs-attribute">z-index</span> <span class="hljs-number">100</span>  <span class="hljs-attribute">font-size</span> <span class="hljs-number">20px</span><span class="hljs-comment">/*暗黑模式*/</span>.dark  <span class="hljs-comment">/* 主体 */</span>  <span class="hljs-selector-id">#board</span>     <span class="hljs-attribute">background-color</span> <span class="hljs-number">#282c34</span>    <span class="hljs-attribute">color</span> <span class="hljs-number">#a09c9c</span>    <span class="hljs-selector-tag">img</span>      <span class="hljs-attribute">filter</span> brightness(<span class="hljs-number">50%</span>)  p  <span class="hljs-selector-class">.index-info</span> <span class="hljs-selector-tag">a</span>      <span class="hljs-attribute">color</span> <span class="hljs-number">#a09c9c</span> !important  .markdown-body    <span class="hljs-selector-tag">h1</span>,<span class="hljs-selector-tag">h2</span>,<span class="hljs-selector-tag">h3</span>,<span class="hljs-selector-tag">h4</span>,<span class="hljs-selector-tag">h5</span>,<span class="hljs-selector-tag">h6</span>,s,<span class="hljs-selector-tag">li</span>        <span class="hljs-attribute">color</span>:<span class="hljs-number">#a09c9c</span> !important      <span class="hljs-comment">/* 顶栏 */</span>  .navbar-col-show  <span class="hljs-selector-class">.top-nav-collapse</span>      <span class="hljs-attribute">background-color</span> <span class="hljs-number">#282c34</span>      <span class="hljs-selector-class">.navbar</span> <span class="hljs-selector-tag">a</span>      <span class="hljs-attribute">color</span> <span class="hljs-number">#a09c9c</span> !important      <span class="hljs-selector-class">.animated-icon</span> <span class="hljs-selector-tag">span</span>   <span class="hljs-comment">/* 手机端 */</span>    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#a09c9c</span>  <span class="hljs-comment">/* page-number */</span>  <span class="hljs-selector-class">.pagination</span> <span class="hljs-selector-tag">a</span>:hover  <span class="hljs-selector-class">.pagination</span> <span class="hljs-selector-class">.current</span>      <span class="hljs-attribute">background-color</span> <span class="hljs-number">#6b6b6b</span>73;  <span class="hljs-comment">/* 打字机 */</span>  #subtitle  <span class="hljs-selector-class">.dark</span>.typed-<span class="hljs-attribute">cursor</span>--blink  .scroll-down-arrow    <span class="hljs-attribute">color</span> <span class="hljs-number">#dfdfdf</span>  <span class="hljs-comment">/* back to top */</span>  #scroll-<span class="hljs-attribute">top</span>-button    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#282c34</span>    i      <span class="hljs-attribute">color</span> <span class="hljs-number">#a09c9c</span>      <span class="hljs-comment">/* Toc */</span>  <span class="hljs-selector-class">.tocbot-list</span> a    <span class="hljs-attribute">color</span> <span class="hljs-number">#a09c9c</span>  .tocbot-active-link  <span class="hljs-selector-tag">footer</span> <span class="hljs-selector-tag">a</span>:hover    <span class="hljs-attribute">color</span> <span class="hljs-number">#1abc9c</span> !important  <span class="hljs-comment">/* footer */</span>  footer  <span class="hljs-selector-tag">footer</span> a    <span class="hljs-attribute">color</span> <span class="hljs-number">#a09c9c</span>      <span class="hljs-comment">/* 归档页 */</span>  .list-group-item    <span class="hljs-attribute">color</span> <span class="hljs-number">#a09c9c</span>    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#282c34</span>      <span class="hljs-selector-class">.list-group-item</span>:hover  <span class="hljs-selector-class">.tagcloud</span> <span class="hljs-selector-tag">a</span>:hover    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#46484d</span>  <span class="hljs-comment">/* 友链页 */</span>  .links    <span class="hljs-selector-class">.card</span>        <span class="hljs-attribute">background-color</span> <span class="hljs-number">#282c34</span>            <span class="hljs-selector-class">.card-body</span>:hover        <span class="hljs-attribute">background-color</span> <span class="hljs-number">#46484d</span>            .link-title    <span class="hljs-selector-class">.link-intro</span>        <span class="hljs-attribute">color</span> <span class="hljs-number">#a09c9c</span>      <span class="hljs-comment">/* note标签 可能这配色有点丑 */</span>  .note-info    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#3b5359</span>    <span class="hljs-attribute">border-color</span> <span class="hljs-number">#006d80</span>  .note-danger    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#783f42</span>    <span class="hljs-attribute">border-color</span> <span class="hljs-number">#670009</span>  .note-success    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#2a3e2e</span>    <span class="hljs-attribute">border-color</span> <span class="hljs-number">#005915</span>  .note-warning    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#5b543e</span>    <span class="hljs-attribute">border-color</span> <span class="hljs-number">#846500</span>  .note-primary    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#455a6f</span>    <span class="hljs-attribute">border-color</span> <span class="hljs-number">#004188</span></code></pre></div><h3 id="localStorage-还是-sessionStorage"><a href="#localStorage-还是-sessionStorage" class="headerlink" title="localStorage 还是 sessionStorage"></a>localStorage 还是 sessionStorage</h3><p>仔细观察刚刚的 js 代码，在其中用的是 localStorage<br>除了 localStorage，你还可以用 sessionStorage<br>两者的区别也非常简单</p><blockquote><p>localStorage：除非被手动清除，否则将会永久保存。<br>sessionStorage： 仅在当前网页会话下有效，关闭页面或浏览器后就会被清除。</p></blockquote><p>举个简单例子，如果现在是白天（即没有触发夜间自动开启暗黑模式）<br>你手动点击切换成了暗黑模式，当你关闭当前网页再次进入时<br>如果你用的是 localStorage，那么此时就还是暗黑模式<br>而如果你用的是 sessionStorage，此时就不是暗黑模式了</p><p>两者的使用方法相同<br>直接替换就可以了</p><p>感谢 <span class="label label-success"> <a href=https://crosschannel.cc>@track13</a></span> 建议</p><div class="note note-info">            <p>sessionStorage 在手机浏览器上问题很多，不推荐使用</p>          </div><p>下面是支持该特性的最低版本<br><img src="https://cos.royce2003.top/41212/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>可以在浏览器控制台中查看他们的值<br><img src="https://cos.royce2003.top/41212/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><hr><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://crosschannel.cc/daily/hexo%E6%B7%BB%E5%8A%A0%E6%9A%97%E8%89%B2%E6%A8%A1%E5%BC%8F.html" target="_blank" rel="noopener">面向小白的Hexo添加暗色模式教程 | 宅日记</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Fluid 瞎折腾</title>
    <link href="/2020/04/01/Hexo%20Fluid%20%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    <url>/2020/04/01/Hexo%20Fluid%20%E7%9E%8E%E6%8A%98%E8%85%BE/</url>
    
    <content type="html"><![CDATA[<div class="note note-primary">            <p>2020.04.10 新增超好看的复选框<br>2020.04.13 更新动态背景代码<br>2020.04.28 自定义返回顶部图片和球形标签云<br>==随着主题的更新，文中的代码可能失效或引起错误，请自行修改==</p>          </div><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><span class="drop-cap">好</span><p>像还没有看到大佬写关于 Fluid 折腾的文章，就开了这个坑<br>文章放了源码进来，所以挺长的，大部分是改 CSS，JS 很少<br>首先，按照 Fluid 配置文件中的方法，新建自定义 CSS 和 JS<br>建议创建 .styl 而不是 .css<br>下方代码会是 .styl，因为写着更省事…</p><div class="note note-danger">            <p>不管是什么，配置文件中都填 <code>.css</code></p>          </div><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">custom_js:</span> <span class="hljs-string">/js/custom.js</span> <span class="hljs-comment"># 指定自定义 js 文件路径，路径是相对 source 目录，如 /js/custom.js</span><span class="hljs-attr">custom_css:</span> <span class="hljs-string">/css/custom.css</span> <span class="hljs-comment"># 指定自定义 css 文件路径，路径是相对 source 目录，如 /css/custom.css</span><span class="hljs-attr">custom_html:</span> <span class="hljs-string">''</span>  <span class="hljs-comment"># 自定义底部 HTML 内容（位于 footer 上方），也可用于外部引入 js css 这些操作，注意不要和 post.custom 配置冲突</span></code></pre></div><h3 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h3><p>[^1]</p><p>主题本身采用的是头图滚动视差，非常 nice，但我可能更喜欢花里胡哨吧<br>自定义 CSS 中加入如下代码</p><div class="hljs"><pre><code class="hljs stylus">.slideshow  <span class="hljs-attribute">position</span>: fixed;   <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;   <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;   .slideshow-image    <span class="hljs-attribute">position</span>: fixed;     <span class="hljs-attribute">background-size</span>: cover;    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>; <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;     <span class="hljs-attribute">background</span>: repeat <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>;     <span class="hljs-attribute">animation-name</span>: kenburns;    <span class="hljs-attribute">animation-timing-function</span>: linear;    <span class="hljs-attribute">animation-iteration-count</span>: infinite;    <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">24s</span>; <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;    <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>);    <span class="hljs-attribute">filter</span>: brightness(<span class="hljs-number">70%</span>) //背景遮罩，<span class="hljs-number">100%</span> 正常，<span class="hljs-number">0%</span> 完全黑色    &amp;:nth-child(<span class="hljs-number">1</span>)&#123;-webkit-<span class="hljs-attribute">animation-name</span>: kenburns-<span class="hljs-number">1</span>; <span class="hljs-attribute">animation-name</span>: kenburns-<span class="hljs-number">1</span>; <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">2</span>;&#125;    &amp;:nth-child(<span class="hljs-number">2</span>)&#123;-webkit-<span class="hljs-attribute">animation-name</span>: kenburns-<span class="hljs-number">2</span>; <span class="hljs-attribute">animation-name</span>: kenburns-<span class="hljs-number">2</span>; <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">3</span>;&#125;    &amp;:nth-child(<span class="hljs-number">3</span>)&#123;-webkit-<span class="hljs-attribute">animation-name</span>: kenburns-<span class="hljs-number">3</span>; <span class="hljs-attribute">animation-name</span>: kenburns-<span class="hljs-number">3</span>; <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">4</span>;&#125;    &amp;:nth-child(<span class="hljs-number">4</span>)&#123;-webkit-<span class="hljs-attribute">animation-name</span>: kenburns-<span class="hljs-number">4</span>; <span class="hljs-attribute">animation-name</span>: kenburns-<span class="hljs-number">4</span>; <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">5</span>;&#125;@keyframes kenburns-<span class="hljs-number">1</span>&#123;<span class="hljs-number">0%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>);&#125; <span class="hljs-number">1.5625%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;&#125; <span class="hljs-number">23.4375%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;&#125; <span class="hljs-number">26.5625%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1</span>);&#125; <span class="hljs-number">100%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>);&#125; <span class="hljs-number">98.4375%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.21176</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.21176</span>);&#125; <span class="hljs-number">100%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;&#125;&#125;@keyframes kenburns-<span class="hljs-number">2</span>&#123;<span class="hljs-number">23.4375%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>);&#125; <span class="hljs-number">26.5625%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;&#125; <span class="hljs-number">48.4375%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;&#125; <span class="hljs-number">51.5625%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1</span>);&#125; <span class="hljs-number">100%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>);&#125;&#125;@keyframes kenburns-<span class="hljs-number">3</span>&#123;<span class="hljs-number">48.4375%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>);&#125; <span class="hljs-number">51.5625%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;&#125; <span class="hljs-number">73.4375%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;&#125; <span class="hljs-number">76.5625%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1</span>);&#125; <span class="hljs-number">100%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>);&#125;&#125;@keyframes kenburns-<span class="hljs-number">4</span>&#123;<span class="hljs-number">73.4375%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.2</span>);&#125; <span class="hljs-number">76.5625%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;&#125; <span class="hljs-number">98.4375%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;&#125; <span class="hljs-number">100%</span>&#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1</span>); <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1</span>);&#125;&#125;</code></pre></div><p>接着在 <code>themes\fluid\layout\layout.ejs</code> 中 <code>&lt;body&gt;</code> 后加入如下代码<br><code>background-image: url</code> 中填入图片链接</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"slideshow"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"slideshow-image"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-image: url('1')"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"slideshow-image"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-image: url('2')"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"slideshow-image"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-image: url('3')"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"slideshow-image"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-image: url('4')"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><p>然后取消原本头图的获取<br>用最简单的方法，直接删去获取头图的代码，保留标签(代码前面的减号是吧这行删掉的意思，加号同理)</p><div class="hljs"><pre><code class="hljs diff">  &lt;header style="height: &lt;%- banner_img_height %&gt;vh;"&gt;    &lt;%- partial('_partial/nav') %&gt; <span class="hljs-deletion">-    &lt;div class="view intro-2" id="background" &lt;%- theme.banner_parallax &amp;&amp; 'parallax=true' %&gt;</span><span class="hljs-deletion">-      style="background: url('&lt;%- url_for(banner_img) %&gt;') no-repeat center center;</span><span class="hljs-deletion">-        background-size: cover;"&gt;</span><span class="hljs-addition">+    &lt;div class="view intro-2" id="background"&gt;</span>      &lt;div class="full-bg-img"&gt;        &lt;div class="mask flex-center"&gt;</code></pre></div><p>将主题配置中<span class="label label-danger">所有</span>头图的黑色蒙版设为 0</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0</span>  <span class="hljs-comment"># 头图黑色蒙版的透明度，available: 0 - 1.0， 0 是完全透明（无蒙版），1 是完全不透明</span></code></pre></div><p>如果出现背景跟随滚动，请在配置文件中关闭头图滚动视差</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">banner_parallax:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 头图滚动视差</span></code></pre></div><p>因为是依赖 <code>z-index</code> 实现的切换，建议图片大小递增排序，避免第一张图还没加载出来，第二张图先出现的情况</p><h3 id="侧边滚动条"><a href="#侧边滚动条" class="headerlink" title="侧边滚动条"></a>侧边滚动条</h3><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-pseudo">::-webkit-scrollbar-button</span>  <span class="hljs-selector-tag">display</span> <span class="hljs-selector-tag">none</span><span class="hljs-selector-pseudo">::-webkit-scrollbar</span>  <span class="hljs-selector-tag">width</span> 10<span class="hljs-selector-tag">px</span>  <span class="hljs-selector-tag">height</span> 10<span class="hljs-selector-tag">px</span>  <span class="hljs-selector-tag">background-color</span>: <span class="hljs-selector-id">#2f415452</span><span class="hljs-selector-pseudo">::-webkit-scrollbar-thumb</span>  <span class="hljs-selector-tag">border-radius</span> 5<span class="hljs-selector-tag">px</span>  <span class="hljs-selector-tag">background-color</span> <span class="hljs-selector-id">#2f4154</span>  <span class="hljs-selector-tag">background-image</span> <span class="hljs-selector-tag">-webkit-linear-gradient</span>(45<span class="hljs-selector-tag">deg</span>,<span class="hljs-selector-tag">rgba</span>(255,255,255,<span class="hljs-selector-class">.2</span>) 25%,<span class="hljs-selector-tag">transparent</span> 25%,<span class="hljs-selector-tag">transparent</span> 50%,<span class="hljs-selector-tag">rgba</span>(255,255,255,<span class="hljs-selector-class">.2</span>) 50%,<span class="hljs-selector-tag">rgba</span>(255,255,255,<span class="hljs-selector-class">.2</span>) 75%,<span class="hljs-selector-tag">transparent</span> 75%,<span class="hljs-selector-tag">transparent</span>)  &amp;<span class="hljs-selector-pseudo">:hover</span>    <span class="hljs-selector-tag">background-color</span> <span class="hljs-selector-id">#2f4154b8</span>;</code></pre></div><div class="note note-info">            <p>会同时对所有滚动条生效</p>          </div><h3 id="返回顶部按钮"><a href="#返回顶部按钮" class="headerlink" title="返回顶部按钮"></a>返回顶部按钮</h3><p>增加动画</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-id">#scroll-top-button</span>   <span class="hljs-selector-tag">border-radius</span> 25<span class="hljs-selector-tag">px</span>  <span class="hljs-selector-tag">-webkit-transition</span> <span class="hljs-selector-tag">all</span> <span class="hljs-selector-class">.6s</span>  <span class="hljs-selector-tag">-moz-transition</span> <span class="hljs-selector-tag">all</span> <span class="hljs-selector-class">.6s</span>  <span class="hljs-selector-tag">-o-transition</span> <span class="hljs-selector-tag">all</span> <span class="hljs-selector-class">.6s</span>  <span class="hljs-selector-tag">transition</span> <span class="hljs-selector-tag">all</span> <span class="hljs-selector-class">.6s</span>  &amp;<span class="hljs-selector-pseudo">:hover</span>     <span class="hljs-selector-tag">transform</span> <span class="hljs-selector-tag">scale</span>(1<span class="hljs-selector-class">.2</span>)    <span class="hljs-selector-tag">border-radius</span> 20%</code></pre></div><p>或者来试试这个样式</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/20200305084052.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><p>自定义 CSS 加入下方代码</p><div class="hljs"><pre><code class="hljs stylus">#scroll-<span class="hljs-attribute">top</span>-button  <span class="hljs-attribute">right</span> <span class="hljs-number">50px</span> !important  <span class="hljs-attribute">width</span> <span class="hljs-number">70px</span>  <span class="hljs-attribute">height</span> <span class="hljs-number">651px</span>  <span class="hljs-attribute">top</span> -<span class="hljs-number">90px</span>  <span class="hljs-attribute">background</span> url(<span class="hljs-string">"/img/scroll.png"</span>); <span class="hljs-comment">/* 图片路径 */</span>  <span class="hljs-attribute">box-shadow</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-comment">/* 去除外边框的阴影 */</span>  &amp; &gt; i    <span class="hljs-attribute">display</span> none <span class="hljs-comment">/* 隐藏一个小箭头图标，否则会在图片上出现箭头 */</span></code></pre></div><p>最后附上图片地址</p><a class="btn" href="https://cdn.jsdelivr.net/gh/Royce2019/img/img/scroll.png"  target="_blank">点我下载</a><p>（图源网，侵删）</p><h3 id="标题前-Emoji"><a href="#标题前-Emoji" class="headerlink" title="标题前 Emoji"></a>标题前 Emoji</h3><p>[^2]</p><div class="hljs"><pre><code class="hljs stylus"><span class="hljs-comment">/* 想在手机端也显示，去除最外层的 @media，并更改缩进 */</span>@media (<span class="hljs-attribute">min-width</span>:<span class="hljs-number">768px</span>)   <span class="hljs-selector-class">.post-content</span>     <span class="hljs-selector-tag">h1</span>::before      <span class="hljs-attribute">content</span>: <span class="hljs-string">"🌈"</span>;      <span class="hljs-attribute">visibility</span>: visible;      <span class="hljs-attribute">display</span>: inline;    <span class="hljs-selector-tag">h2</span>::before      <span class="hljs-attribute">content</span>: <span class="hljs-string">"🚀"</span>;      <span class="hljs-attribute">visibility</span>: visible;      <span class="hljs-attribute">display</span>: inline;    <span class="hljs-selector-tag">h3</span>::before      <span class="hljs-attribute">content</span>: <span class="hljs-string">"🔍"</span>;      <span class="hljs-attribute">visibility</span>: visible;      <span class="hljs-attribute">display</span>: inline;</code></pre></div><h3 id="首页图片动画"><a href="#首页图片动画" class="headerlink" title="首页图片动画"></a>首页图片动画</h3><p>鼠标触碰放大</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.index-img</span>  <span class="hljs-selector-tag">transition</span>: <span class="hljs-selector-class">.4s</span>;<span class="hljs-selector-class">.index-card</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.index-img</span>  <span class="hljs-selector-tag">transform</span>: <span class="hljs-selector-tag">scale</span>(1<span class="hljs-selector-class">.1</span>);  <span class="hljs-selector-tag">box-shadow</span>: 0 5<span class="hljs-selector-tag">px</span> 11<span class="hljs-selector-tag">px</span> 0 <span class="hljs-selector-tag">rgba</span>(0,0,0,0<span class="hljs-selector-class">.38</span>), 0 4<span class="hljs-selector-tag">px</span> 15<span class="hljs-selector-tag">px</span> 0 <span class="hljs-selector-tag">rgba</span>(0,0,0,0<span class="hljs-selector-class">.35</span>);</code></pre></div><h3 id="底部及-TOC-样式更改"><a href="#底部及-TOC-样式更改" class="headerlink" title="底部及 TOC 样式更改"></a>底部及 TOC 样式更改</h3><p>因为之前的动态背景添加了遮罩导致底部链接等看不起</p><div class="hljs"><pre><code class="hljs stylus"><span class="hljs-selector-class">.tocbot-list</span> a<span class="hljs-selector-id">#toc</span>, <span class="hljs-selector-tag">footer</span>, <span class="hljs-selector-tag">footer</span> a  <span class="hljs-attribute">color</span> <span class="hljs-number">#ffffff</span><span class="hljs-selector-tag">footer</span> <span class="hljs-selector-tag">a</span>:hover.tocbot-active-link  <span class="hljs-attribute">color</span> <span class="hljs-number">#1abc9c</span> !important</code></pre></div><h3 id="标题文字特效"><a href="#标题文字特效" class="headerlink" title="标题文字特效"></a>标题文字特效</h3><p><img src="https://cos.royce2003.top/60394/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="演示"></p><p>文字触碰动画（源网，找不到原站链接了）</p><div class="hljs"><pre><code class="hljs stylus"><span class="hljs-comment">/* 注意避免类名相同造成样式冲突 */</span><span class="hljs-selector-class">.link</span> &#123;  <span class="hljs-attribute">outline</span>: none;  <span class="hljs-attribute">text-decoration</span>: none;  <span class="hljs-attribute">position</span>: relative;  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2em</span>;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#9e9ba4</span>;  <span class="hljs-attribute">display</span>: inline-block;&#125;<span class="hljs-selector-class">.link--kukuri</span> &#123;  <span class="hljs-attribute">text-transform</span>: uppercase;  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#2f4144</span>;&#125;<span class="hljs-selector-class">.link--kukuri</span>:hover &#123;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#2f4144</span>;&#125;<span class="hljs-selector-class">.link--kukuri</span>::after &#123;  <span class="hljs-attribute">content</span>: <span class="hljs-string">''</span>;  <span class="hljs-attribute">position</span>: absolute;  <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">top</span>: <span class="hljs-number">42%</span>;  <span class="hljs-attribute">margin</span>: auto;  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;  <span class="hljs-attribute">background</span>: <span class="hljs-number">#F9F9F9</span>;  -webkit-<span class="hljs-attribute">transform</span>: translate3d(-<span class="hljs-number">100%</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);  <span class="hljs-attribute">transform</span>: translate3d(-<span class="hljs-number">100%</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);  -webkit-<span class="hljs-attribute">transition</span>: -webkit-transform <span class="hljs-number">0.4s</span>;  <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.4s</span>;  -webkit-<span class="hljs-attribute">transition-timing-function</span>: cubic-bezier(<span class="hljs-number">0.7</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.3</span>,<span class="hljs-number">1</span>);  <span class="hljs-attribute">transition-timing-function</span>: cubic-bezier(<span class="hljs-number">0.7</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.3</span>,<span class="hljs-number">1</span>);&#125;<span class="hljs-selector-class">.link--kukuri</span>:hover::after &#123;  -webkit-<span class="hljs-attribute">transform</span>: translate3d(<span class="hljs-number">100%</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);  <span class="hljs-attribute">transform</span>: translate3d(<span class="hljs-number">100%</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);&#125;<span class="hljs-selector-class">.link--kukuri</span>::before &#123;  <span class="hljs-attribute">border</span>:<span class="hljs-number">0px</span> solid;  <span class="hljs-attribute">content</span>: attr(data-letters);  <span class="hljs-attribute">position</span>: absolute;  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">2</span>;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff779a</span>;  <span class="hljs-attribute">white-space</span>: nowrap;  <span class="hljs-attribute">width</span>: <span class="hljs-number">0%</span>;  -webkit-<span class="hljs-attribute">transition</span>: width <span class="hljs-number">0.4s</span> <span class="hljs-number">0.3s</span>;  <span class="hljs-attribute">transition</span>: width <span class="hljs-number">0.4s</span> <span class="hljs-number">0.3s</span>;&#125;<span class="hljs-selector-class">.link--kukuri</span>:hover::before &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;&#125;</code></pre></div><p>然后在你想显示的地方插入如下 HTML</p><div class="note note-primary">            <p>data-letters 中需要和内容保持一致<br>不用 a 标签也可以，保证类名正确</p>          </div><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"link link--kukuri"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"test.test"</span> <span class="hljs-attr">data-letters</span>=<span class="hljs-string">"test"</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><h3 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h3><p>在 <code>themes\hexo-theme-fluid-master\layout\</code> 中新建 <code>messageboard.ejs</code> 文件<br>先写上头图之类的设定</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">%</span></span><span class="hljs-tag"><span class="hljs-attr">page.layout</span> = <span class="hljs-string">"messageboard"</span></span><span class="hljs-tag"><span class="hljs-attr">page.title</span> = <span class="hljs-string">theme.messageboard.title</span> || <span class="hljs-attr">__</span>('<span class="hljs-attr">messageboard.title</span>')</span><span class="hljs-tag"><span class="hljs-attr">page.subtitle</span> = <span class="hljs-string">theme.messageboard.subtitle</span> || <span class="hljs-attr">__</span>('<span class="hljs-attr">messageboard.subtitle</span>')</span><span class="hljs-tag"><span class="hljs-attr">page.banner_img</span> = <span class="hljs-string">theme.messageboard.banner_img</span></span><span class="hljs-tag"><span class="hljs-attr">page.banner_img_height</span> = <span class="hljs-string">theme.messageboard.banner_img_height</span></span><span class="hljs-tag">%&gt;</span></code></pre></div><p>然后在配置文件中加入相应内容，当然，你也可以直接在上面的代码中指定</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-comment">#---------------------------</span><span class="hljs-comment"># 留言板页</span><span class="hljs-comment"># Messageboard Page</span><span class="hljs-comment">#---------------------------</span><span class="hljs-attr">messageboard:</span>  <span class="hljs-attr">banner_img:</span> <span class="hljs-comment"># 头图</span>  <span class="hljs-attr">banner_img_height:</span>  <span class="hljs-comment"># available: 0 - 100</span>  <span class="hljs-attr">subtitle:</span>  <span class="hljs-comment"># 打字机内容</span></code></pre></div><p>语言文件中也是一样的，这里就不写了</p><h4 id="引入评论"><a href="#引入评论" class="headerlink" title="引入评论"></a>引入评论</h4><p>刚刚创建的 ejs 文件中</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- Comments --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container comments mx-auto"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"comments"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">%</span> <span class="hljs-attr">if</span>(<span class="hljs-attr">theme.post.comments.enable</span>) &#123; %&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">%</span> <span class="hljs-attr">var</span> <span class="hljs-attr">type</span> = <span class="hljs-string">'_partial/comments/'</span> + <span class="hljs-attr">theme.post.comments.type</span> %&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">%-</span> <span class="hljs-attr">partial</span>(<span class="hljs-attr">type</span>) %&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">%</span> &#125; %&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><p>自定义内容写在评论代码之前就好了，支持 HTML</p><p>然后两种方法开启，二选一即可</p><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>在根目录的 <code>source</code> 文件夹中创建 <code>messageboard.md</code><br>并在 <code>front-matter</code> 中加上 <code>layout: messageboard</code><br>和 about 界面的方法一样</p><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p>在 <code>themes\fluid\scripts\pages.js</code> 文件中加入如下代码</p><div class="hljs"><pre><code class="hljs js"><span class="hljs-comment">// generate messageboard page</span>hexo.extend.generator.register(<span class="hljs-string">'_messageboard'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">locals</span>) </span>&#123;  <span class="hljs-keyword">return</span> &#123;    path: <span class="hljs-string">'messageboard/index.html'</span>,    data: locals.theme,    layout: <span class="hljs-string">'messageboard'</span>,  &#125;;&#125;);</code></pre></div><h3 id="更好看的音乐播放器"><a href="#更好看的音乐播放器" class="headerlink" title="更好看的音乐播放器"></a>更好看的音乐播放器</h3><p>[^3]</p><p>本身的 aplayer 个人觉得并不是很好看，而且是全局的<br>换了给好看点的播放器，在指定页面加载<br>需要加载的页面加入</p><p><img src="https://cos.royce2003.top/60394/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h4 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h4><p>自定义 js 里加入</p><div class="hljs"><pre><code class="hljs js">(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> dr = $(<span class="hljs-string">"#dowebok"</span>);    <span class="hljs-keyword">if</span>(!dr.length &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;    dr.append(<span class="hljs-string">"&lt;div id=\"player\"&gt;&lt;div id=\"player-track\"&gt;&lt;div id=\"album-name\"&gt;&lt;/div&gt;&lt;div id=\"track-name\"&gt;&lt;/div&gt;&lt;div id=\"track-time\"&gt;&lt;div id=\"current-time\"&gt;&lt;/div&gt;&lt;div id=\"track-length\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=\"s-area\"&gt;&lt;div id=\"ins-time\"&gt;&lt;/div&gt;&lt;div id=\"s-hover\"&gt;&lt;/div&gt;&lt;div id=\"seek-bar\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=\"player-content\"&gt;&lt;div id=\"album-art\"&gt;&lt;img src=\"images/1.jpg\" class=\"active\" id=\"album-pic\"&gt;&lt;div id=\"buffer-box\"&gt;加载中...&lt;/div&gt;&lt;/div&gt;&lt;div id=\"player-controls\"&gt;&lt;div class=\"control\"&gt;&lt;div class=\"player-button\" id=\"play-previous\"&gt;&lt;i class=\"fas fa-backward\"&gt;&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"control\"&gt;&lt;div class=\"player-button\" id=\"play-pause-button\"&gt;&lt;i class=\"fas fa-play\"&gt;&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"control\"&gt;&lt;div class=\"player-button\" id=\"play-next\"&gt;&lt;i class=\"fas fa-forward\"&gt;&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;"</span>);    <span class="hljs-keyword">var</span> playerTrack = $(<span class="hljs-string">"#player-track"</span>),        albumName = $(<span class="hljs-string">'#album-name'</span>),        trackName = $(<span class="hljs-string">'#track-name'</span>),        albumArt = $(<span class="hljs-string">'#album-art'</span>),        sArea = $(<span class="hljs-string">'#s-area'</span>),        seekBar = $(<span class="hljs-string">'#seek-bar'</span>),        trackTime = $(<span class="hljs-string">'#track-time'</span>),        insTime = $(<span class="hljs-string">'#ins-time'</span>),        sHover = $(<span class="hljs-string">'#s-hover'</span>),        playPauseButton = $(<span class="hljs-string">"#play-pause-button"</span>),        i = playPauseButton.find(<span class="hljs-string">'i'</span>),        tProgress = $(<span class="hljs-string">'#current-time'</span>),        tTime = $(<span class="hljs-string">'#track-length'</span>),        seekT, seekLoc, seekBarPos, cM, ctMinutes, ctSeconds, curMinutes, curSeconds, durMinutes, durSeconds, playProgress, bTime, nTime = <span class="hljs-number">0</span>,        buffInterval = <span class="hljs-literal">null</span>,        tFlag = <span class="hljs-literal">false</span>,        playPreviousTrackButton = $(<span class="hljs-string">'#play-previous'</span>),        playNextTrackButton = $(<span class="hljs-string">'#play-next'</span>);    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playPause</span>(<span class="hljs-params"></span>) </span>&#123;        setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;            <span class="hljs-keyword">if</span> (audio.paused) &#123;                playerTrack.addClass(<span class="hljs-string">'active'</span>);                albumArt.addClass(<span class="hljs-string">'active'</span>);                checkBuffering();                i.attr(<span class="hljs-string">'class'</span>, <span class="hljs-string">'fas fa-pause'</span>);                audio.play();            &#125; <span class="hljs-keyword">else</span> &#123;                playerTrack.removeClass(<span class="hljs-string">'active'</span>);                albumArt.removeClass(<span class="hljs-string">'active'</span>);                clearInterval(buffInterval);                albumArt.removeClass(<span class="hljs-string">'buffering'</span>);                i.attr(<span class="hljs-string">'class'</span>, <span class="hljs-string">'fas fa-play'</span>);                audio.pause();            &#125;        &#125;, <span class="hljs-number">300</span>);    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">showHover</span>(<span class="hljs-params">event</span>) </span>&#123;        seekBarPos = sArea.offset();        seekT = event.clientX - seekBarPos.left;        seekLoc = audio.duration * (seekT / sArea.outerWidth());        sHover.width(seekT);        cM = seekLoc / <span class="hljs-number">60</span>;        ctMinutes = <span class="hljs-built_in">Math</span>.floor(cM);        ctSeconds = <span class="hljs-built_in">Math</span>.floor(seekLoc - ctMinutes * <span class="hljs-number">60</span>);        <span class="hljs-keyword">if</span> ((ctMinutes &lt; <span class="hljs-number">0</span>) || (ctSeconds &lt; <span class="hljs-number">0</span>)) <span class="hljs-keyword">return</span>;        <span class="hljs-keyword">if</span> (ctMinutes &lt; <span class="hljs-number">10</span>) ctMinutes = <span class="hljs-string">'0'</span> + ctMinutes;        <span class="hljs-keyword">if</span> (ctSeconds &lt; <span class="hljs-number">10</span>) ctSeconds = <span class="hljs-string">'0'</span> + ctSeconds;        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(ctMinutes) || <span class="hljs-built_in">isNaN</span>(ctSeconds)) insTime.text(<span class="hljs-string">'--:--'</span>);        <span class="hljs-keyword">else</span> insTime.text(ctMinutes + <span class="hljs-string">':'</span> + ctSeconds);        insTime.css(&#123;            <span class="hljs-string">'left'</span>: seekT,            <span class="hljs-string">'margin-left'</span>: <span class="hljs-string">'-21px'</span>        &#125;).fadeIn(<span class="hljs-number">0</span>);    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hideHover</span>(<span class="hljs-params"></span>) </span>&#123;        sHover.width(<span class="hljs-number">0</span>);        insTime.text(<span class="hljs-string">'00:00'</span>).css(&#123;            <span class="hljs-string">'left'</span>: <span class="hljs-string">'0px'</span>,            <span class="hljs-string">'margin-left'</span>: <span class="hljs-string">'0px'</span>        &#125;).fadeOut(<span class="hljs-number">0</span>);    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playFromClickedPos</span>(<span class="hljs-params"></span>) </span>&#123;        audio.currentTime = seekLoc;        seekBar.width(seekT);        hideHover();    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateCurrTime</span>(<span class="hljs-params"></span>) </span>&#123;        nTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();        nTime = nTime.getTime();        <span class="hljs-keyword">if</span> (!tFlag) &#123;            tFlag = <span class="hljs-literal">true</span>;            trackTime.addClass(<span class="hljs-string">'active'</span>);        &#125;        curMinutes = <span class="hljs-built_in">Math</span>.floor(audio.currentTime / <span class="hljs-number">60</span>);        curSeconds = <span class="hljs-built_in">Math</span>.floor(audio.currentTime - curMinutes * <span class="hljs-number">60</span>);        durMinutes = <span class="hljs-built_in">Math</span>.floor(audio.duration / <span class="hljs-number">60</span>);        durSeconds = <span class="hljs-built_in">Math</span>.floor(audio.duration - durMinutes * <span class="hljs-number">60</span>);        playProgress = (audio.currentTime / audio.duration) * <span class="hljs-number">100</span>;        <span class="hljs-keyword">if</span> (curMinutes &lt; <span class="hljs-number">10</span>) curMinutes = <span class="hljs-string">'0'</span> + curMinutes;        <span class="hljs-keyword">if</span> (curSeconds &lt; <span class="hljs-number">10</span>) curSeconds = <span class="hljs-string">'0'</span> + curSeconds;        <span class="hljs-keyword">if</span> (durMinutes &lt; <span class="hljs-number">10</span>) durMinutes = <span class="hljs-string">'0'</span> + durMinutes;        <span class="hljs-keyword">if</span> (durSeconds &lt; <span class="hljs-number">10</span>) durSeconds = <span class="hljs-string">'0'</span> + durSeconds;        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(curMinutes) || <span class="hljs-built_in">isNaN</span>(curSeconds)) tProgress.text(<span class="hljs-string">'00:00'</span>);        <span class="hljs-keyword">else</span> tProgress.text(curMinutes + <span class="hljs-string">':'</span> + curSeconds);        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(durMinutes) || <span class="hljs-built_in">isNaN</span>(durSeconds)) tTime.text(<span class="hljs-string">'00:00'</span>);        <span class="hljs-keyword">else</span> tTime.text(durMinutes + <span class="hljs-string">':'</span> + durSeconds);        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(curMinutes) || <span class="hljs-built_in">isNaN</span>(curSeconds) || <span class="hljs-built_in">isNaN</span>(durMinutes) || <span class="hljs-built_in">isNaN</span>(durSeconds)) trackTime.removeClass(<span class="hljs-string">'active'</span>);        <span class="hljs-keyword">else</span> trackTime.addClass(<span class="hljs-string">'active'</span>);        seekBar.width(playProgress + <span class="hljs-string">'%'</span>);        <span class="hljs-keyword">if</span> (playProgress == <span class="hljs-number">100</span>) &#123;            i.attr(<span class="hljs-string">'class'</span>, <span class="hljs-string">'fa fa-play'</span>);            seekBar.width(<span class="hljs-number">0</span>);            tProgress.text(<span class="hljs-string">'00:00'</span>);            albumArt.removeClass(<span class="hljs-string">'buffering'</span>).removeClass(<span class="hljs-string">'active'</span>);            clearInterval(buffInterval);        &#125;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkBuffering</span>(<span class="hljs-params"></span>) </span>&#123;        clearInterval(buffInterval);        buffInterval = setInterval(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;            <span class="hljs-keyword">if</span> ((nTime == <span class="hljs-number">0</span>) || (bTime - nTime) &gt; <span class="hljs-number">1000</span>) albumArt.addClass(<span class="hljs-string">'buffering'</span>);            <span class="hljs-keyword">else</span> albumArt.removeClass(<span class="hljs-string">'buffering'</span>);            bTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();            bTime = bTime.getTime();        &#125;, <span class="hljs-number">100</span>);    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">selectTrack2</span>(<span class="hljs-params">flag</span>) </span>&#123;        <span class="hljs-comment">//歌单api调用 https://api.uomg.com/doc-rand.music.html</span>        $.getJSON(<span class="hljs-string">'https://api.uomg.com/api/rand.music?'</span>, &#123;            sort: <span class="hljs-string">"热歌榜"</span>, <span class="hljs-comment">//选择输出分类[热歌榜|新歌榜|飙升榜|抖音榜|电音榜]，为空输出热歌榜</span>            <span class="hljs-comment">// mid: 12345,歌单 id</span>            <span class="hljs-comment">// sort mid 二选一</span>            format: <span class="hljs-string">'json'</span>        &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">json, textStatus</span>) </span>&#123;            <span class="hljs-keyword">if</span> (json.code == <span class="hljs-number">1</span>) &#123;                <span class="hljs-keyword">if</span> (flag == <span class="hljs-number">0</span>) i.attr(<span class="hljs-string">'class'</span>, <span class="hljs-string">'fa fa-play'</span>);                <span class="hljs-keyword">else</span> &#123;                    albumArt.removeClass(<span class="hljs-string">'buffering'</span>);                    i.attr(<span class="hljs-string">'class'</span>, <span class="hljs-string">'fa fa-pause'</span>);                &#125;                seekBar.width(<span class="hljs-number">0</span>);                trackTime.removeClass(<span class="hljs-string">'active'</span>);                tProgress.text(<span class="hljs-string">'00:00'</span>);                tTime.text(<span class="hljs-string">'00:00'</span>);                currAlbum = json.data.artistsname;                currTrackName = json.data.name;                currArtwork = json.data.picurl;                audio.src = json.data.url;                nTime = <span class="hljs-number">0</span>;                bTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();                bTime = bTime.getTime();                <span class="hljs-keyword">if</span> (flag != <span class="hljs-number">0</span>) &#123;                    audio.play();                    playerTrack.addClass(<span class="hljs-string">'active'</span>);                    albumArt.addClass(<span class="hljs-string">'active'</span>);                    clearInterval(buffInterval);                    checkBuffering();                &#125;                albumName.text(currAlbum);                trackName.text(currTrackName);                albumArt.find(<span class="hljs-string">'img.active'</span>).removeClass(<span class="hljs-string">'active'</span>);                $(<span class="hljs-string">'#album-pic'</span>).addClass(<span class="hljs-string">'active'</span>);                $(<span class="hljs-string">'#album-pic'</span>).attr(<span class="hljs-string">'src'</span>,currArtwork);            &#125;        &#125;);    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initPlayer</span>(<span class="hljs-params"></span>) </span>&#123;        audio = <span class="hljs-keyword">new</span> Audio();        selectTrack2(<span class="hljs-number">1</span>); <span class="hljs-comment">//非0自动播放</span>        audio.loop = <span class="hljs-literal">false</span>;        playPauseButton.on(<span class="hljs-string">'click'</span>, playPause);        sArea.mousemove(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;            showHover(event);        &#125;);        sArea.mouseout(hideHover);        sArea.on(<span class="hljs-string">'click'</span>, playFromClickedPos);        $(audio).on(<span class="hljs-string">'timeupdate'</span>, updateCurrTime);        playPreviousTrackButton.on(<span class="hljs-string">'click'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;            selectTrack2(<span class="hljs-number">-1</span>);        &#125;);        playNextTrackButton.on(<span class="hljs-string">'click'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;            selectTrack2(<span class="hljs-number">1</span>);        &#125;);    &#125;    initPlayer();&#125;)();</code></pre></div><h4 id="CSS-1"><a href="#CSS-1" class="headerlink" title="CSS"></a>CSS</h4><p>自定义 CSS 中加入</p><div class="hljs"><pre><code class="hljs stylus">#dowebok  <span class="hljs-attribute">right</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">left</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">width</span> <span class="hljs-number">430px</span>  <span class="hljs-attribute">height</span> <span class="hljs-number">100px</span>  <span class="hljs-attribute">margin</span> <span class="hljs-number">100px</span> auto <span class="hljs-number">100px</span>#player  <span class="hljs-attribute">position</span> relative  <span class="hljs-attribute">height</span> <span class="hljs-number">100%</span>  <span class="hljs-attribute">z-index</span> <span class="hljs-number">3</span>#player-track  <span class="hljs-attribute">position</span> absolute  <span class="hljs-attribute">top</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">right</span> <span class="hljs-number">15px</span>  <span class="hljs-attribute">left</span> <span class="hljs-number">15px</span>  <span class="hljs-attribute">padding</span> <span class="hljs-number">13px</span> <span class="hljs-number">22px</span> <span class="hljs-number">10px</span> <span class="hljs-number">184px</span>  <span class="hljs-attribute">background-color</span> <span class="hljs-number">#fff7f7</span>  <span class="hljs-attribute">border-radius</span> <span class="hljs-number">15px</span> <span class="hljs-number">15px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">transition</span> <span class="hljs-number">0.3s</span> ease top  <span class="hljs-attribute">z-index</span> <span class="hljs-number">1</span>  &amp;.active    <span class="hljs-attribute">top</span> -<span class="hljs-number">80px</span><span class="hljs-selector-id">#album-name</span>   <span class="hljs-attribute">color</span> <span class="hljs-number">#54576f</span>  <span class="hljs-attribute">font-size</span> <span class="hljs-number">17px</span>  <span class="hljs-attribute">font-weight</span> bold#track-name  <span class="hljs-attribute">color</span> <span class="hljs-number">#acaebd</span>  <span class="hljs-attribute">font-size</span> <span class="hljs-number">11px</span>  <span class="hljs-attribute">white-space</span>: nowrap;   <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;   <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-attribute">text-overflow</span>:ellipsis;#track-time  <span class="hljs-attribute">height</span> <span class="hljs-number">12px</span>  <span class="hljs-attribute">margin-bottom</span> <span class="hljs-number">3px</span>  &amp;.active    <span class="hljs-selector-id">#current-time</span>, #track-length      <span class="hljs-attribute">color</span> <span class="hljs-number">#f86d92</span>;      <span class="hljs-attribute">background-color</span> transparent<span class="hljs-selector-id">#current-time</span>   <span class="hljs-attribute">float</span> left<span class="hljs-selector-id">#track-length</span>   <span class="hljs-attribute">float</span> right<span class="hljs-selector-id">#current-time</span>,#track-length  <span class="hljs-attribute">color</span> transparent  <span class="hljs-attribute">font-size</span> <span class="hljs-number">11px</span>  <span class="hljs-attribute">background-color</span> <span class="hljs-number">#ffe8ee</span>  <span class="hljs-attribute">border-radius</span> <span class="hljs-number">10px</span>  <span class="hljs-attribute">transition</span> <span class="hljs-number">0.3s</span> ease all<span class="hljs-selector-id">#s-area</span>,#seek-bar  <span class="hljs-attribute">position</span> relative  <span class="hljs-attribute">height</span> <span class="hljs-number">4px</span>  <span class="hljs-attribute">border-radius</span> <span class="hljs-number">4px</span>#s-area  <span class="hljs-attribute">background-color</span> <span class="hljs-number">#ffe8ee</span>  <span class="hljs-attribute">cursor</span> pointer<span class="hljs-selector-id">#ins-time</span>   <span class="hljs-attribute">position</span> absolute  <span class="hljs-attribute">top</span> -<span class="hljs-number">29px</span>  <span class="hljs-attribute">color</span> <span class="hljs-number">#fff</span>  <span class="hljs-attribute">font-size</span> <span class="hljs-number">12px</span>  <span class="hljs-attribute">white-space</span> pre  <span class="hljs-attribute">padding</span> <span class="hljs-number">5px</span> <span class="hljs-number">6px</span>  <span class="hljs-attribute">border-radius</span> <span class="hljs-number">4px</span>  <span class="hljs-attribute">display</span> none;  <span class="hljs-attribute">background-color</span> <span class="hljs-number">#3b3d50</span>#s-hover  <span class="hljs-attribute">position</span> absolute  <span class="hljs-attribute">top</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">bottom</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">left</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">opacity</span> <span class="hljs-number">0.2</span>  <span class="hljs-attribute">z-index</span> <span class="hljs-number">2</span>  <span class="hljs-attribute">background-color</span> <span class="hljs-number">#3b3d50</span>#seek-bar  <span class="hljs-attribute">content</span> <span class="hljs-string">''</span>  <span class="hljs-attribute">position</span> absolute  <span class="hljs-attribute">top</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">bottom</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">left</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">width</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">background-color</span> <span class="hljs-number">#fd6d94</span>  <span class="hljs-attribute">transition</span> <span class="hljs-number">0.2s</span> ease width  <span class="hljs-attribute">z-index</span> <span class="hljs-number">1</span>#player-<span class="hljs-attribute">content</span>  <span class="hljs-attribute">position</span> relative  <span class="hljs-attribute">height</span> <span class="hljs-number">100%</span>  <span class="hljs-attribute">background-color</span> <span class="hljs-number">#fff</span>  <span class="hljs-attribute">box-shadow</span> <span class="hljs-number">0</span> <span class="hljs-number">30px</span> <span class="hljs-number">80px</span> <span class="hljs-number">#656565</span>  <span class="hljs-attribute">border-radius</span> <span class="hljs-number">15px</span>  <span class="hljs-attribute">z-index</span> <span class="hljs-number">2</span>#album-art  <span class="hljs-attribute">position</span> absolute  <span class="hljs-attribute">top</span> -<span class="hljs-number">40px</span>  <span class="hljs-attribute">width</span> <span class="hljs-number">115px</span>  <span class="hljs-attribute">height</span> <span class="hljs-number">115px</span>  <span class="hljs-attribute">margin-left</span> <span class="hljs-number">40px</span>  -webkit-<span class="hljs-attribute">transform</span> rotateZ(<span class="hljs-number">0</span>)  <span class="hljs-attribute">transform</span> rotateZ(<span class="hljs-number">0</span>)  <span class="hljs-attribute">transition</span> <span class="hljs-number">0.3s</span> ease all  <span class="hljs-attribute">box-shadow</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-number">#fff</span>  <span class="hljs-attribute">border-radius</span> <span class="hljs-number">50%</span>  <span class="hljs-attribute">overflow</span> hidden  .buffering    #buffer-box      <span class="hljs-attribute">opacity</span> <span class="hljs-number">1</span>    img      <span class="hljs-attribute">opacity</span> <span class="hljs-number">0.25</span>      .active        <span class="hljs-attribute">opacity</span> <span class="hljs-number">0.8</span>        <span class="hljs-attribute">filter</span> blur(<span class="hljs-number">2px</span>)        -webkit-<span class="hljs-attribute">filter</span> blur(<span class="hljs-number">2px</span>)  <span class="hljs-selector-tag">img</span>     <span class="hljs-attribute">display</span> block;    <span class="hljs-attribute">position</span> absolute;    <span class="hljs-attribute">top</span> <span class="hljs-number">0</span>;    <span class="hljs-attribute">left</span> <span class="hljs-number">0</span>;    <span class="hljs-attribute">width</span> <span class="hljs-number">100%</span>;    <span class="hljs-attribute">height</span> <span class="hljs-number">100%</span>;    <span class="hljs-attribute">opacity</span> <span class="hljs-number">0</span>;    <span class="hljs-attribute">z-index</span> -<span class="hljs-number">1</span>;    <span class="hljs-attribute">transition</span> <span class="hljs-number">0.1s</span> linear all    &amp;<span class="hljs-selector-class">.active</span>       <span class="hljs-attribute">opacity</span> <span class="hljs-number">1</span>;      <span class="hljs-attribute">z-index</span> <span class="hljs-number">1</span>;  &amp;<span class="hljs-selector-class">.active</span>     <span class="hljs-attribute">top</span> -<span class="hljs-number">60px</span>    <span class="hljs-attribute">box-shadow</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-number">#fff7f7</span>, <span class="hljs-number">0</span> <span class="hljs-number">30px</span> <span class="hljs-number">50px</span> -<span class="hljs-number">15px</span> <span class="hljs-number">#afb7c1</span>    <span class="hljs-selector-tag">img</span><span class="hljs-selector-class">.active</span>       <span class="hljs-attribute">z-index</span> <span class="hljs-number">1</span>;      -webkit-<span class="hljs-attribute">animation</span> rotateAlbumArt <span class="hljs-number">3s</span> linear <span class="hljs-number">0s</span> infinite forwards;      <span class="hljs-attribute">animation</span> rotateAlbumArt <span class="hljs-number">3s</span> linear <span class="hljs-number">0s</span> infinite forwards;  &amp;::before     <span class="hljs-attribute">content</span> <span class="hljs-string">''</span>    <span class="hljs-attribute">position</span> absolute    <span class="hljs-attribute">top</span> <span class="hljs-number">50%</span>    <span class="hljs-attribute">right</span> <span class="hljs-number">0</span>    <span class="hljs-attribute">left</span> <span class="hljs-number">0</span>    <span class="hljs-attribute">width</span> <span class="hljs-number">20px</span>    <span class="hljs-attribute">height</span> <span class="hljs-number">20px</span>    <span class="hljs-attribute">margin</span> -<span class="hljs-number">10px</span> auto <span class="hljs-number">0</span> auto    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#d6dee7</span>    <span class="hljs-attribute">border-radius</span> <span class="hljs-number">50%</span>    <span class="hljs-attribute">box-shadow</span> inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-number">#fff</span>    <span class="hljs-attribute">z-index</span> <span class="hljs-number">2</span>@-webkit-keyframes rotateAlbumArt  <span class="hljs-number">0%</span>    -webkit-<span class="hljs-attribute">transform</span>: rotateZ(<span class="hljs-number">0</span>)    <span class="hljs-attribute">transform</span>: rotateZ(<span class="hljs-number">0</span>)  <span class="hljs-number">100%</span>    -webkit-<span class="hljs-attribute">transform</span>: rotateZ(<span class="hljs-number">360deg</span>)    <span class="hljs-attribute">transform</span>: rotateZ(<span class="hljs-number">360deg</span>)@keyframes rotateAlbumArt  <span class="hljs-number">0%</span>    -webkit-<span class="hljs-attribute">transform</span>: rotateZ(<span class="hljs-number">0</span>)    <span class="hljs-attribute">transform</span>: rotateZ(<span class="hljs-number">0</span>)  <span class="hljs-number">100%</span>    -webkit-<span class="hljs-attribute">transform</span>: rotateZ(<span class="hljs-number">360deg</span>)    <span class="hljs-attribute">transform</span>: rotateZ(<span class="hljs-number">360deg</span>)#buffer-box  <span class="hljs-attribute">position</span> absolute  <span class="hljs-attribute">top</span> <span class="hljs-number">50%</span>  <span class="hljs-attribute">right</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">left</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">height</span> <span class="hljs-number">13px</span>  <span class="hljs-attribute">color</span> <span class="hljs-number">#1f1f1f</span>  <span class="hljs-attribute">font-size</span> <span class="hljs-number">13px</span>  <span class="hljs-attribute">font-family</span> Helvetica  <span class="hljs-attribute">text-align</span> center  <span class="hljs-attribute">font-weight</span> bold  <span class="hljs-attribute">line-height</span> <span class="hljs-number">1</span>  <span class="hljs-attribute">padding</span> <span class="hljs-number">6px</span>  <span class="hljs-attribute">margin</span> -<span class="hljs-number">12px</span> auto <span class="hljs-number">0</span> auto  <span class="hljs-attribute">background-color</span> rgba(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.19</span>)  <span class="hljs-attribute">opacity</span> <span class="hljs-number">0</span>  <span class="hljs-attribute">z-index</span> <span class="hljs-number">2</span>  <span class="hljs-attribute">transition</span> <span class="hljs-number">0.1s</span> linear all#player-controls  <span class="hljs-attribute">width</span> <span class="hljs-number">250px</span>  <span class="hljs-attribute">height</span> <span class="hljs-number">100%</span>  <span class="hljs-attribute">margin</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">0</span> <span class="hljs-number">141px</span>  <span class="hljs-attribute">float</span> right  <span class="hljs-attribute">overflow</span> hidden.control  <span class="hljs-attribute">width</span> <span class="hljs-number">33.333%</span>  <span class="hljs-attribute">float</span> left  <span class="hljs-attribute">padding</span> <span class="hljs-number">12px</span> <span class="hljs-number">0</span>.player-button  <span class="hljs-attribute">padding</span> <span class="hljs-number">25px</span>  <span class="hljs-attribute">background-color</span> <span class="hljs-number">#fff</span>  <span class="hljs-attribute">border-radius</span> <span class="hljs-number">6px</span>  <span class="hljs-attribute">cursor</span> pointer  <span class="hljs-attribute">transition</span> <span class="hljs-number">0.2s</span> ease all  i    <span class="hljs-attribute">display</span> block    <span class="hljs-attribute">color</span> <span class="hljs-number">#d6dee7</span>    <span class="hljs-attribute">font-size</span> <span class="hljs-number">26px</span>    <span class="hljs-attribute">text-align</span> center    <span class="hljs-attribute">line-height</span> <span class="hljs-number">1</span>    <span class="hljs-attribute">transition</span> <span class="hljs-number">0.2s</span> ease all  &amp;:hover    <span class="hljs-attribute">background-color</span> <span class="hljs-number">#d6d6de</span>    i      <span class="hljs-attribute">color</span> <span class="hljs-number">#fff</span>@media (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">768px</span>)  #dowebok    <span class="hljs-attribute">width</span> <span class="hljs-number">95%</span>    <span class="hljs-attribute">height</span> <span class="hljs-number">20vw</span>  #player-controls    <span class="hljs-attribute">width</span> <span class="hljs-number">175px</span>  .player-button    <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>    i      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>    &amp;:hover      <span class="hljs-attribute">background-color</span> <span class="hljs-number">#000</span>0      i        <span class="hljs-attribute">color</span> <span class="hljs-number">#d6dee7</span>  #album-art    <span class="hljs-attribute">width</span> <span class="hljs-number">30%</span>    <span class="hljs-attribute">height</span> <span class="hljs-number">0</span>    <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">30%</span>  #album-name    <span class="hljs-attribute">font-size</span> <span class="hljs-number">15px</span>  #track-name    <span class="hljs-attribute">font-size</span> <span class="hljs-number">10px</span></code></pre></div><p>上方的 css 已经放在 GitHub 中，若想直接引用，可在上方 JS 想办法引进去，或者在需要的界面加进去<br>不建议加到全局，毕竟不是所有界面都需要（其实影响也不是很大）</p><p>CDN🔗 <a href="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/css/music.min.css" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/css/music.min.css</a></p><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>需要加载的页面（md 或者 ejs）中加入</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dowebok"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><p>可能会出现遮挡问题，自己通过 <code>&lt;br&gt;</code> 调整就好了</p><p>js 和 css，源自<a href="https://www.yanghuaxing.com/blog/547.html" target="_blank" rel="noopener">链接</a><br>稍作修改，手机端适配我可能没怎么写好 <del>(就那么几行能适配完美才怪)</del><br>暗黑模式也没适配这个<br>音乐来源见 js 代码块的 114、115 行，可选自己的网易歌单或者热歌榜等排行榜</p><p>直接把源码部署到一个地方拿来代替用也非常不错，毕竟很好看，再用 Edge 安装在电脑上，嘻嘻嘻</p><h3 id="可交互复选框"><a href="#可交互复选框" class="headerlink" title="可交互复选框"></a>可交互复选框</h3><p>[^4]</p><p>已 PR 至主题，可前往主题更新并通过 Tag 标签使用<br>但主题只内置了方形选框，下方新增</p><div><input type="radio" disabled="" checked=""><p>圆形选框</p></div><div><input type="checkbox" disabled="" checked=""><p>方形选框</p></div><div><input type="checkbox" class="red" disabled="" checked=""><p>可选颜色</p></div><p>下方只介绍 HTML 用法<br>自定义 CSS 中添加以下代码</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">input</span>  <span class="hljs-selector-tag">-webkit-appearance</span>: <span class="hljs-selector-tag">none</span>;  <span class="hljs-selector-tag">-moz-appearance</span>: <span class="hljs-selector-tag">none</span>;  <span class="hljs-selector-tag">-ms-appearance</span>: <span class="hljs-selector-tag">none</span>;  <span class="hljs-selector-tag">-o-appearance</span>: <span class="hljs-selector-tag">none</span>;  <span class="hljs-selector-tag">appearance</span>: <span class="hljs-selector-tag">none</span>;  <span class="hljs-selector-tag">position</span>: <span class="hljs-selector-tag">relative</span>;  <span class="hljs-selector-tag">right</span>: 0;  <span class="hljs-selector-tag">bottom</span>: 0;  <span class="hljs-selector-tag">left</span>: 0;  <span class="hljs-selector-tag">height</span>: 20<span class="hljs-selector-tag">px</span>;  <span class="hljs-selector-tag">width</span>: 20<span class="hljs-selector-tag">px</span>;  <span class="hljs-selector-tag">transition</span><span class="hljs-selector-pseudo">:all</span> <span class="hljs-selector-class">.15s</span> <span class="hljs-selector-tag">ease-out</span> 0<span class="hljs-selector-tag">s</span>;  <span class="hljs-selector-tag">color</span>: <span class="hljs-selector-id">#fff</span>;  <span class="hljs-selector-tag">cursor</span>: <span class="hljs-selector-tag">pointer</span>;  <span class="hljs-selector-tag">display</span>: <span class="hljs-selector-tag">inline-block</span>;  <span class="hljs-selector-tag">margin</span>: <span class="hljs-selector-class">.4rem</span> <span class="hljs-selector-class">.2rem</span> <span class="hljs-selector-class">.4rem</span> !<span class="hljs-selector-tag">important</span>;  <span class="hljs-selector-tag">outline</span>: <span class="hljs-selector-tag">none</span>;  <span class="hljs-selector-tag">border-radius</span>: 10%;<span class="hljs-comment">/* Checkbox */</span><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=checkbox]</span>  <span class="hljs-selector-tag">vertical-align</span>: <span class="hljs-selector-tag">-0</span><span class="hljs-selector-class">.65rem</span>;  &amp;<span class="hljs-selector-pseudo">:before</span>, &amp;<span class="hljs-selector-pseudo">:after</span>    <span class="hljs-selector-tag">position</span>: <span class="hljs-selector-tag">absolute</span>;    <span class="hljs-selector-tag">content</span>: "";    <span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#fff</span>;    <span class="hljs-selector-tag">transition</span>: <span class="hljs-selector-tag">all</span> <span class="hljs-selector-class">.2s</span> <span class="hljs-selector-tag">ease-in-out</span>;  &amp;<span class="hljs-selector-pseudo">:before</span>    <span class="hljs-selector-tag">left</span>: 2<span class="hljs-selector-tag">px</span>;    <span class="hljs-selector-tag">top</span>: 6<span class="hljs-selector-tag">px</span>;    <span class="hljs-selector-tag">width</span>: 0;    <span class="hljs-selector-tag">height</span>: 2<span class="hljs-selector-tag">px</span>;    <span class="hljs-selector-tag">transform</span>: <span class="hljs-selector-tag">rotate</span>(45<span class="hljs-selector-tag">deg</span>);    <span class="hljs-selector-tag">-webkit-transform</span>: <span class="hljs-selector-tag">rotate</span>(45<span class="hljs-selector-tag">deg</span>);    <span class="hljs-selector-tag">-moz-transform</span>: <span class="hljs-selector-tag">rotate</span>(45<span class="hljs-selector-tag">deg</span>);    <span class="hljs-selector-tag">-ms-transform</span>: <span class="hljs-selector-tag">rotate</span>(45<span class="hljs-selector-tag">deg</span>);    <span class="hljs-selector-tag">-o-transform</span>: <span class="hljs-selector-tag">rotate</span>(45<span class="hljs-selector-tag">deg</span>);  &amp;<span class="hljs-selector-pseudo">:after</span>    <span class="hljs-selector-tag">right</span>: 9<span class="hljs-selector-tag">px</span>;    <span class="hljs-selector-tag">bottom</span>: 3<span class="hljs-selector-tag">px</span>;    <span class="hljs-selector-tag">width</span>: 2<span class="hljs-selector-tag">px</span>;    <span class="hljs-selector-tag">height</span>: 0;    <span class="hljs-selector-tag">transform</span>: <span class="hljs-selector-tag">rotate</span>(40<span class="hljs-selector-tag">deg</span>);    <span class="hljs-selector-tag">-webkit-transform</span>: <span class="hljs-selector-tag">rotate</span>(40<span class="hljs-selector-tag">deg</span>);    <span class="hljs-selector-tag">-moz-transform</span>: <span class="hljs-selector-tag">rotate</span>(40<span class="hljs-selector-tag">deg</span>);    <span class="hljs-selector-tag">-ms-transform</span>: <span class="hljs-selector-tag">rotate</span>(40<span class="hljs-selector-tag">deg</span>);    <span class="hljs-selector-tag">-o-transform</span>: <span class="hljs-selector-tag">rotate</span>(40<span class="hljs-selector-tag">deg</span>);    <span class="hljs-selector-tag">transition-delay</span>: <span class="hljs-selector-class">.2s</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span>    &amp;<span class="hljs-selector-pseudo">:before</span>      <span class="hljs-selector-tag">left</span>: 1<span class="hljs-selector-tag">px</span>;      <span class="hljs-selector-tag">top</span>: 10<span class="hljs-selector-tag">px</span>;      <span class="hljs-selector-tag">width</span>: 6<span class="hljs-selector-tag">px</span>;      <span class="hljs-selector-tag">height</span>: 2<span class="hljs-selector-tag">px</span>;    &amp;<span class="hljs-selector-pseudo">:after</span>       <span class="hljs-selector-tag">right</span>: 5<span class="hljs-selector-tag">px</span>;      <span class="hljs-selector-tag">bottom</span>: 1<span class="hljs-selector-tag">px</span>;      <span class="hljs-selector-tag">width</span>: 2<span class="hljs-selector-tag">px</span>;      <span class="hljs-selector-tag">height</span>: 14<span class="hljs-selector-tag">px</span>;<span class="hljs-comment">/* radio */</span><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=radio]</span>  <span class="hljs-selector-tag">vertical-align</span>: <span class="hljs-selector-tag">-0</span><span class="hljs-selector-class">.7rem</span>;  <span class="hljs-selector-tag">border-radius</span>: 50%;  &amp;<span class="hljs-selector-pseudo">:before</span>    <span class="hljs-selector-tag">content</span>: "";    <span class="hljs-selector-tag">display</span>: <span class="hljs-selector-tag">block</span>;    <span class="hljs-selector-tag">width</span>: 10<span class="hljs-selector-tag">px</span>;    <span class="hljs-selector-tag">height</span>: 10<span class="hljs-selector-tag">px</span>;    <span class="hljs-selector-tag">border-radius</span>: 50%;    <span class="hljs-selector-tag">margin</span>: <span class="hljs-selector-class">.2rem</span>;    <span class="hljs-selector-tag">transform</span>: <span class="hljs-selector-tag">scale</span>(0);    <span class="hljs-selector-tag">transition</span>: <span class="hljs-selector-tag">all</span> <span class="hljs-selector-tag">ease-out</span> 250<span class="hljs-selector-tag">ms</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span><span class="hljs-selector-pseudo">:before</span>    <span class="hljs-selector-tag">transform</span>: <span class="hljs-selector-tag">scale</span>(1);<span class="hljs-comment">/* Colors */</span><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=checkbox]</span>  <span class="hljs-selector-tag">border</span>: 2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-id">#4caf50</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span>, &amp;<span class="hljs-selector-pseudo">:indeterminate</span>    <span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#4caf50</span>;<span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=radio]</span>  <span class="hljs-selector-tag">border</span>: 2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-id">#4caf50</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span><span class="hljs-selector-pseudo">:before</span>    <span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#4caf50</span>;<span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=checkbox]</span><span class="hljs-selector-class">.blue</span>  <span class="hljs-selector-tag">border</span>: 2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-id">#2196f3</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span>, &amp;<span class="hljs-selector-pseudo">:indeterminate</span>    <span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#2196f3</span>;<span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=radio]</span><span class="hljs-selector-class">.blue</span>  <span class="hljs-selector-tag">border</span>: 2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-id">#2196f3</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span><span class="hljs-selector-pseudo">:before</span>    <span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#2196f3</span>;<span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=checkbox]</span><span class="hljs-selector-class">.red</span>  <span class="hljs-selector-tag">border</span>: 2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-id">#f44336</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span>, &amp;<span class="hljs-selector-pseudo">:indeterminate</span>    <span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#f44336</span>;<span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=radio]</span><span class="hljs-selector-class">.red</span>  <span class="hljs-selector-tag">border</span>: 2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-id">#f44336</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span><span class="hljs-selector-pseudo">:before</span>    <span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#f44336</span>;<span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=checkbox]</span><span class="hljs-selector-class">.orange</span>  <span class="hljs-selector-tag">border</span>: 2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-id">#ffc107</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span>, &amp;<span class="hljs-selector-pseudo">:indeterminate</span>    <span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#ffc107</span>;<span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=radio]</span><span class="hljs-selector-class">.orange</span>  <span class="hljs-selector-tag">border</span>: 2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-id">#ffc107</span>;  &amp;<span class="hljs-selector-pseudo">:checked</span><span class="hljs-selector-pseudo">:before</span>    <span class="hljs-selector-tag">background</span>: <span class="hljs-selector-id">#ffc107</span>;</code></pre></div><p>用法</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span>&gt;</span></code></pre></div><div><input type="checkbox" class="green" disabled=""><p>左边是 <code>type=checkbox</code></p></div><div><input type="radio" disabled=""><p>左边是 <code>type=radio</code></p></div><p>默认绿色，设置颜色，只需要加上 class 就行。<br>目前 class 有 <code>blue</code> <code>red</code> <code>orange</code>，可自行更改 CSS</p><p>默认是方形没有打勾，圆形没有选中<br>加上 chencked 就会默认选中<br>如下方代码</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">chencked</span>&gt;</span></code></pre></div><div><input type="checkbox" class="blue" disabled="" checked=""><p>左边是选中的</p></div><div><input class="red" type="radio" checked="" disabled=""><p>左边是选中的</p></div><h3 id="球形标签云"><a href="#球形标签云" class="headerlink" title="球形标签云"></a>球形标签云</h3><p>[^5]</p><p><code>hexo-tag-cloud</code> 插件是 MikeCoder 写的一个 Hexo 博客的标签云插件</p><p><img src="https://cos.royce2003.top/db44ecae/03.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="GIF.gif"></p><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><div class="hljs"><pre><code class="hljs bash">npm install hexo-tag-cloud@^2.1.* --save</code></pre></div><p>在 <code>fluid\layout\tags.ejs</code> 中加入如下代码</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">%</span> <span class="hljs-attr">if</span> (<span class="hljs-attr">site.tags.length</span>) &#123; %&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"utf-8"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&lt;%- url_for('/js/tagcloud.js') %&gt;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"utf-8"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&lt;%- url_for('/js/tagcanvas.js') %&gt;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"widget-wrap"</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"myCanvasContainer"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"widget tagcloud"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"250"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"250"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"resCanvas"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width=100%"</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">%-</span> <span class="hljs-attr">tagcloud</span>() %&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%</span> &#125; %&gt;</span></code></pre></div><h4 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h4><p>根目录配置文件添加如下的配置</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-comment"># hexo-tag-cloud</span><span class="hljs-attr">tag_cloud:</span>    <span class="hljs-attr">textFont:</span> <span class="hljs-string">Trebuchet</span> <span class="hljs-string">MS,</span> <span class="hljs-string">Helvetica</span>    <span class="hljs-attr">textColor:</span> <span class="hljs-string">'#333'</span>    <span class="hljs-attr">textHeight:</span> <span class="hljs-number">25</span>    <span class="hljs-attr">outlineColor:</span> <span class="hljs-string">'#E2E1D1'</span>    <span class="hljs-attr">maxSpeed:</span> <span class="hljs-number">0.5</span></code></pre></div><p><code>textColor</code>: 字体颜色<br><code>textHeight</code>: 字体高度<br><code>maxSpeed</code>: 文字滚动速度</p><hr><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>应该没啥可折腾的了，还有的话也不新开文章了，就这里持续更新吧，会置顶并将最近一次更新写在摘要中<br>暗黑模式下篇文章再写吧 <del>(水文章数量)</del></p><p>作者已经把主题做的非常完美了，有什么问题都会立马修复，功能也出的很快，超 nice</p><p>博客刚搭建的时候用了一个 material 主题，觉得过于平淡，换到了一个 gal 主题，功能很多<br>慢慢的又看厌了，很多人推荐 Next，就又换到了 Next，的确很好用<br>就光针对 Next 的教程数量而言，应该能算是大部分用 Hexo 的人都用过的<br>经常逛博客也发现很多都是用的这个主题，用了几个月，改了很多东西，但也慢慢看厌了</p><p>就开始再次踏上寻找主题的路，经常看到一个好看的主题，但又想到自己在 Next 上大量的自定义内容，一直不忍心丢下<br>看到 Fluid 之后超喜欢，先用 Fluid 搭建了副站，放在 Gitee 上，慢慢完善<br>完善到一定程度，有人和我说副站更好看，我看了看好像真是这么回事…<br>才下定决心开始换主题，前前后后花了一个多星期全部完成</p><p>Fluid 应该是会一直用下去了<br>不过仍有继续折腾的打算<br>可能会再用 Typecho 搭建一个玩玩…</p><p>写的不好，凑合吧<br><a href="./25976.html">面向纯小白的 CSS 教程1</a><br><a href="./17142.html">面向纯小白的 CSS 教程2</a></p><p>[^1]: 参考: <a href="https://www.51qianduan.com/article/3115.html" target="_blank" rel="noopener">纯css3全屏图片背景缩小渐变式切换特效</a><br>[^2]: 参考: <a href="https://bestzuo.cn/posts/blog-establish.html" target="_blank" rel="noopener">Hexo博客+Next主题深度优化与定制</a><br>[^3]: 参考: <a href="https://www.yanghuaxing.com/blog/547.html" target="_blank" rel="noopener">网易云HTML5音乐随机播放器</a><br>[^4]: 参考: <a href="http://www.htmleaf.com/css3/css3donghua/201806235190.html" target="_blank" rel="noopener">带点击动画特效的CSS3单选框和复选框</a><br>[^5]: 参考: <a href="https://github.com/MikeCoder/hexo-tag-cloud" target="_blank" rel="noopener">MikeCoder/hexo-tag-cloud</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3368 【模板】树状数组 2</title>
    <link href="/2020/03/26/P3368%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%202/"/>
    <url>/2020/03/26/P3368%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%202/</url>
    
    <content type="html"><![CDATA[<h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目[^1]"></a>题目[^1]</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>如题，已知一个数列，你需要进行下面两种操作：</p><ol><li>将某区间每一个数数加上 $x$；</li><li>求出某一个数的值。<a id="more"></a><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4></li></ol><p>第一行包含两个整数 $N$、$M$，分别表示该数列数字的个数和操作的总个数。</p><p>第二行包含 $N$ 个用空格分隔的整数，其中第 $i$ 个数字表示数列第 $i$ 项的初始值。</p><p>接下来 $M$行每行包含 2 或 4 个整数，表示一个操作，具体如下：</p><p>操作 1： 格式：<code>1 x y k</code> 含义：将区间 $x,y$ 内每个数加上 $k$；</p><p>操作 2： 格式：<code>2 x</code> 含义：输出第 $x$ 个数的值。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出包含若干行整数，即为所有操作 2 的结果。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><div class="hljs"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><span class="hljs-number">5</span><span class="hljs-symbol">1 </span><span class="hljs-number">5</span> <span class="hljs-number">4</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">2</span><span class="hljs-symbol">2 </span><span class="hljs-number">3</span><span class="hljs-symbol">1 </span><span class="hljs-number">1</span> <span class="hljs-number">5</span> -<span class="hljs-number">1</span><span class="hljs-symbol">1 </span><span class="hljs-number">3</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span><span class="hljs-symbol">2 </span><span class="hljs-number">4</span></code></pre></div><p><strong>输出 #1</strong></p><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-number">6</span><span class="hljs-number">10</span></code></pre></div><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><h5 id="样例-1-解释："><a href="#样例-1-解释：" class="headerlink" title="样例 1 解释："></a>样例 1 解释：</h5><p><img src="https://cos.royce2003.top/49770/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>故输出结果为 6、10。</p><hr><h5 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h5><p>对于 $30%$ 的数据：$N\le8,M\le10$；</p><p>对于 $70%$ 的数据：$N\le 10000,M\le10000$；</p><p>对于 $100%$ 的数据：$1 \leq N, M\le 500000$，$1 \leq x, y \leq n$，保证任意时刻序列中任意元素的绝对值都不大于 $2^{30}$。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>上一篇文章已经讲了<code>树状数组 1</code>，单点修改区间查询。<a href="../759">树状数组 1 文章链接</a></p><p>树状数组 2 需要实现的是区间修改，单点查询。</p><p>并且树状数组 2 要完全依赖于树状数组 1，仅在 1 的基础上引入差分数组</p><p>通过差分数组将其转换为单点修改区间查询，没错，就是树状数组 1，的单点修改区间查询</p><p>说到差分我就想到了 xzt 卖煎饼，想到 xzt 卖煎饼我就想到了暴力 $O(nm)$ 解法，想到这个解法就想到了我是多么菜鸡</p><img src="https://cos.royce2003.top/49770/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp"><h4 id="前置知识-差分数组"><a href="#前置知识-差分数组" class="headerlink" title="前置知识 差分数组"></a>前置知识 差分数组</h4><p>现有一序列 $A$<br>$$<br>A={3,,1,,4,,1,,5,,9,,2,,6,,5}<br>$$<br>建立一个差分数组 $D$，使得 $D_i=A_i-A_{i-1}$<br>$$<br>D={3,;-2,,3,,-3,,4,,4,,-7,,4,,-1}<br>$$</p><p>此时将 $A$ 序列中 $A_3 \sim A_5$ 都加上 3，得到新的 $A$<br>$$<br>A={3,,1,,7,,4,,8,,9,,2,,6,,5}<br>$$<br>此时再更新 $D$ 数组<br>$$<br>D={3,,-2,,6,,-3,,4,,1,,-7,,4,,-1}<br>$$<br>不难发现，在 $A$ 序列的 $A_i \sim A_j$ 区间分别加上 $n$ ，在差分数组 $D$ 中就相当于 $D_i;+=; n,;D_{j+1};-=;n$</p><p>相信聪明的你已经发现了，这里出现了树状数组 1的单点修改</p><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><p>这个也就变的很简单了，利用差分数组的性质，假设我们要求 $A_3$</p><p>那么</p><p>$$<br>A_3=D_1+D_2+D_3<br>$$<br>好啦，就是这么简单</p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>附上 AC 代码</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-keyword">int</span> n,m,k,x,aa,l,r;<span class="hljs-keyword">int</span> a[<span class="hljs-number">500110</span>],c[<span class="hljs-number">500110</span>];<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">bool</span> flag = <span class="hljs-number">1</span>;<span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch = getchar();<span class="hljs-keyword">while</span> (ch&lt;<span class="hljs-string">'0'</span> || ch&gt;<span class="hljs-string">'9'</span>) &#123;<span class="hljs-keyword">if</span> (ch == <span class="hljs-string">'-'</span>) flag = <span class="hljs-number">0</span>; ch = getchar();&#125;<span class="hljs-keyword">while</span> (ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch&lt;=<span class="hljs-string">'9'</span>) &#123;x *= <span class="hljs-number">10</span>;x += ch-<span class="hljs-string">'0'</span>;ch=getchar();&#125;<span class="hljs-keyword">return</span> flag ? x:-x;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">lowbit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<span class="hljs-keyword">return</span> x &amp; -x;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> k)</span> </span>&#123;<span class="hljs-keyword">while</span> (x&lt;=n) &#123;c[x] += k;x += lowbit(x);&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<span class="hljs-keyword">int</span> sum = <span class="hljs-number">0</span>;<span class="hljs-keyword">while</span> (x) &#123;sum += c[x];x -= lowbit(x);&#125;<span class="hljs-keyword">return</span> sum;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;n = read(); m = read();<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=n; i++) &#123;a[i] = read();add(i, a[i]-a[i<span class="hljs-number">-1</span>]);&#125;<span class="hljs-keyword">while</span> (m--) &#123;aa = read();<span class="hljs-keyword">if</span> (aa==<span class="hljs-number">1</span>) &#123;l = read(); r = read(); k =read();add(l,k);add(r+<span class="hljs-number">1</span>,-k);&#125;<span class="hljs-keyword">else</span> &#123;k = read();<span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, find(k));&#125;&#125;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; &#125;</code></pre></div><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P3368" target="_blank" rel="noopener">P3368 【模板】树状数组 2 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OI</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>研究型学习</title>
    <link href="/2020/03/26/2019-2020%20%E7%A0%94%E7%A9%B6%E5%9E%8B%E5%AD%A6%E4%B9%A0/"/>
    <url>/2020/03/26/2019-2020%20%E7%A0%94%E7%A9%B6%E5%9E%8B%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>昨天和几个同学完成了咕了很久的研究型学习的采访任务<br>贼尴尬😅</p><a id="more"></a><p>校门口集合，出发前往万达，进行了一些采访</p><h2 id="对话记录"><a href="#对话记录" class="headerlink" title="对话记录"></a>对话记录</h2><h3 id="大门口，可能是经理之类的"><a href="#大门口，可能是经理之类的" class="headerlink" title="大门口，可能是经理之类的"></a>大门口，可能是经理之类的</h3><p>Q:你好，balabala<br>A:可以啊，到这后面来吧</p><p>Q:目前有碰到出现发烧的吗<br>A:还没有</p><p>Q:如果出现会采取什么措施<br>A:发烧达到75 会先找个区域隔离<br>如果出现你们会采取什么措施，<br>如果出现高温，一旦发烧达到75这边会找个隔离区域先隔离，<br>然后通知专门来检查<br>真的确诊会通知医院带走，这边有设置专门的隔离区，隔离起来</p><p>Q:目前有没有碰到不带口罩然后不太配合的<br>A:肯定有吗<br>Q:比较多么<br>A:比较少，基本都有带，大家都比较有素质<br>还是就是说有的小孩子，有些小孩子带不了口罩我也没办法<br>像小孩子他会哭啊，不肯带，只能说允许默认小孩子不带，大人基本都带<br>还有什么问题吗</p><p>没有了，谢谢</p><h3 id="华为店的员工"><a href="#华为店的员工" class="headerlink" title="华为店的员工"></a>华为店的员工</h3><p>Q:你好，balabala<br>A:可以啊</p><p>Q:疫情期间对本店的生意有什么比较大的影响吗<br>A:万达人流量变少了，生意肯定也变少了<br>Q:大概少了多少<br>A:上个月的话基本没有人，剩下个两三成左右<br>这个月还算恢复的差不多，差不多恢复了百分之60到70</p><p>Q:那店内有什么消杀措施吗<br>A:有啊，都有的，每天都会消毒<br>Q:那对这些产品有消毒吗<br>A:我们来的话，店里面都会进行杀毒，做卫生，这个也是万达要求的，都会有检查的</p><p>Q:那，你知道分餐制吗<br>A:不知道<br>好的，谢谢谢谢</p><p>…</p>]]></content>
    
    
    
    <tags>
      
      <tag>Royce</tag>
      
      <tag>others</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3374 【模板】树状数组 1</title>
    <link href="/2020/03/18/P3374%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%201/"/>
    <url>/2020/03/18/P3374%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%201/</url>
    
    <content type="html"><![CDATA[<h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目[^1]"></a>题目[^1]</h2><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>如题，已知一个数列，你需要进行下面两种操作：</p><ul><li>将某一个数加上 $x$</li><li>求出某区间每一个数的和</li></ul><a id="more"></a><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个正整数 $n,m$，分别表示该数列数字的个数和操作的总个数。</p><p>第二行包含 $n$ 个用空格分隔的整数，其中第 $i$ 个数字表示数列第 $i$ 项的初始值。</p><p>接下来 $m$ 行每行包含 33 个整数，表示一个操作，具体如下：</p><ul><li><code>1 x k</code> 含义：将第 $x$ 个数加上 $k$</li><li><code>2 x y</code> 含义：输出区间 $[x,y]$ 内每个数的和</li></ul><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出包含若干行整数，即为所有操作 22 的结果。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><div class="hljs"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><span class="hljs-number">5</span><span class="hljs-symbol">1 </span><span class="hljs-number">5</span> <span class="hljs-number">4</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><span class="hljs-symbol">1 </span><span class="hljs-number">1</span> <span class="hljs-number">3</span><span class="hljs-symbol">2 </span><span class="hljs-number">2</span> <span class="hljs-number">5</span><span class="hljs-symbol">1 </span><span class="hljs-number">3</span> -<span class="hljs-number">1</span><span class="hljs-symbol">1 </span><span class="hljs-number">4</span> <span class="hljs-number">2</span><span class="hljs-symbol">2 </span><span class="hljs-number">1</span> <span class="hljs-number">4</span></code></pre></div><p><strong>输出 #1</strong></p><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-number">14</span><span class="hljs-number">16</span></code></pre></div><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>【数据范围】</p><p>对于 $30%$ 的数据，$1 \le n \le 8，1\le m \le 10$；</p><p>对于 $70%$ 的数据，$1\le n,,m\le10^4;$</p><p>对于 $100%$ 的数据，$1\le n,m \le 5\times 10^5$。</p><p>样例说明：</p><p>故输出结果 14、16</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/2256.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>(写这篇呢其实是因为自己已经不会树状数组了，正好借此机会复习下 QAQ)</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h3><p>首先需要了解什么是 <code>树状数组</code></p><p>树状数组用的是树结构的思想，即树型逻辑结构，但他不是树形结构啦</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><blockquote><p>树状数组 (Binary Indexed Tree(B.I.T), Fenwick Tree)是一个查询和修改复杂度都为 og(n) 的数据结构。主要用于查询任意两位之间的所有元素之和，但是每次只能修改一个元素的值；经过简单修改可以在 log(n) 的复杂度下进行范围修改，但是这时只能查询其中一个元素的值(如果加入多个辅助数组则可以实现区间修改与区间查询)。</p></blockquote><p>对于这题，简单来说就是单点修改区间查询，一般地，树状数组不支持区间修改单点差选，但是我们也有办法让他支持…..</p><p>树状数组的优势就在于其维护的时间复杂度为 $O(log , n)$ ，而类似的前缀和数组维护的时间复杂度为 $O(n)$，两者的查询都是 $O(1)$ </p><p>（说到这我就想起来某次校内赛的xzt买煎饼。。。。还好我拿了20分）</p><h3 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h3><h4 id="lowbit"><a href="#lowbit" class="headerlink" title="lowbit"></a>lowbit</h4><p>实际上，对于树状数组 $tree$ 的每一个 $i$，其实际意义应该为：算上其本身的讯息，总共存储了 $2^k$ 个元素的信息，其中 $k$ 表示 $i$ 在二进制下，末尾零的个数，同时也可以表示最小的含 1 位的二进制权值——换句话讲，$2^k$ 即可表示成：对于每个二进制意义下的 $i$，从最末位数 $k+1$ 位，保留这 $k+1$ 位并删除 $k+1$ 位以左的所有数位上的数，留下的新二进制数的实际大</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/0dd7912397dda14482d369acbfb7d0a20df486d1.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><table><thead><tr><th align="center">十进制</th><th align="center">二进制</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">2</td><td align="center">10</td></tr><tr><td align="center">3</td><td align="center">11</td></tr><tr><td align="center">4</td><td align="center">100</td></tr><tr><td align="center">5</td><td align="center">101</td></tr><tr><td align="center">6</td><td align="center">110</td></tr><tr><td align="center">7</td><td align="center">111</td></tr><tr><td align="center">8</td><td align="center">1000</td></tr><tr><td align="center">9</td><td align="center">1001</td></tr><tr><td align="center">10</td><td align="center">1010</td></tr></tbody></table><p>图文并茂之后有没有看出点什么 QAQ</p><p>记得当时学的时候，在学校大佬的帮助下才理解了这些东西，可能我比较菜吧</p><p><del>没看出来就多看几遍吧</del> 好像也还是看不出来，那就记下来结论吧</p><p>对于每一个 $x$ 的最低含一位，即上文中的 $2^k$,可以借助一个 $lowbit$ 函数实现 emmm 一个极其玄学的东西</p><p>再把 <code>lowbit</code> 说简单点就是</p><p>把一个整数变成二进制，从右往左找到第一个1，然后返回这个1所表示的十进制值。</p><p>玄学公式登场 <code>x &amp; -x</code></p><p>举个例子</p><p>$$<br>4 = 100,,-4 = 011 + 1 = 100\<br>~\<br>\because100,&amp;,100=100=4 \<br> ~\<br>\therefore lowbit(4)=4\<br>$$</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">lowbit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<span class="hljs-keyword">return</span> x &amp; -x; <span class="hljs-comment">//就是这么玄学</span>&#125;</code></pre></div><p>为什么要这样干呢</p><p>我们先列出 1~8 的 $lowbit$ </p><p>$1;2;1;4;1;2;1;8$</p><p>我们让 $C[i]$ 管理 $A[i-lowbit(i)+1,,i]$ 这段区间，如下图</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-19_11-45-31.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>那么我们把某个点 $+x$ 的时候只需要把能管到这个点的都 $+x$ 就好啦，那我们如何找哪些能管到我们修改的点呢，这时候就需要 $lowbit$ 了</p><h4 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h4><h5 id="一维前缀和"><a href="#一维前缀和" class="headerlink" title="一维前缀和"></a>一维前缀和</h5><p>现有一个长度为 $N$ 的序列 $A$，需要进行 $M$ 次操作，每次操作选取从 $A_i$ 到 $A_j$ 共 $j-i+1$ 个数并求出他们的总和 （N 和 M 可以很大）  </p><p>例：<br>$$<br>N=9，;A={3,1,4,1,5,9,2,6,5}<br>$$<br>如果按照题意暴力，最坏情况下时间复杂度 $O(n\times m)$（是这个吗，我咋感觉时间复杂度好像大概可能不是这个QAQ）</p><p>反正时间复杂度挺高的就对了</p><p>那我们可以新建一个数组 $B$ ，其中 $B_i=B_{i-1} +A_i$</p><p>此时我们需要求 $a_i-a_j$ 的总和，<del>意会下</del>，只需要求 $B_j-B_{i-1}$ 就好啦</p><p><del>很明显</del>，利用前缀和的方法，因为B数组是在读入时进行处理，可以看作不需要时间，而查询的时间复杂度就是 $O(1)$ 啦</p><h5 id="二维前缀和"><a href="#二维前缀和" class="headerlink" title="二维前缀和"></a>二维前缀和</h5><p>一维前缀和会了二维的也很简单</p><p>$$<br>A=<br>\left[<br>\begin{matrix}<br>5 &amp; 6 &amp; 6 &amp; 1 &amp; 4 &amp; 6\<br>3 &amp; 4 &amp; 2 &amp; 4 &amp; 1 &amp; 7 \<br>0 &amp; 9 &amp; 4 &amp; 6 &amp; 2 &amp; 4<br>\end{matrix}<br>\right]<br>;<br>B=<br>\left[<br>\begin{matrix}<br>5 &amp; 11 &amp; 17 &amp; 18 &amp; 21 &amp; 27\<br>8 &amp; 18 &amp; 26 &amp; \cdots &amp; \cdots &amp; \cdots \<br>\cdots &amp; \cdots &amp; \cdots &amp; \cdots  &amp; \cdots &amp; \cdots<br>\end{matrix}<br>\right]<br>$$<br>若我们要求 $x_1,,y_1$ 与 $x_2,,y_2$ 两点所围成矩形内数字的和<br>公式 $sum=B_{x_2,y_2}-B_{x_2,1}-B_{1,y_1}+B_{x_1-1,y_1-1}$</p><h3 id="储存"><a href="#储存" class="headerlink" title="储存"></a>储存</h3><p>树状数组本质就是一个数组，我们用 C 来表示，然后把 C 排成数🎄的样子，就像前面的那个图那样</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/0dd7912397dda14482d369acbfb7d0a20df486d1.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>$C[1]=A[1]$<br>$C[2]=A[1]+A[2]$<br>$C[3]=A[3]$<br>$C[4]=A[1]+A[2]+A[3]+A[4]$<br>$C[5]=A[5]$<br>$C[6]=A[5]+A[6]$<br>$C[7]=A[7]$<br>$C[8]=A[1]+A[2] \cdots A[8]$</p><p>很明显 $C[i]=A[i-lowbit(i)+1]+A[i-lowbit(i)+2]+ \cdots +A[i]$</p><p>用代码写就是</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span> (j=i-lowbit(i)+<span class="hljs-number">1</span>; j&lt;= i; j++)    c[i] += a[j];</code></pre></div><p>对于 1, 3, 5, 7 这类 $C[i]$ 后只有一个 $A[i]$ 的，我们称之为基点<br>不难发现基点的都是是奇数，即 lowbit=1<br>反之，lowbit=1 的数一定是奇数，也一定是基点。</p><p>而对于 1, 2, 4, 8 这类 $C[i]$ 后是 $\sum_{x=1}^i a_x$ 的，我们称之为统括点<br>也不难发现，统括点的二进制能写成 1000…… 的形式<br>那么统括点一定就是 2 的幂，反之 2 的幂也一定是统括点 </p><p>特别的，1 既是基点又是统括点<br>6 不是基点也不是统括点</p><h3 id="单点修改"><a href="#单点修改" class="headerlink" title="单点修改"></a>单点修改</h3><p>如何进行单点修改，其实在之前已经讲过了<br>比如我们让 $A[3]+1$，那么有包含 $A[3]$ 的所有 $C$ 都要 $+1$<br>包括 $C[3],C[4],C[8],C[16],C[32]\cdots$</p><p>那么我们只需要这样就行了</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span>(j=i; j&lt;=n; j+=lowbit(j)) C[i] += x;</code></pre></div><h3 id="区间查询"><a href="#区间查询" class="headerlink" title="区间查询"></a>区间查询</h3><p>要想得到 i 到 j 的所有数的总和 $sum_{i,j}$，只需要得到 $sum_{1,i}$ 和 $sum_{1,j}$</p><p>$$<br>sum_{i,j} = sum_{1,i} - sum_{1,j} + A_i<br>$$</p><p>也就是前面讲到的前缀和</p><p>先求 $sum_{1,i}$ ，即从 i 开始不断减去 lowbit 并加 C 的值，直到找到第一个统括点（第一个包含该点的统括点）</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<span class="hljs-keyword">int</span> sum = <span class="hljs-number">0</span>,i;<span class="hljs-keyword">for</span>(i=x; i!=lowbit(i); i-=lowbit(i))sum += c[i];sum += c[i]; <span class="hljs-comment">//因为最后一次循环并没有进入，故在此处再加一次c[i]</span><span class="hljs-keyword">return</span> sum;&#125;</code></pre></div><p>$sum_{1,j}$ 同理</p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>附上 AC 代码</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-keyword">int</span> n,m,k,x,aa;<span class="hljs-keyword">int</span> a,c[<span class="hljs-number">500110</span>];<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">lowbit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<span class="hljs-keyword">return</span> x &amp; -x;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> k)</span> </span>&#123;<span class="hljs-keyword">while</span>(x&lt;=n) &#123;c[x] += k;x += lowbit(x);&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<span class="hljs-keyword">int</span> sum = <span class="hljs-number">0</span>,i;<span class="hljs-keyword">for</span>(i=x;i!=lowbit(i);i-=lowbit(i))sum += c[i];sum += c[i];<span class="hljs-keyword">return</span> sum;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;ssd<span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) &#123;<span class="hljs-built_in">cin</span> &gt;&gt; a;add(i,a);&#125;<span class="hljs-keyword">while</span>(m--) &#123;<span class="hljs-built_in">cin</span> &gt;&gt; aa &gt;&gt; x &gt;&gt; k;<span class="hljs-keyword">if</span>(aa==<span class="hljs-number">1</span>) add(x,k);<span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; find(k) - find(x<span class="hljs-number">-1</span>) &lt;&lt; <span class="hljs-built_in">endl</span>; <span class="hljs-comment">//此处和 find(k) - find(x) + a[x] 是一样的</span>&#125;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; &#125;</code></pre></div><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P3374" target="_blank" rel="noopener">P3374 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OI</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1908 逆序对</title>
    <link href="/2020/03/13/P1908%20%E9%80%86%E5%BA%8F%E5%AF%B9/"/>
    <url>/2020/03/13/P1908%20%E9%80%86%E5%BA%8F%E5%AF%B9/</url>
    
    <content type="html"><![CDATA[<h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目[^1]"></a>题目[^1]</h3><p>猫猫 TOM 和小老鼠 JERRY 最近又较量上了，但是毕竟都是成年人，他们已经不喜欢再玩那种你追我赶的游戏，现在他们喜欢玩统计。</p><a id="more"></a><p>最近，TOM 老猫查阅到一个人类称之为“逆序对”的东西，这东西是这样定义的：对于给定的一段正整数序列，逆序对就是序列中满足 $a_i&gt;a_j$ 且 $i&lt;j$ 的有序对。知道这概念后，他们就比赛谁先算出给定的一段正整数序列中逆序对的数目。</p><p><strong>Update:数据已加强。</strong></p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行，一个数 $n$，表示序列中有 $n$ 个数。</p><p>第二行 $n$ 个数，表示给定的序列。序列中每个数字不超过 $10^9$。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出序列中逆序对的数目。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><div class="hljs"><pre><code class="hljs basic"><span class="hljs-number">6</span><span class="hljs-symbol">5 </span><span class="hljs-number">4</span> <span class="hljs-number">2</span> <span class="hljs-number">6</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span></code></pre></div><p><strong>输出 #1</strong></p><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-number">11</span></code></pre></div><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>对于 $25%$ 的数据，$n \le 2500$<br>对于 $50%$ 的数据，$n \le 4 \times 10^4$<br>对于所有数据，$n \leq 5 \times 10^5$<br>请使用较快的输入输出<br>应该不会 $O(n^2)$ 过 50 万吧 by $chen_zhe$  </p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解[^2]"></a>题解[^2]</h3><h4 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h4><blockquote><p>归并排序（MERGE-SORT）是建立在归并操作上的一种有效的排序算法,该算法是采用==分治法==（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。归并排序是一种==稳定==的排序方法。</p></blockquote><p>归并排序<br>时间复杂度 $O(n;log;n)$<br>空间复杂度 $O(n)$</p><p>算法图解</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/c8177f3e6709c93d673b9ed49d3df8dcd00054c3.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>就是先进行拆分，拆到只剩下自己的时候再进行合并</p><p>以样例作为例子</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-15-30.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h4 id="拆分"><a href="#拆分" class="headerlink" title="拆分"></a>拆分</h4><p>先定义一个 msort 函数将原序列拆分</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">msort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> L, <span class="hljs-keyword">int</span> R)</span> </span>&#123;<span class="hljs-keyword">int</span> mid = (L + R) / <span class="hljs-number">2</span>;<span class="hljs-keyword">if</span>(L == R) <span class="hljs-keyword">return</span>;msort(L, mid);msort(mid+<span class="hljs-number">1</span>, R);&#125;</code></pre></div><h4 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h4><p>因为可以保证需要合并的两组数都是单调的，所以我们只需要从两组数的最左边开始比较，若 $a_i&gt;a_j$ 我们就可以将 $a_j$ 存入 temp 数组中，然后 j++，在将 $a_i$与 $a_j$ 进行比较，一直重复进行，知道 i 或者 j 超出了范围</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-keyword">int</span> i = L, j = mid + <span class="hljs-number">1</span>, t = L;<span class="hljs-keyword">while</span>(i&lt;=mid &amp;&amp; j&lt;=R) &#123;<span class="hljs-keyword">if</span> (a[i] &gt; a[j]) &#123;ans += mid - i + <span class="hljs-number">1</span>;temp[t++]  = a[j];j++;&#125;<span class="hljs-keyword">else</span> &#123;temp[t++]  = a[i];i++;&#125;&#125;</code></pre></div><p>完成后我们会得到一个同样单调的 temp 数组，但是 temp 中只存了中较小的值，所以我们还需要将 a 中剩下的值存进来，这也是为什么我们需要在外部定义 i 和 j，可以记录下还有哪些没被存进去</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-keyword">while</span> (i &lt;= mid) &#123;temp[t++] = a[i];i++;&#125;<span class="hljs-keyword">while</span> (j &lt;= R) &#123;temp[t++] = a[j];j++;&#125;</code></pre></div><p>最后我们再将temp数组拷贝回a数组</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k=L; k&lt;=R; k++)a[k] = temp[k];</code></pre></div><h4 id="步骤分解"><a href="#步骤分解" class="headerlink" title="步骤分解"></a>步骤分解</h4><p>肯能看到这还是很懵<br>那就看看详细的步骤分解吧</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-15-30.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>合并 5 4，$i=L=1$， $mid=\frac{L+R}{2}=1$ ，$j=mid+1=2$，$a_i&gt;a_j$，将 $a_j$ 存入 temp，temp 数组：4 5 0 0 0 ，j++，j=3，超出范围，将剩余的 5 存入，temp 数组：4 5 2 6 3 1</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-16-00.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>合并 3 6，$i=L=4$，，$mid=\frac{L+R}{2}=4$，$j=mid+1=5$，$a_i&gt;a_j$，将$a_j$存入 temp，temp 数组：4 5 0 3 6 0，j++，j=6，超出范围，将剩余 3 存入，temp 数组：4 5 2 3 6 1</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-16-14.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>合并 3,5 和 2，$i=L=1$，$mid=\frac{L+R}{2}=2$，$j=mid+1=3$，$a_i&gt;a_j$，将 $a_j$ 存入 temp，temp 数组：2 5 0 3 6 0，j++，j=4，超出范围，将剩余 4 5 存入，temp 数组：2 4 5 3 6 0</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-16-35.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>合并 1 和 3,6，$i=L=4$，$mid=\frac{L+R}{2}=4$，$j=mid+1=6$，$a_i&gt;a_j$，将 $a_j$ 存入 temp，temp 数组：2 5 0 1 6 0，j++，j=7，超出范围，将剩余 3 6 存入，temp 数组：2 4 5 1 3 6</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-16-54.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>合并 2 4 5 和 1 3 6</p><p>$$<br>i=L=1,\ mid=\frac{L+R}{2}=3,\ j=mid+1=4  \<br>~\<br>a_i&gt;a_j,\ 将a_j存入temp,\ temp数组：1,5,0,1,6,0  \<br>~\<br>j++,\ j=5,\ a_i&lt;a_j,\ 将a_i存入temp,\ temp数组：1,2,0,1,6,0  \<br>~\<br>i++,\ i=2,\ a_i&gt;a_j,\ 将a_j存入temp,\ temp数组：1,2,3,1,6,0  \<br>~\<br>j++,\ j=6,\ a_i&lt;a_j,\ 将a_i存入temp,\ temp数组：1,2,3,4,6,0  \<br>~\<br>i++,\ i=3,\ a_i&lt;a_j,\ 将a_i存入temp,\ temp数组：1,2,3,4,5,0  \<br>~\<br>i++,\ i=3,\ 超出mid,\ 将剩余 6 存入,\ temp数组：1,2,3,4,5,6\<br>$$</p><p><img src="https://gitee.com/royce2003/blog/raw/master/img/Snipaste_03-13_14-17-25.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>这样就能得到一个有序数列了，例子中讲的是升序，降序也是同样的道理</p><h4 id="逆序对"><a href="#逆序对" class="headerlink" title="逆序对"></a>逆序对</h4><p>然鹅这题是求逆序对，所以我们还需要在此基础上加上一行</p><p>在判断$a_i&lt;a_j$的时候，前面的数小于后面的数，这时逆序对就出现了！</p><p>由于 L ~ mid 和 mid + 1 ~ r 都是有序序列<br>所以一旦 l ~ mid 中的元素 &gt; mid + 1 ~ r 中的元素<br>又因为第 i 个元素 &lt; i + 1 ~ mid 那么i + 1 ~ mid 的元素都 &gt; 第 j 个元素<br>所以 ans 加的元素个数就是 i ~ mid 的元素个数，也就是 mid - i + 1</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXN 5000010</span><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ans; <span class="hljs-comment">//据说需要 long long，都 5x10^5 了，逆序对有又那么多，肯定要啦  </span><span class="hljs-keyword">int</span> n, a[MAXN], temp[MAXN];<span class="hljs-comment">//快读</span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-keyword">bool</span> flag = <span class="hljs-number">0</span>; <span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>; <span class="hljs-keyword">char</span> ch = getchar();    <span class="hljs-keyword">while</span>(ch&lt;<span class="hljs-string">'0'</span> || ch&gt;<span class="hljs-string">'9'</span>) &#123;<span class="hljs-keyword">if</span>(ch == <span class="hljs-string">'-'</span>) flag = <span class="hljs-number">1</span>; ch = getchar();&#125;    <span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">'0'</span> &amp;&amp; ch &lt;= <span class="hljs-string">'9'</span>) &#123;x *= <span class="hljs-number">10</span>; x += ch - <span class="hljs-string">'0'</span>; ch = getchar();&#125;    <span class="hljs-keyword">return</span> flag ? - x : x;&#125;<span class="hljs-comment">//归并排序</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">msort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> L, <span class="hljs-keyword">int</span> R)</span> </span>&#123;    <span class="hljs-keyword">int</span> mid = (L + R) / <span class="hljs-number">2</span>;    <span class="hljs-keyword">if</span>(L == R) <span class="hljs-keyword">return</span>;    msort(L, mid);    msort(mid+<span class="hljs-number">1</span>, R);    <span class="hljs-keyword">int</span> i = L, j = mid + <span class="hljs-number">1</span>, t = L;    <span class="hljs-keyword">while</span>(i&lt;=mid &amp;&amp; j&lt;=R) &#123;        <span class="hljs-keyword">if</span> (a[i] &gt; a[j]) &#123;            ans += mid - i + <span class="hljs-number">1</span>; <span class="hljs-comment">//逆序对计数</span>            temp[t++]  = a[j];            j++;        &#125;        <span class="hljs-keyword">else</span> &#123;            temp[t++]  = a[i];            i++;        &#125;    &#125;    <span class="hljs-keyword">while</span> (i &lt;= mid) &#123;        temp[t++] = a[i];        i++;    &#125;    <span class="hljs-keyword">while</span> (j &lt;= R) &#123;        temp[t++] = a[j];        j++;    &#125;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k=L; k&lt;=R; k++) a[k] = temp[k];    <span class="hljs-keyword">return</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;    n = read(); <span class="hljs-comment">//都提示用较快的输入输出了你还在cin？</span>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>; i&lt;=n; i++) a[i] = read();    msort(<span class="hljs-number">1</span>, n);    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld"</span>, ans); <span class="hljs-comment">//%lld别错了</span>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <span class="hljs-comment">//好习惯</span>&#125;</code></pre></div><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P1908" target="_blank" rel="noopener">P1908 逆序对 - 洛谷 | 计算机科学教育新生态</a><br>[^2]: 参考<a href="https://www.luogu.com.cn/blog/qqq1112/solution-p1908" target="_blank" rel="noopener">题解 P1908 【逆序对】 - ! - 洛谷博客</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OI</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>观念小测试</title>
    <link href="/2020/03/09/%E4%BD%A0%E6%9C%89%E6%80%A7%E5%88%AB%E6%AD%A7%E8%A7%86%E5%90%97/"/>
    <url>/2020/03/09/%E4%BD%A0%E6%9C%89%E6%80%A7%E5%88%AB%E6%AD%A7%E8%A7%86%E5%90%97/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">A</span>s part of an experiment to explore the human mind  <p>we asked twenty-two people<br>to solve the same riddle and recomed their responses</p><p>Are you ready?</p><p>The riddle:</p><p>A father is about to bring his son<br>to a job interview applying<br>for a position at a large stockbrokers company </p><p>Just as they arrive at the company’s parking lot.<br>the sons phone rings.</p><p>He looks at his father who say:”Go ahead, answer it”</p><p>The caller it’s the trading oommpenty’s CEO who says.<br>Good luck son, your’ve got this</p><p>The son ends the call and once again looks at his father,<br>who is still next to him in their car</p><p>How is this possible?</p><hr><p>一位父亲准备带他的儿子去面试<br>争取一个大型股票经纪公司的职位</p><p>正当他们的车进入公司停车场的时候<br>儿子的手机响了  </p><p>转头看向了坐在驾驶位的父亲<br>父亲一脸奇怪，说：“你接啊。”  </p><p>儿子接了起来，打电话的人是一个贸易公司的 CEO<br>说：“儿子(son)，祝你好运，你一定可以的。”  </p><p>儿子挂断电话，再次转头看向了坐在他身旁的父亲。</p><p>那么这是怎么回事呢？？？</p><p>来自<a href="https://beastoftraal.com/2020/03/16/can-you-solve-the-mindspace-riddle/" target="_blank" rel="noopener">国外的一个实验</a></p><hr><p><a class="BoxButton" onclick="ShowAnswer()">点我查看答案</a><br><strong id="58944-answer"></strong></p><script>  function ShowAnswer(){    document.getElementById("58944-answer").innerHTML="打电话的人是他妈妈";  }</script>]]></content>
    
    
    
    <tags>
      
      <tag>others</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020-03 随笔</title>
    <link href="/2020/03/07/2020-03%20%E9%9A%8F%E7%AC%94/"/>
    <url>/2020/03/07/2020-03%20%E9%9A%8F%E7%AC%94/</url>
    
    <content type="html"><![CDATA[<h3 id="美名其曰随笔，也就是发发牢骚"><a href="#美名其曰随笔，也就是发发牢骚" class="headerlink" title="美名其曰随笔，也就是发发牢骚"></a>美名其曰随笔，也就是发发牢骚</h3><blockquote><p>有知识不等于有文化，文化的用途不是用来考试的，而是用来生活，用来陪你度过整个人生</p></blockquote><p>以前小的时候，经常听大人和老师说，类似的话，但自己却从未理解。那时候想着现实中真会有数学题里的小明，语文题里的小红吗？<br>学英语，难道我们长大了一定要和外国人交流吗，在世界上不是也有越来越多的人说汉语了吗?<br>答案当然是否<br>那我们还学这些有什么用，对于当时的我，不能理解</p><p>现在的我或许略知一二<br>数学的三角函数，正弦定理余弦定理，将来我们几乎用不上，但在学习的过程中我们能够不断收获，收获方法，收获技巧，也能锻炼思维</p><p>这些东西重要吗，不说大家也知道。就比如参加信息竞赛，我相信坐在电脑前的参赛者码力都差不多，但你没方法没技巧，思维不好，一道题放你面前一小时也没有头绪（比如我），比赛结束看题解的时候发出感叹：“啊！原来是这个算法啊，我会的呀，可惜当场没看出来…..”</p><p>方法这种东西，看不见摸不着，但却渗透在我们的生活中，我们自己或许毫无感觉，但我们所做的每一件事或许都受其影响</p><blockquote><p>人们声称的最美好的岁月，其实都是最痛苦的，只是事后回忆起来的时候才是那么幸福</p></blockquote><p>喂喂喂<br>别这么真实啊</p><p>现在回想初三的时光……满满的都是幸福</p><p>怀念当时最讨厌的老师<br>怀念当时最烦的班主任<br>怀念当时沙雕的同学们<br>怀念当时看厌了的学校<br>…….<br>怀念当时的一切</p><p>当时觉得是多么痛苦 <del>（其实我觉得也还好啦）</del>  </p><p>再回想起曾经生活过的城市——上海<br>有一说一，我生活在这里的时候并不是很喜欢这座城市，每天上学挤地铁，碰巧家又在市中心人民广场，真的把我挤🤮了<br>还有随处可见的人山人海……</p><p>但是现在想想，当时的自己……<br>那里充满了我童年记忆，即使我在在老家上完了高中，我在那生活的时间还是更长…..<br>现在，那是我既怀念又向往的地方</p><h3 id="疫情"><a href="#疫情" class="headerlink" title="疫情"></a>疫情</h3><p>最近国内疫情已经控制的差不多了，国外的疫情开始爆发了<br><img src="https://cos.royce2003.top/32314/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br>刚和一个在加拿大的初中同学聊了聊<br>他说那边最近开始爆发了，挺严重的，顺便抱怨那边的政府瞎搞🤣<br>奥运会都推迟了，见证历史啊</p><h3 id="高考推迟"><a href="#高考推迟" class="headerlink" title="高考推迟"></a>高考推迟</h3><p>2020年3月31日，距离2020年高考原定于6月7日的开考时间还剩下68天。教育部官网发布了重大消息：经党中央、国务院同意，2020年高考延期一个月，将于7月7日开考。</p><p>考试时间为7月7日至8日，具体科目考试时间安排为：7月7日，语文9:00至11:30；数学15:00至17:00。7月8日，文科综合/理科综合9:00至11:30；外语15:00至17:00。而，湖北省、北京市可根据疫情防控情况，研究提出本地区高考时间安排的意见，经教育部同意后及时向社会发布。</p><p>自1977年高考恢复以来，高考从未因突发事件改期。2020年高考，还是第一次改期。</p><p>部分地区的单独推迟是发生过的<br>2008年汶川地震，四川省的严重受灾区延迟举行高考，改在7月3日至5日进行。</p><p>而今年的情况，中国政府将这次新冠肺炎疫情概括为——“新中国成立以来在我国发生的传播速度最快、感染范围最广、防控难度最大的一次重大突发公共卫生事件”。</p><p> 突如其来的疫情，对考生、老师、家长的影响都很大。其实，很多高三学长还是希望如期考试，延迟了一个月，或许只是多了几分煎熬</p><p>祝愿所有的高三学长学姐们考出理想的成绩，加油！</p><h3 id="人道主主义"><a href="#人道主主义" class="headerlink" title="人道主主义"></a>人道主主义</h3><p>在网上看到了条新闻——“西班牙拔掉65岁以上老人呼吸机”</p><p>白衣天使已经穿上了死神的外衣</p><p>一个人生与死的权利，全部掌握在他人手里</p><p>医院已经爆满，他们开始决策人们的生死，这是多可怕的一件事。</p><p>按照西班牙卫生部与国内大报《国家报》的说法：<br>“最坏的日子仍未到来，纵观疫情范围与传染速率，最后的状况，恐怕会比意大利更加惨烈……”<br>而西班牙国防部长玛格丽塔·罗伯斯（Margarita Robles）在接采访时证实，军方急难救护队执行任务时发现许多独居老人遭遗弃并惨死在床上。</p><p>西班牙重症监护组织在报告中写道：</p><p>“接纳一个病人，就意味着拒绝其他本有可能获救的人。</p><p>所以，我们建议优先考虑那些预期寿命超过两年的患者，并且，考虑患者的社会价值。”</p><p>难道真是新冠病毒的错？<br>不，西方各国政府的不作为，才是最大问题，所谓的人权，连生命权都都不复存在了….</p><p>再看看中国，武汉有难，全国支援<br>10天建“火神山”，18天建“雷神山”，6天建方舱医院。<br>得知海外同胞在外受辱，开启大规模撤侨行动<br>而对于治疗费用全部由国家出，普通轻症患者，治疗费用是5-10万元，重症病人医疗费用是70-120万。<br>……..<br>我庆幸我是中国人🇨🇳<br>我庆新自己能出生在这样的国家<br>一个美好的国家，一定是温暖的，可靠的。</p><h3 id="传染病、社会与人"><a href="#传染病、社会与人" class="headerlink" title="传染病、社会与人"></a>传染病、社会与人</h3><p>​&#8195;&#8195;传染病的产生源于人类社会的不断发展进步，人类的不断发展进步促进社会的发展，社会发展的同时也伴随着传染病的流行。当人类社会发展到一定程度时，传染病的流行是有两面性的，一方面会造成大量死亡，另一方面他会促进人类的发展，推动社会进步。</p><p>​&#8195;&#8195;传染病刚爆发时，造成大量死亡，世界上第一次大规模瘟疫，查士丁尼瘟疫肆虐半个世纪造成了 1/4 的罗马帝国人口死亡，二十世纪的西班牙大流感病患超 5 亿，死亡进 4000 万，是一战死亡人数的四倍。其影响甚至比战争带来的死亡还惨烈，不仅仅如此，他在肆虐的同时会对社会经济造成极大威胁。2020 年中国的新冠病毒爆发于春节之季，对旅游业，餐饮业等造成了无法估量的损失。同时人性的丑恶开始不断显露，政府官员的失职，红会的不作为，李文亮医生的”谣言”，还有某些国家在世界卫生组织强烈不建议的情况下仍对中国公民采取入境限制……..虽然如此，但人性善的一面也出现在人们眼前，那些匿名送口罩的人，那些坚持在一线”抗战”的医生们，那些自愿接送医护人员的司机们，那些自发前往湖北支援的医护人员们，当然还有那些捐赠物资的海外华人和一些国家。一个接一个的善出现在人们眼前，说明这社会的不断进步，人类已经开始从中吸取教训，总结经验。</p><p>​&#8195;&#8195;人、社会、传染病这三者时紧密联系在一起的，几乎不可能分开，对此，我们应该对大自然秉承敬畏之心，“时代的尘埃，落在个人身上就是一座大山”，我们更应该尽己所能，为社会，也为我们自己，做出贡献；“再多的困难也不怕，就怕就怕你没有勇气再面对下次的挑战”，社会应该从中吸取教训，总结经验，不断发展进步。这类事情的发生不可避免，我希望，也相信下次如果还有类似事件发生，国家定能将损失降到最小，而将”利益”最大化。（此处用利益一词可能不太合适）</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Coding+GitHub 双线部署</title>
    <link href="/2020/02/27/Coding+GitHub%E5%8F%8C%E7%BA%BF%E9%83%A8%E7%BD%B2/"/>
    <url>/2020/02/27/Coding+GitHub%E5%8F%8C%E7%BA%BF%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">哪</span>个孩子不想要一个流畅的博客<p>奈何 github 一直处于半墙状态，访问速度贼慢<br>所以我们可以选择境内访问走 coding（国内的平台），境外访问走 github</p><a id="more"></a><p>网上关于博客双线部署的教程挺多的，但是今年 coding 更新了，界面改变比较大，并没有关于新版的教程，于是乎</p><p>你需要有自己的域名，挺便宜的，算下来一天好像一分钱不到<br>可以不备案，也就不需要买服务器的钱啦<br>如果没域名单纯部署到 coding 上不建议，因为coding改版之后，给的域名不想 github 那样是<br><code>你的用户名.github.io</code><br>变成的一堆乱七八糟的东西，就像这样</p><p><img src="https://cos.royce2003.top/13128/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>那为什么选择 coding+github 而不是 gitee+github 呢<br>还不是因为没钱，gitee 如果想绑定自己域名，第一个月免费，之后就要收费了</p><h3 id="部署到Coding"><a href="#部署到Coding" class="headerlink" title="部署到Coding"></a>部署到Coding</h3><p>首先注册一个账号<br>注意，改版之后只能注册团队，不能单独注册个人，官网 <a href="https://coding.net/" target="_blank" rel="noopener">查看链接</a></p><p><img src="https://cos.royce2003.top/13128/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>注册</p><p>注册之后登录，在右上角创建项目</p><p><img src="https://cos.royce2003.top/13128/03.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>创建项目</p><p>选择代码托管项目</p><p><img src="https://cos.royce2003.top/13128/04.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>代码托管</p><p>然后按照下图填写，项目名称建议像 github 一样强制和用户名一样然后再加 <code>coding.me</code>，项目标识没什么关系</p><p><img src="https://cos.royce2003.top/13128/05.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>创建</p><p>创建完成之后发现并没有静态网页，实际上是被 coding 默认关闭了，我们需要在左下角的设置中开启</p><p><img src="https://cos.royce2003.top/13128/06.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>设置</p><p><img src="https://cos.royce2003.top/13128/07.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>开启</p><p>这个时候再返回来就可以看到有个构建与部署，静态网页就在这里面，点击创建</p><p><img src="https://cos.royce2003.top/13128/08.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>静态网页</p><p>按照下图填写，记得勾选自动部署，要不然隔壁 gitee 收费而 coding 免费给你用的被你浪费了</p><p><img src="https://cos.royce2003.top/13128/09.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>建立</p><p>图中框起来的就是你的博客地址</p><p><img src="https://cos.royce2003.top/13128/10.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>博客地址</p><p>接下来我们要添加 SSH公钥<br>在改目录下找到公钥，和你部署 github 的那个一样</p><p><img src="https://cos.royce2003.top/13128/11.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>记事本打开，复制，添加到 oding 中<br>在个人设置里找到 ssh公钥</p><p><img src="https://cos.royce2003.top/13128/12.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>公钥</p><p>添加<br>记得勾选永久有效</p><p><img src="https://cos.royce2003.top/13128/13.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>添加</p><p>添加完成后可在 git bash 中输入如下代码，检查是否添加成功<br><code>ssh -T git@e.coding.net</code><br>如果添加成功会显示如下信息</p><p><img src="https://cos.royce2003.top/13128/14.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>成功</p><h3 id="修改解析记录"><a href="#修改解析记录" class="headerlink" title="修改解析记录"></a>修改解析记录</h3><p>接着就要开始搞域名解析了，首先进入你买域名的平台，这里演示的是腾讯云<br>进入控制台–&gt;域名管理<br>然后点击解析</p><p><img src="https://cos.royce2003.top/13128/15.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><div class="note note-danger">            <p>注意！先进行 coding 解析并申请证书开启强制 HTTPS，证书成功申请之后再进行 github 解析！</p>          </div><h4 id="coding-的解析记录"><a href="#coding-的解析记录" class="headerlink" title="coding 的解析记录"></a>coding 的解析记录</h4><p>首先我们添加 coding 的解析记录<br>主机记录选 www<br>记录类型选 CNAME<br>此时我们的线路类型应该选择境内，因为我们的初衷就是为了加快国内访问速度<br>国内肯定走 coding<br>记录值填写 coding 给你的域名<br>TTL 是每次修改记录生效的时间，时间越短当然生效越快，但是时间短了会影响解析速度，根据自己需求决定。<br>然后保存</p><p><img src="https://cos.royce2003.top/13128/16.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>接下来在添加一条主机记录为 @ 的记录<br>记录类型选择 A<br>记录值填域名的 ipv4 地址<br>打开 cmd<br>输入<br>ping 你的域名<br>注意，你的域名不能加 <code>https://</code> 或者 <code>http://</code><br>接着，方括号中就是我们需要的值</p><p><img src="https://cos.royce2003.top/13128/17.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p><img src="https://cos.royce2003.top/13128/18.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>然后进入 coding 刚刚放博客的仓库，点击<br>右上角设置</p><p><img src="https://cos.royce2003.top/13128/19.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>向下滑找到自定义域名，讲自己的域名填进去，可以开启强制 HTTPS，然后绑定</p><p><img src="https://cos.royce2003.top/13128/20.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>绑定成功会显示在这里，可以选择再绑定一个 www 多跳转至首选</p><p><img src="https://cos.royce2003.top/13128/21.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h4 id="GitHub的解析记录"><a href="#GitHub的解析记录" class="headerlink" title="GitHub的解析记录"></a>GitHub的解析记录</h4><p>接着我们添加 github 的解析<br>主机记录选 www<br>记录类型选 CNAME<br>线路选境外，也就是说，如果境外访问你的博客会走 github<br>记录值填写 github 给你的博客地址<br><code>仓库名.github.io</code></p><p><img src="https://cos.royce2003.top/13128/22.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>添加第二条解析记录<br>主机记录选 @<br>记录类型 A<br>线路境外<br>记录值和之前相同方法通过 cmd 获取<br>然后保存</p><p><img src="https://cos.royce2003.top/13128/23.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>解析记录填写完了，我们就需要到 github 上设置下<br>进入你存放博客的仓库，点击 settings</p><p><img src="https://cos.royce2003.top/13128/24.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>settings</p><p>然后向下滑找到 GitHub Pages<br>填入自己的域名，点击 save，可以选择强制 HTTPS，当保存玩看到上面出现一栏绿绿的东西，然后还有你的域名就说明成功了</p><p><img src="https://cos.royce2003.top/13128/25.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>此时 github 的域名绑定已经完成</p><p>如果coding证书申请失败，访问网站提示不安全</p><div class="note note-info">            <p>方法1 暂停关于 github 的两条解析并关闭 github 上的强制 https 再申请<br>方法2 可能是你的解析记录填写错误，按照教程重新填写</p>          </div><p>接着进入站点根目录的配置文件<br>修改 deploy</p><p><img src="https://cos.royce2003.top/13128/26.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>将 royce2003 改成你自己的用户名</p><p>然后三连<br><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code><br>如果部署成功，在 coding上 是可以看到的</p><p><img src="https://cos.royce2003.top/13128/27.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><p>好啦<br>双线部署教程结束<br>接下来说几个坑,好像只有一个<br>填解析记录的时候那个 TTL 我个人建议千万千万不要选久的<br>时间长虽然解析快，但是我们用的是 coding，众所周知<br>coding 日常会宕机，那时候你的博客就访问不了了<br>此时你可以去把 coding 的两条解析暂停，github 的那两个解析的线路类型改成默认<br>这样你接下里访问就不会走 coding 而是从 github了，但是你 TTL 万一设个 3600 秒，你这一小时内博客就都不能访问了<br>不过我们这种小网站好像没啥太大影响</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>失语症</title>
    <link href="/2020/02/26/%E5%A4%B1%E8%AF%AD%E7%97%87/"/>
    <url>/2020/02/26/%E5%A4%B1%E8%AF%AD%E7%97%87/</url>
    
    <content type="html"><![CDATA[<p align="ceter">脑子和嘴巴抢活，嘴巴敢怒不敢言？</p><a id="more"></a><h3 id="零"><a href="#零" class="headerlink" title="零"></a>零</h3><p>“姓名？”心理医生抬起头看着面前的男人说道。<br>“时言。”时言一边说着一边偷摸看着大门的方向。<br>“什么病？”<br>“说不出话。”时言犹豫了下，说道。<br>心理医生抬起头，看傻子一样看着他：<br>“玩我？”<br>“你等会儿啊，大夫。”时言对门口喊了声，“老婆，进来。”<br>随后一个很是漂亮的女人走了进来，用一副很难受的表情看着医生。<br>“然后呢？”医生问道。<br>俩人不说话了。<br>“我们俩不能对话。”时言诚恳地在纸上写了一句话。<br>“吵架了？吵架来逗我玩？”医生终于受不了了，把笔一丢，气哼哼地看着两人。<br>时言面露难色，脑海中忽然闪过一个声音。<br>“看了吧，谁信谁傻子。”妻子叶陌陌冷哼道。<br>他看着心理医生那张气得逐渐涨红的脸，牵着叶陌陌的手，逃也似地离开了诊所。  </p><h3 id="壹"><a href="#壹" class="headerlink" title="壹"></a>壹</h3><p>事情是什么时候开始不对劲的呢？<br>大概是时言和叶陌陌结婚五年的时候。<br>某一天时言在厨房做菜，炖鸡，他不怎么进厨房，倒醋的时候下意识问妻子道：“放多少盐？”<br>“半勺。”妻子的声音从脑海中传来。<br>等他加完半勺盐之后忽然察觉到有点不对劲，转过头去发现叶陌陌根本没在他的身边。<br>“我在厕所。”叶陌陌忽然说道，像是知道了他在想什么一样。<br>过了会儿，叶陌陌的声音再次传入他的脑海。<br>“你……怎么能在我大脑里说话？”<br>经过反复实验，时言和叶陌陌终于弄明白发生了什么。<br>简单来说，就是两人可以进行心灵交流了，但是比较扯的是，这种心灵交流类似于被动技能无法取消，同时这种技能还有个更扯的负面效果。<br>俩人在一起时，无法开口说话。<br>时言是个工科狗，经过多次实验之后，终于得出了两人无法开口说话的距离是5211米。<br>“真有意思，闭嘴的数还这么浪漫。”叶陌陌在脑海中冷哼道。<br>“到底是为啥呢？”时言开始寻找原因，咨询了下他的人类行为学朋友。<br>朋友到底是朋友，没有像那个心理医生一样摔钢笔，认真分析完之后说道：<br>“因为你俩的身体认为你俩张嘴交流没用。”<br>“放屁，咱俩天天交流怎么打王者和吃鸡。”叶陌陌公然在时言脑子中放屁，时言敢怒不敢言，只能把气撒到朋友身上，把这句话写到朋友的笔记本上。<br>“对啊，你俩交流太好了，到最后完全用不到嘴了，古时候说心有灵犀就是这么个道理。同时老夫老妻了，也没什么话可聊了，索性不用嘴，多好。<br>没准就是你俩的嘴比较有个性，脑子既然能沟通索性就歇了业，五官也得讲劳动法不是。”朋友一本正经道。<br>时言沉默了会儿，给他微信发了个相声《五官争功》的视频，又发了个问号。<br>朋友一拍桌子：“就是这么个理。”<br>“那怎么办呢？”时言写道。<br>“我也不知道，你们这种情况很少见，不如这样，你留下来我给你俩做些实验？”朋友跃跃欲试。<br>时言想起大学看这兄弟解剖小白鼠时候的凶残样子，连忙牵着叶陌陌的手跑出了兄弟的家。  </p><h3 id="贰"><a href="#贰" class="headerlink" title="贰"></a>贰</h3><p>随时随地交流还是有好处的。尤其是这种交流是包括想法的，两人的想法是完全透明的。<br>所以吃鸡的时候，时言心念一动，叶陌陌就知道身后有人然后转身集火，所以逛商场的时候，叶陌陌心念一动，时言就知道该买哪个品牌哪个色号的口红。<br>“打野……”时言跟叶陌陌盘腿坐在沙发上，打着游戏，时言走下路，对面位置有点深入，他下意识想了下。<br>然后作为打野的叶陌陌就杀了过来，时机正好，斩获双杀。<br>“这能力还不错。”他想着，然后抬头看到了电视上播放的维密秀。<br>他忽然升起一股不好的预感，连忙把脸别过去，然而还是被叶陌陌察觉到了他的思维。<br>“想什么呢？”叶陌陌在脑海中问道，脸上满是笑容。<br>“我……”没等时言想好理由，就被叶陌陌踹了一脚。<br>“流氓！你们男的平时就想这个？”叶陌陌冷哼。<br>时言怒目而视：“我那是正常想法，OK？再说，你看小鲜肉不是也会这么想？”<br>叶陌陌微笑，夺过遥控器调到了一档男性偶像选秀节目。<br>片刻后，她面红耳赤地换了台。<br>时言在她脑海中得意洋洋道：“我就说吧。”<br>叶陌陌表情冷漠地又踢他一脚，“流氓。”  </p><h3 id="叁"><a href="#叁" class="headerlink" title="叁"></a>叁</h3><p>转眼间两人处于这种状态已经两个月有余。<br>人的习惯能力是很强大的，叶陌陌和时言如今已经习惯了不说话的生活方式，很有默契地在对方看异性选秀节目时离开家去逛街或者打游戏。<br>然而生活总不能一直这么平淡下去。<br>时言的爸妈突然来了。<br>老两口来的时候没打招呼，把时言搞得措手不及，慌乱中竟然忘了两人在一起不能说话这一情况。于是只能拿出好几个月之前叶陌陌咽炎时买的药当做挡箭牌。<br>“都咽炎到不能说话？”时言他妈有点怀疑。<br>两人点头，步调一致。<br>饭桌上叶陌陌瞅着时言妈妈做的香辣蟹一个劲地吞口水，时言不得不提醒她道：<br>“稳住，你现在是个有咽炎的人，不能吃辣。”<br>过了会儿他看着叶陌陌很沮丧的脸，又想着：“想吃我以后给你做。”<br>“放屁，你这么长时间做过饭？”叶陌陌在时言脑子里翻了个白眼。<br>时言叹了口气，忽然站起来在四个人的家庭群发了个消息道：“我吃饱了，家里没酱油了，我出去买。”<br>时言爸妈看见后连忙站起身：“我们也饱了，一块去吧，顺便帮你们买点菜。”<br>“陌陌在家洗碗吧，我们仨去就好。”时言在微信分配任务。<br>“地下室不是还有吗？”叶陌陌疑惑道。<br>“傻啊，我把我爸妈骗出去，你抓紧吃几个。”时言穿上衣服，跟爸妈走出了家门。<br>“别被看见了。”他到楼下的时候叮嘱道。<br>“放心。”叶陌陌信心满满。  </p><h3 id="肆"><a href="#肆" class="headerlink" title="肆"></a>肆</h3><p>跟老人买菜是件很难受的事。<br>更难受的是想到还有另一个人正在家里偷偷摸摸地吃香辣蟹。<br>“老板，便宜点吧，我儿子住在你们小区，常来光顾的。”时言他妈指着时言说道。<br>时言不好意思地笑笑，给老板使了个眼色。<br>“好的，那再便宜您五毛。”老板乐呵呵道。<br>时言他妈砍价胜利，兴冲冲地出了菜市场，时言给老板微信又转过去五毛红包，没一秒钟就被接受。<br>“谢了赵哥。”他发了个抱拳的表情。<br>“老人开心就好。”老板用一个呲牙的表情回复。<br>时言他爹去小区门口看下象棋了，母子俩继续在市场闲逛。<br>“你是不是跟陌陌吵架了。”时言他妈突然说道，露出一副了然一切的表情，“哪有咽炎能严重到一点话都说不出来的。”<br>时言不好意思地笑笑，他懒得解释，索性默认了。<br>“男生在婚姻里要多忍让点，你看看你爸爸就是，多交流，多让步，这样婚姻才能长久。”时言他妈语重心长道，完全不知道目前这个问题只是单纯的肉体问题，跟心灵毫无关系。<br>“还有，结婚五年了，还没个孩子。”<br>时言他妈仿佛不经意间提了一嘴，但时言知道这才是重头戏，不由头疼道：“妈，不是说过几年再说吗。”<br>“五年了都，还不够长？”时言他妈瞪他一眼。<br>“我们还没稳下来，等再过几年，再过几年。也该回家了，我去找我爸。”时言头都大了，连忙找了个理由去找他爸。<br>时言他妈忽然笑了出来：“不装哑巴了？”<br>时言不好意思地挠了挠头，小跑着去了小区外老头们聚集的绿树荫。  </p><h3 id="伍"><a href="#伍" class="headerlink" title="伍"></a>伍</h3><p>时言站在碗池前刷碗，叶陌陌送完公公婆婆开门走了进来。<br>“你妈又说生孩子的事了？”叶陌陌在他脑海中说道。<br>“嗯。”共享思维就是这点不好，想什么都能传过去。他不想跟叶陌陌透露这个事，怕给她增加压力。<br>“不是共享思维啦，一起住这么多年了你什么心情我还看不出来，一猜就知道你家里人来是为了什么。”叶陌陌大大咧咧地说。<br>时言这才想明白原来连对共享思维的抱怨都传了过去，很是无奈地耸了耸肩膀。<br>他又感知到叶陌陌的思维似乎有些黯淡。<br>“我们总不能一辈子这样下去吧。”她说道。<br>时言知道她说的“这样”包括说不出话以及无限期地往后拖延要孩子这两件事。<br>“你想吗？”时言小心翼翼地问道。<br>叶陌陌摇了摇头，但是传过来的却是很迷茫的情绪。“我不知道，总想先混一天是一天。”<br>“那你呢？”叶陌陌同样小心翼翼地试探道。<br>“我听你的。”时言的答案也并不明确。<br>两人沉默了半天，或者说互相感知的思绪嘈杂了半天，因为已经繁杂道大脑无法判定对方的真实想法。<br>叶陌陌晃了晃头，振作起精神道：“科学表明，如果我们有很多事没想好该怎么去做，不如就先去做那个我们一定要做的。”<br>“那我们做什么？”时言问道。<br>“张嘴说话。”<br>叶陌陌拿出手机，开始下电影。  </p><h3 id="陆"><a href="#陆" class="headerlink" title="陆"></a>陆</h3><p>叶陌陌和时言两人一脸严肃地站在电视机前，跟着电视中的国王拍打两颊。<br>“这么做管用吗？”时言有些怀疑。<br>“这电影是真实故事改编，有一定真实性的。”叶陌陌正色道。<br>两人看的电影是《国王的演讲》，正演到教师交给王子锻炼嘴部肌肉的片段。<br>过了很久，直到两人脸颊通红，还是没能说出话来。<br>“我们要不要试试别的……”<br>时言刚问完，忽然察觉到叶陌陌的情绪似乎有点不对劲，他转头看过去，发现叶陌陌正抱着膝盖在哭。<br>“我们是不是一辈子要这样了。”她无声地流着眼泪，抽噎着在时言的脑海中诉说。<br>“肯定有别的方法的。”时言安慰道，但是叶陌陌的思维很快传了过来：<br>“别骗我了，我们能共享思维，你也不知道对不对。”<br>“那我们怎么办啊。”叶陌陌低着头。<br>时言也不回应了。<br>是啊，结婚就是这么无聊的事。<br>不能总是以咽炎为借口在聚会时不说话，不能总是用“过几年”的说辞来逃避孩子等等的问题，不能总像恋爱时一样有着说不尽的话，不能总像小时候向往的那样只有美好而没有烦恼。<br>两人脑海中同时浮现出某个解决办法，然后又有意识地将这办法从自己脑海中抹除，生怕对方发现。<br>“我出去下。”时言突然站了起来，匆匆走出了房屋。  </p><h3 id="柒"><a href="#柒" class="headerlink" title="柒"></a>柒</h3><p>时言正准备走出小区，忽然发现小区门口有个熟悉的身影。<br>“爸！”他喊道，一个站着围观的老头扭过头，对他挥了挥手。<br>“你怎么来也不打声招呼。”时言跟他爸走在小区的步道上，时言埋怨道。<br>“我来看下象棋的，顺道来看看你。”时言他爸笑道。<br>两人走了一段，没什么话说，时言刚想张口说让他回家坐会儿，老头却先张了口。<br>“是你妈非让我来，说你跟陌陌吵架了，让我来劝劝。”<br>时言愣了下，“那我妈怎么不来。”<br>“她说公公婆婆得一个唱白脸一个唱黑脸，这样媳妇才不至于对你太差。”老头不屑道，“我就觉得没什么嘛。”<br>时言想起那天他妈跟他说的话，不由得笑了起来。<br>“你们要是吵架啊，估计也是为了孩子，这事呢说我跟你妈不着急那是假的，但是毕竟是你自己的事，我们也不好说什么，陌陌是个好孩子，不乐意的话别逼人家，没孩子照样过。”<br>“我知道你们年轻人喜欢这种生活方式，我们这些老人跟不上时代了，你们自己愿意，我们也就将就来，只是你妈唠叨，她也就说说，你让陌陌别往心里去……”<br>时言他爸丝毫没察觉到自己也开始唠叨起来。<br>时言笑了笑，忽然问道：“爸，您有没有跟我妈到没话说的时候。”<br>老头想了想，点了点头，又摇了摇头：“说真的，结婚一年我俩就没话说了，什么一开始那股子新鲜感全没了，俩人就是正常上班下班。<br>一开始不习惯，可是后来越来越觉得那些废话也挺有意思，今天的葱贵了几毛钱，明天去哪家串个门，谁家的孩子又考了一百分了，越听越有滋味。”<br>“两个人过日子，哪有天天是激情的，就是两个人没话找话，然后还偏偏觉得没他不行，有些话只有从那个人的嘴里说出来，才叫日子，才叫滋味。”<br>时言感觉自己明白了什么，但还是问了他爸一个问题：<br>“要是真一点话都说不出来呢？”<br>老头想了想，看着时言的眼睛说道：<br>“那你应该就是忘了你最初对她说过的话。”  </p><h3 id="捌"><a href="#捌" class="headerlink" title="捌"></a>捌</h3><p>时言送完他爸回家已经是十点多了。<br>回到家，看见叶陌陌已经恢复了情绪，无需时言诉说，在两人到达连接范围的瞬间她已经知道了今晚的事情。<br>“时言……”叶陌陌的思绪欲言又止。<br>“陌陌，我想清楚了，不知道你怎么想的，但是我觉得这么过一辈子也不错。”时言忽然说道。<br>叶陌陌显然没有理解这个想法。<br>“孩子的话，你想要就要，我会支持你的决定，如果你不想要的话爸妈那边我去说。至于不说话……”他挠了挠头，“我还挺喜欢这样子的，还能省话费。”<br>然后他踏步上前，笑着把叶陌陌搂在怀里。<br>叶陌陌的脸猛地通红，在时言的脑海中骂道：“老夫老妻了，抱什么抱。”<br>时言没说话，只是轻轻抱着她，感受着两人思绪交融。<br>忽然，他似乎察觉了什么。<br>“我好像……知道该怎么让我说话了。”他抓住叶陌陌的肩膀，眼中带着欣喜。<br>“怎么说？”叶陌陌好奇地瞪大了眼睛。<br>“我不能说话，是因为我忘了我最初说过的话。”<br>时言清了清喉咙，重新想起自己很久未说过的，但是却藏在两人生活中点点滴滴的字眼。<br>这句话随着时间流逝填充着他们生活的每个缝隙，但是却忘了偶尔将它拿出来。<br>像是从梦境中清醒，又像是嫩芽破开冻土，时言费力地震动喉咙，将那句他好久没有说过的话再次对眼前人说出。<br>声音稚嫩如初见的情侣，语气却有被生活打磨过的温润痕迹。  </p><p>“我爱你。”</p><p>他这么说着。</p><p><strong>End</strong></p><hr><p>原文作者 微博<span class="label label-success">@山城二十四</span></p>]]></content>
    
    
    
    <tags>
      
      <tag>others</tag>
      
      <tag>转载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS美化博客 第二期</title>
    <link href="/2020/02/26/CSS%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2%20%E7%AC%AC%E4%BA%8C%E6%9C%9F/"/>
    <url>/2020/02/26/CSS%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2%20%E7%AC%AC%E4%BA%8C%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Royce2019/img/img/2335206_94a1b9ce_7356_3822@1600x719.jpeg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p class="note note-info">首发于酷安，再转博客上，没怎么编辑。由于酷安不支持 Markdown 所以没 TOC 之类的</p><p>第二期主要讲圆角动画</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_886f2e08_7356_3824@271x265.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>在此期间已经有大佬 <a href="https://www.coolapk.com/u/Moce_Hu" target="_blank" rel="noopener">@Moce_Hu</a> 催更，然鹅他自己已经做了圆角动画<br>可能这就是大佬吧<br>该教程面向小白，大佬请略过全文</p><a id="more"></a><p>如果你是真的想学 css，建议通过专业方法学习，此教程只是为了帮助小白利用 css 美化博客，所以方法略微有些奇怪。也感谢对于上篇文章大佬们的评论建议!</p><!--more--><p>首先，制作圆角动画需要认识一个 css 属性 border-radius ，他用来向元素添加圆角边框。最简单的用法就是在后面加上 多少px</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.header-inner</span> &#123;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;&#125;</code></pre></div><p>我们先从菜单栏开始改起</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_40ed0f7d_7356_3828@1918x928.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>左边 HTML 代码中我们找到了对应菜单栏的一行，其中 class=”header-inner” header-inner 我们称他为类名，你会发现类名和右边 css 中对应的红色字是一样的，没错，这两个就相当于做一个标记，告诉浏览器，我这个标签需要那个 css 样式。<br>上期也有人说到既然找到了类名，为什么不直接去修改 css 代码而是新建应该文件来写？该主题本身的 css 代码非常非常多，如果你在里面改，万一哪天出错了，你得跑到你部署的平台去翻版本对比，就回变得比较麻烦，而你直接写在新文件中会变得方便很多，当然了，这方法也有缺点，比如很多样式需要加<br>!important 这是非常不好的地方</p><p>找到了对应的css接下来直接写入就行了</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.header-inner</span> &#123;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;&#125;</code></pre></div><p>后面的值越大，圆角也越大<br>接着找打其他元素对应的 css，依次加入代码就好啦<br>通过寻找<br>发现博客文章那个框框是 post-block</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_1ea14b4a_7356_3832@1920x1036.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>那就加入如下代码</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.post-block</span> &#123;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span> <span class="hljs-meta">!important</span>;&#125;</code></pre></div><p>然后是侧边栏<br>寻找发现是<code>sidebar-inner</code></p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_f07e2f1d_7356_3836@1920x1037.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>加入如下代码</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.sidebar-inner</span>&#123;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;&#125;</code></pre></div><p>这里有个小坑</p><p>侧边框，也就是那个有头像的地方，这里作者放了两层东西，可以当做图层理解，如果你只是让其中一层圆角，那么另一层任然是直角<br>所以我们刚刚修改了，但是并没有完全起效果，会出现这种情况</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_61fff449_7361_3208@421x220.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>所以侧边栏中我们需要修改两个</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_f60854e0_9009_2345@1920x1040.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.sidebar</span> &#123;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span> <span class="hljs-meta">!important</span>;&#125;<span class="hljs-selector-class">.sidebar-inner</span> &#123;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15</span>p×;&#125;</code></pre></div><p>关于图层，推荐阅读 <a href="https://www.coolapk.com/u/我是天小正" target="_blank" rel="noopener">@我是天小正</a> 的图文，写的很好</p><p>接下来就是触碰恢复直角和阴影了<br>直角很简单，也就是不要圆角<br>那直接写 <code>border-radius = 0px;</code><br>阴影我们需要认识一个新的 css 属性<br><code>box-shadow</code>，用法如下<br><code>box-shadow: h-shadow v-shadow blur spread color inset;</code><br>其中 <code>h-shadow v-shadow</code> 是必须要写的，其他随便，那这里就不介绍其他的了<br><code>h-shadow</code> 是水平阴影的位置，那v-shadow就是垂直阴影的位置了<br>还有 <code>color</code> 说下</p><p>大家应该都懂吧，也就是阴影的颜色<br>那事情就变得简单了<br>再把这个东西加进去就好啦<br>下面是我的源码  </p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.post-block</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-class">.header-inner</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-class">.sidebar</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-class">.sidebar-inner</span><span class="hljs-selector-pseudo">:hover</span>,<span class="hljs-selector-class">.comments</span><span class="hljs-selector-pseudo">:hover</span> &#123;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0px</span> <span class="hljs-meta">!important</span>;<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">6</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">6</span>);&#125;</code></pre></div><p>但仅仅这样是不行的<br>你会发现他真的是圆角变直角，也加上了阴影，但是完全没有过度，就是硬生生的变过去</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_6eda9c46_7361_3214@292x233.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>丑爆了<br>那接下来我们需要给他加上动画<br>可能大家认为这过程非常非常复杂，但是看看标题如何用css的几行代码美化网站<br>所以只需要一行代码就解决啦<br>我们得先认识一个新属性<br><code>transition-duration</code>，规定某一个元素完成过渡效果需要的时间，默认是 0，所以就是没过渡效果<br>用法很简单，后面加上时间就好啦，还需要加单位<br>我们先拿菜单栏试试，比如这样写  </p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.header-inner</span> &#123;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;&#125;<span class="hljs-selector-class">.header-inner</span>: <span class="hljs-selector-tag">hover</span> &#123;<span class="hljs-attribute">transition-duration</span>: .<span class="hljs-number">5s</span>;<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">6</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">6</span>);<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0px</span>;&#125;</code></pre></div><p>然后就会有这样的效果</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_59053e39_7361_3218@452x376.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="aaa"></p><p>很清楚的可以看到，鼠标上去恢复直角是有过渡的了，但是鼠标移开的时候就没过渡动画了<br>看看代码，我把 transition-duration 写到了 xx:hover 里面，前面说过了，他是规定这个标签过渡需要的时间，我写入 :hover 中也就意味着只在这个标签被触碰时生效，所以我们应该不应该放入 hover 中，而应该这样  </p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-class">.header-inner</span> &#123;<span class="hljs-attribute">transition-duration</span>: .<span class="hljs-number">5s</span>;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;&#125;<span class="hljs-selector-class">.header-inner</span><span class="hljs-selector-pseudo">:hover</span> &#123;<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">6</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">6</span>);<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0px</span>;&#125;</code></pre></div><p>可能由于我比较菜当初就跳进了这个坑<br>那么其他的按这个修改下，就大功告成了 </p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_886f2e08_7356_3824@271x265.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>关于 border-radius 再说下<br>其实 transition-duration 包含了</p><p><code>border-top-left-radius</code><br><code>border-top-right-radius</code><br><code>border-bottom-left-radius</code><br><code>border-bottom-right-radius</code>  </p><p>也就是你可以用一个来设置四个角<br>也可以每个角单独设置<br>比如这上面的一行和下面的四行效果是一样的</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_7d24f093_7361_3221@1028x568.png.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>知道了这个东西我们还可以设置菜单栏顶上那个黑黑的东西</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_433bb9d2_7366_3371@812x660.png.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>下面是效果</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_d9dc472f_7366_3373@384x265.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>虽说这个也可以直接四个角一起设置</p><p>再顺带讲个透明度吧<br>也需要认识一个新属性 opacity<br>用法也很简单，后面直接加 0～1 的小数，1 是不透明，0 是全透明<br>比如这样</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_80164241_7366_3375@1028x448.png.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>就像这样，菜单栏有设置透明，而其他没有</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_322faf31_7366_3377@458x709.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>接下来附上全部源码</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_b6daa349_9009_8915@1412x2536.png.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>番外<br>其实是先讲一点下一期的东西啦<br>首页的那个头像，在主题配置里可以开启触碰旋转，但是这里毕竟是大佬聚集地，那我们不如自己写一个</p><p>首先认识一个新属性<br>这篇图文的最后一个了<br>transform，可对元素进行旋转等<br>这次只需要用到旋转，所以也只讲这个<br>用法如下<br>transform: rotate(10deg)<br>旋转 10º<br>正的顺时针转，负的逆时针转<br>然后找到对应 css  </p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_58276f48_7366_3381@1920x1027.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>然后加入代码</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_0d7f20c5_7366_3383@768x548.png.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>然后就好啦</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_2c56a3d1_7366_3385@211x223.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>我们还可以转多一点</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_809bae87_9010_5858@211x223.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>还可以再快一点</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_d446060d_7372_0258@211x223.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>再快一点</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_332021db_7372_026@211x223.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>好吧由于帧率限制，再快就录不出来效果了</p><p>第三期应该快来了<br>先上效果图</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_3825e33f_9010_586@1057x986.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>教程</tag>
      
      <tag>CSS</tag>
      
      <tag>NexT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS美化博客 第一期</title>
    <link href="/2020/02/22/CSS%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2%20%E7%AC%AC%E4%B8%80%E6%9C%9F/"/>
    <url>/2020/02/22/CSS%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2%20%E7%AC%AC%E4%B8%80%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_83c5ad65_5449_5352@1080x485.jpeg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p class="note note-info">首发于酷安，再转博客上，没怎么编辑。由于酷安不支持 Markdown 所以没 TOC 之类的</p><span class="drop-cap">封</span><p>面感谢 <a href="https://www.coolapk.com/u/我是天小正" target="_blank" rel="noopener">@我是天小正</a> 的教程<br>哪个男孩子不想要一个炫酷的博客！<br>哪个女孩子不想要一个超赞的博客！</p><p>给博客加上动画绝对能让你的博客变得超帅<br>当然啦，普通网站也是可以的</p><a id="more"></a><p>就像这样</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_2f07b4cb_2241_1163@221x177.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>提前声明<br>本教程面向纯小白<br>保证每一个看完的人都能马上学会<br>并且马上能自己写出来<br>大佬可略过全文</p><p>首先先确保你的博客能自定义<br>不能也没关系啦<br>就当写着玩<br>本文章以最新版 Hexo 的 NexT 主题演示</p><p>首先按照作者的要求<br>在 source 下创建 _data 文件夹<br>然后 _data 中 styles.styl<br>然后在主题配置文件中取消 styles.styl 的注释<br>旧版的 next 主题自定义文件夹已经是创建好多了，好像是个 custom 什么什么的，搜一下就知道了</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_bf9336ba_2241_1165@998x732.png.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>然后就开始面向浏览器编程了<br>这里用的是 edge 其他浏览器大致操作也一样<br>首先开着 hexo s 本地预览吧，等会方便点</p><p>浏览器打开，然后物色下你想改什么<br>先从最简单的吧</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_8e0d8e29_2241_1167@214x166.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>valine 评论的回复按钮</p><p>很明显，触碰到，他颜色就变深了，好神奇啊<br>本身这个按钮是白色的，我把他改成蓝的了，但是我现在想要绿色<br>所以我们先让他变绿色吧!<br>先讲鼠标放到这上面然后 右键–&gt;检查<br>然后在侧边或者底部就会跳出来一个这样的东西</p><p><img src="https://gitee.com/Royce2003/blogimages/raw/master/img/2335206_380d1be3_2241_1169@1920x1077.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>我个人习惯在底部<br>可以按照图片里的来改位置</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_083e1aac_5449_5354@1920x1077.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>这时候你回惊奇的发现左边有一行被标出来了，可以看到他中间有回复两个字</p><p>现在我们大致就可以确定刚刚到按钮差不多就是这一行代码写出来的<br>如果没有标出也不要紧，可以再一次把鼠标放在按钮上重复一次<br>也可以点击左上角那个东西，然后再用鼠标点击你想要找到<br>像下面这样</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_837ca731_2241_1173@1920x1080.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>注意，右边的那一小栏也是会跟着变化的，那里面就是我们需要修改的 css 代码<br>他会把所有和我们选中的东西有关的 css 都列出来，被划线的就是没起作用的，不要管他</p><p>看不懂？<br>没关系</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_22701cc1_5449_5356@398x577.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>我们先从知道的入手<br>按钮最初是灰色的（我蓝色是改过之后）<br>那么我们就在里面找找有没有灰色</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_b80937c5_2241_1177@433x628.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>找到以后鼠标放上去，会出现选框，我们尝试着把这一行给去掉</p><p>注意！<br>找的时候<br>如果看到红色字是 body 和 html 或者 head 基本就不用管他了</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_0ec3a83a_2245_466@384x370.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>因为这不是我们想要的<br>这几个也基本在末尾<br>（正常情况不是改这几个里面的东西）</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_b80937c5_2241_1177@433x628.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>把这行的勾去掉</p><p>但是你把刚刚说的勾去掉之后会发现没什么变化？<br>可是只在这看到了灰色（除去前面说不要看的那几个）<br>没关系，既然颜色去掉了没变化那我们去其他的看看，可以把灰色所处的大括号中的其他行去掉勾试试<br>当我们试到这个的时候发现按钮变小了！</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_6fa08d19_2245_4662@380x594.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>那我们现在就可以确定这个大括号里的东西控制了这个按钮，那就非常简单了，照着这样改就好了</p><p>首先记下这个叫什么，也就是红色的字</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_2403ef23_2245_4664@404x500.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>然后打开刚刚创建的 styles.styl<br>把这个复制进去</p><p>注意！那些小点点别忘了！开头是有个点的！<br>我们要改颜色，刚刚也看到了灰色那一行<br>前面是个 background</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_260243b4_2245_4666@222x22.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>大家都认识吧<br>可以先在这里改改看看有没有效果<br>双击颜色代码就可以修改了<br>酷安绿 #36bd7b（可能是这个颜色吧）<br>看到他成功变绿</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_306c0a93_2245_4668@326x489.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>那就按照这样写进去就可以啦</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_f694769d_2245_467@1052x438.png.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>每句话结尾有分号<br>然后刷新页面试试（先保存再刷新，接下来也是这样）<br>并没有起作用？刚刚在这里面改不是可以吗<br>别急<br>再来看看</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_a2fd6fc7_2245_4671@433x778.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>你会发现他并没有变<br>而你写的在下方<br>还被划掉了</p><p>这时候引入一个概念 优先级<br>就比如你在家<br>你爸叫你去买菜<br>你妈叫你去写作业<br>然而你妈等级高一点<br>你自然得听你妈的<br>这也一样，前面规定背景是灰色，后面规定是绿色，可人家优先级高，所以就是灰的啦。不过优先级是可以手动调整的，只需要在代码后面加一句话<br>写在分号之前！<br>还有个感叹号别漏了！<br>important 大家都认识吧</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_09ac2ce1_2245_4673@1052x438.png.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>加了之后我们再刷新界面</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_8866d166_2245_4675@421x771.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>局势反转，你爸赢了你妈，你可以出去买菜了<br>起初的颜色改好了，那写下来就要改变触碰之后的颜色<br>这里要新了解一个词 hover</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_eabfab79_2247_9778@678x321.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>解释里有个靠近的意思，那我们就可以理解成触碰了（强行理解）<br>我们试试碰她（他）<br>发现字和边框都会变蓝<br>那就去找蓝色啊，得找带 hover 的这种</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_cb7e1917_2247_978@378x109.jpeg.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>border是边框的意思（看到自己不认识的，直接去百度这个东西的用法）<br>接着也就按照刚刚到方法先复制红色的进去<br>现在这改改颜色，改好之后再写进去<br>如果发现自己写的被划掉了没生效就加个<br>!import<br>下面是我的完整代码</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_b3036963_2247_9781@1034x622.png.m.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>我加了<br>border：0px 边框像素为0，就是去掉边框啦<br>color：white 字的颜色改成白色，至于为什么字的颜色是改color而不是其他的，你按照刚刚到方法试试不就知道了</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_54097ecf_2247_9783@1920x1080.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>成功</p><p>恭喜，你已经学会啦<br>只是第一篇<br>总共 css 的教程会有三篇<br>难度递增<br>也不是难度递增，是装x能力递增</p><p>改这个东西对于大佬来说应该1分钟也不用<br>但是谁叫我们是萌新呢</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_b8104f91_2247_9785@262x128.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>再来个下篇预告<br>其实就是第一张 gif<br>加另一个类似的<br>先是圆角<br>然后一碰就会慢慢恢复<br>触碰的同时还会出现阴影</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_2f07b4cb_2241_1163@221x177.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_12a0e70c_2247_9787@378x465.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>算了，第三期的图也先上<br>里面外面都有阴影!<br>里面的头像还会转哦</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_70fe20b4_2247_9788@1021x842.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>最后上一张大图<br>动画背景</p><p><img src="http://image.coolapk.com/feed/2020/0221/16/2335206_8a27c7b0_2247_979@1920x1080.gif" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></p><p>这个不一定会出图文<br>我不知道怎么讲这个<br>因为这个我自己做的也是挺懵逼的<br>考虑考虑到时候可能直接上代码</p><p>背景图4张来自 material-x 主题</p><p>这个背景动画其实是我看了那个主题才想做的，然后第三期的那个友链界面也是看了那个主题的友链界面，模仿了下动画</p><p>最后闪拿一下是结束造成的<br>动画非常顺，gif 压缩了看着就不怎么顺了</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>教程</tag>
      
      <tag>CSS</tag>
      
      <tag>NexT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Valine评论之微信提醒</title>
    <link href="/2020/02/20/Valine%E9%82%AE%E4%BB%B6%E5%BE%AE%E4%BF%A1%E6%8F%90%E9%86%92/"/>
    <url>/2020/02/20/Valine%E9%82%AE%E4%BB%B6%E5%BE%AE%E4%BF%A1%E6%8F%90%E9%86%92/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">该</span><p>功能基于 Leancloud 的云引擎与云函数。<br>可以提供邮件 通知站长 和 被@ 通知 的功能还支持自定义邮件模板哦![^1]</p><p>项目来自 <a href="http://www.zhaojun.im/" target="_blank" rel="noopener">查看链接</a></p><p>首先你需要一个可以正常使用 Valine 的博客</p><h2 id="邮件提醒"><a href="#邮件提醒" class="headerlink" title="邮件提醒"></a>邮件提醒</h2><p><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine官方文档</a></p><p>首先进入 LeanCloud</p><p>华东节点的从这里进 <a href="https://tab.leancloud.cn/applist.html#/apps" target="_blank" rel="noopener">查看链接</a></p><p>华北节点从这里 <a href="https://leancloud.cn/dashboard/login.html#/apps" target="_blank" rel="noopener">查看链接</a></p><h3 id="修改代码库"><a href="#修改代码库" class="headerlink" title="修改代码库"></a>修改代码库</h3><p>然后进入放评论数据的那个应用，云引擎–&gt;设置–&gt;修改代码库为<br><code>https://github.com/zhaojun1998/Valine-Admin</code></p><p><img src="https://cos.royce2003.top/22549/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>进入部署界面，选择 Git 源码部署，</p><p><img src="https://cos.royce2003.top/22549/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>修改 分支或版本号为 master</p><p><img src="https://cos.royce2003.top/22549/03.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>下载最新依赖是升级用的<br>然后点击部署<br>过程会比较漫长，耐心等待当看到完成之类的字眼就好啦图片我下了个最新依赖花了我 4 分钟…..</p><p><img src="https://cos.royce2003.top/22549/04.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>接下来就需要配置环境变量了</p><div class="note note-warning">            <p>环境变量配置图片已更新，请注意 SITE_URL 的值需要带 http(s)，否则邮件无法跳转</p>          </div><p><img src="https://cos.royce2003.top/22549/05.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p><code>SITE_NAME</code> : 网站名称<br><code>SITE_URL</code> : 网站地址, 最后不要加 / SMTP_SERVICE : 邮件服务提供商，不如QQ，163…<br><code>SMTP_USER</code> : SMTP 服务用户名，邮箱地址<br><code>SMTP_PASS</code> : SMTP 密码，不是登录密码哦，是授权码，就是超级超级坑，需要你花钱发短信才能获得的授权码!<br><code>SENDER_NAME</code> : 寄件人名称<br><code>TEMPLATE_NAME</code>：邮件的样式，可以不写这行就按默认，除了默认还有另一个样式rainbow<br>（我没提到但图片里有的环境变量先不管他）<br>支持的邮件服务商:<br><code>&quot;126&quot; &quot;163&quot; &quot;1und1&quot; &quot;AOL&quot; &quot;DebugMail&quot; &quot;DynectEmail&quot; &quot;FastMail&quot; &quot;GandiMail&quot; &quot;Gmail&quot; &quot;Godaddy&quot; &quot;GodaddyAsia&quot; &quot;GodaddyEurope&quot; &quot;hot.ee&quot; &quot;Hotmail&quot; &quot;iCloud&quot; &quot;mail.ee&quot; &quot;Mail.ru&quot; &quot;Maildev&quot; &quot;Mailgun&quot; &quot;Mailjet&quot; &quot;Mailosaur&quot; &quot;Mandrill&quot; &quot;Naver&quot; &quot;OpenMailBox&quot; &quot;Outlook365&quot; &quot;Postmark&quot; &quot;QQ&quot; &quot;QQex&quot; &quot;SendCloud&quot; &quot;SendGrid&quot; &quot;SendinBlue&quot; &quot;SendPulse&quot; &quot;SES&quot; &quot;SES-US-EAST-1&quot; &quot;SES-US-WEST-2&quot; &quot;SES-EU-WEST-1&quot; &quot;Sparkpost&quot; &quot;Yahoo&quot; &quot;Yandex&quot; &quot;Zoho&quot; &quot;qiye.aliyun&quot;</code> 就这么多啦</p><div class="note note-danger">            <p>每次配置完环境变量需要重启容器!</p>          </div><p>好啦，至此已经完成了邮件提醒!</p><h3 id="防止休眠"><a href="#防止休眠" class="headerlink" title="防止休眠"></a>防止休眠</h3><p>不过还有个小问题 LeanCloud 也是要恰饭的，当然不可能给你免费提供给这么好的服务!</p><p>免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行<br>每天必须休眠 6 个小时</p><p>30 分钟内没有外部请求就会休眠</p><p>休眠后如果有新的外部请求才启动但是启动的第一份邮件会发送失败</p><p>如果您不缺钱请直接购买付费容器并跳过这段</p><p>正是因为大家都缺钱所以我们需要利用 LeanCloud的 云函数进行唤醒</p><p>既然必须休眠 6 个小时，那就让他休眠呗，总不可能你博客 24 小时都有人评论</p><p>首先我们需要再添加一个环境变量 <code>ADMIN_URL</code> 然后把下方 Web 主机域名给填写上</p><p><img src="https://cos.royce2003.top/22549/06.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>然后点击定时任务–&gt;创建定时任务</p><p><img src="https://cos.royce2003.top/22549/07.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>名字随便取<br>选择生产环境下的 <code>self_wake</code><br>然后cron表达式输入<br><code>0 */30 7-23 * * ?</code><br>意思是 8 点到 23 点每 30 分钟唤醒一次<br>这是我的表达式<br>大家可以按自己需求改只需要保证 6 小时的休眠就好啦<br>然后如果出问题了可以去应用日志里查看以下</p><p><img src="https://cos.royce2003.top/22549/08.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/22549/09.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>当有人评论时，应用日志里也会显示  </p><h3 id="评论管理"><a href="#评论管理" class="headerlink" title="评论管理"></a>评论管理</h3><p>然后还记得刚刚的 Web 主机域名，你也可以绑定自己的域名<br>通过访问该地址你就可以管理评论啦<br>但当你打开网址时会叫你登录<br>这时候你需要去创建个用户，也就是你自己<br>只需要填写密码，username，邮箱</p><p><img src="https://cos.royce2003.top/22549/10.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/22549/11.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>注意！邮箱才是是你的登录名！<br>不懂这是什么逻辑</p><h2 id="微信提醒"><a href="#微信提醒" class="headerlink" title="微信提醒"></a>微信提醒</h2><p>好啦，接下来时加如微信提醒[^2]了<br>首先进入 Server 酱官网注册个账号然后按官网首页绑定微信</p><p><img src="https://cos.royce2003.top/22549/12.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>第三步时测试绑定有没有成功</p><h3 id="更改代码库"><a href="#更改代码库" class="headerlink" title="更改代码库"></a>更改代码库</h3><p>然后还记得更改的代码仓库吗，将他改成这个<br><code>https://github.com/sviptzk/Valine-Admin-Server</code> 点击保存</p><p><img src="https://cos.royce2003.top/22549/13.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h3 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>然后再添加一个新的环境变量 <code>SCKEY</code></p><p><img src="https://cos.royce2003.top/22549/14.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p><code>SCKEY</code> 的值从这来</p><p><img src="https://cos.royce2003.top/22549/15.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><div class="note note-danger">            <p>然后一定记得要进行重新部署，重启容器！</p>          </div><p>大功告成，你可以在微信收到博客的评论了！</p><p>[^1]: 参考： <a href="http://www.zhaojun.im/hexo-valine-admin/" target="_blank" rel="noopener">Hexo 优化 — Valine 扩展之邮件通知</a><br>[^2]: 参考： <a href="https://www.antmoe.com/posts/2380732b/index.html" target="_blank" rel="noopener">Hexo 博客 valine 评论微信、qq 提醒</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android无障碍服务导致的全局卡顿分析</title>
    <link href="/2020/02/15/Android%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%8D%E5%8A%A1%E5%AF%BC%E8%87%B4%E7%9A%84%E5%85%A8%E5%B1%80%E5%8D%A1%E9%A1%BF%E5%88%86%E6%9E%90/"/>
    <url>/2020/02/15/Android%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%8D%E5%8A%A1%E5%AF%BC%E8%87%B4%E7%9A%84%E5%85%A8%E5%B1%80%E5%8D%A1%E9%A1%BF%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">文</span>章转载自魅族系统性能优化工程师，对于某些要求开启无障碍的应用，不开源，不盈利又掌握着你系统的“最高权限”<a id="more"></a><h1 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h1><p>有用户反馈，手机在滑动的时候, 列表会一抖一抖的, 滑动桌面或者设置（只要是可以滑动的），都会出现，但是这个并不是必现，而是某些用户会出现，某些用户则不会出现。</p><p>吃瓜群众可以直接拉到下面看 罪魁祸首和自检 ，对分析问题比较感兴趣的可以看一下分析的过程。</p><h1 id="Systrace-分析"><a href="#Systrace-分析" class="headerlink" title="Systrace 分析"></a>Systrace 分析</h1><p>本地测试有一台复现, 拿过来之后分析发现,手指滑动桌面或者设置,都会必现卡顿, 从 Trace 上看就是下面这样<br><a href="https://www.androidperformance.com/images/media/performancecase/15482434530990.jpg" target="_blank" rel="noopener"><img src="https://www.androidperformance.com/images/media/performancecase/15482434530990.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></a></p><p>红色箭头处就是掉帧的地方. 从上面的 Buffer 个数可以看到, SF没有绘制的原因是 Launcher 没有提交 Buffer 上来.</p><p>对应的 Launcher Trace 如下 , 可以看到 Launcher 没有绘制的原因是没有 Input 事件传上来. 所以 Launcher 的画面没有更新, 所以才会出现掉帧.<br><a href="https://www.androidperformance.com/images/media/performancecase/15482435308066.jpg" target="_blank" rel="noopener"><img src="https://www.androidperformance.com/images/media/performancecase/15482435308066.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></a></p><p>没有事件上来这个本身就是有问题的 , 我们手指是连续从屏幕上划过的, 事件的上报应该是连续的才对, 我们怀疑是屏幕报点有问题, 不过 Check 硬件之前我们首先看一下 InputReader 和 InputDispatcher 线程是否正常工作</p><p><a href="https://www.androidperformance.com/images/media/performancecase/15482435458655.jpg" target="_blank" rel="noopener"><img src="https://www.androidperformance.com/images/media/performancecase/15482435458655.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></a></p><p>从图中可以看到 InputReader 线程是正常工作的 , 但是 InputDIspatcher 线程却有问题, 大家可以看一下正常情况下这两个线程的对应关系</p><p><a href="https://www.androidperformance.com/images/media/performancecase/15482435564755.jpg" target="_blank" rel="noopener"><img src="https://www.androidperformance.com/images/media/performancecase/15482435564755.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></a></p><p>再回到有问题的那个图 , 仔细看发现 InputDispatcher 线程的周期是和 Vsync 是相同的, 也就是说, InputDispatcher 的唤醒逻辑由 InputReader 唤醒变为由 Vsync 唤醒</p><p>再仔细看的话，点开 InputDIspatcher 的线程 cpu 状态可以看到， 唤醒执行任务的 InputDispatcher 线程并不是被 InputReader 线程唤醒的, 而是被 System_Server 的 UI Thread 唤醒的.</p><p>那么接下来， 就需要从代码的角度来看为什么 InputReader 没有唤醒 InputDIspatcher 。</p><h1 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h1><p>InputReader 唤醒 InputDispatcher 线程的逻辑如下（以本例中的 Move 手势为例。），</p><p>frameworks/native/services/inputflinger/InputDispatcher.cpp</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">InputDispatcher::notifyMotion</span><span class="hljs-params">(<span class="hljs-keyword">const</span> NotifyMotionArgs* args)</span> </span>&#123;    <span class="hljs-keyword">if</span> (!validateMotionEvent(args-&gt;action, args-&gt;actionButton,                args-&gt;pointerCount, args-&gt;pointerProperties)) &#123;        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">uint32_t</span> policyFlags = args-&gt;policyFlags;    policyFlags |= POLICY_FLAG_TRUSTED;    android::base::Timer t;    mPolicy-&gt;interceptMotionBeforeQueueing(args-&gt;eventTime, <span class="hljs-comment">/*byref*/</span> policyFlags);    <span class="hljs-keyword">if</span> (t.duration() &gt; SLOW_INTERCEPTION_THRESHOLD) &#123;        ALOGW(<span class="hljs-string">"Excessive delay in interceptMotionBeforeQueueing; took %s ms"</span>,                <span class="hljs-built_in">std</span>::to_string(t.duration().count()).c_str());    &#125;    <span class="hljs-keyword">bool</span> needWake; <span class="hljs-comment">//是否需要唤醒</span>    &#123; <span class="hljs-comment">// acquire lock</span>        mLock.lock();        <span class="hljs-keyword">if</span> (shouldSendMotionToInputFilterLocked(args)) &#123;            mLock.unlock();            MotionEvent event;            event.initialize(args-&gt;deviceId, args-&gt;source, args-&gt;action, args-&gt;actionButton,                    args-&gt;flags, args-&gt;edgeFlags, args-&gt;metaState, args-&gt;buttonState,                    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, args-&gt;xPrecision, args-&gt;yPrecision,                    args-&gt;downTime, args-&gt;eventTime,                    args-&gt;pointerCount, args-&gt;pointerProperties, args-&gt;pointerCoords);            policyFlags |= POLICY_FLAG_FILTERED;            <span class="hljs-comment">// SystemServer 上层要对事件进行过滤</span>            <span class="hljs-keyword">if</span> (!mPolicy-&gt;filterInputEvent(&amp;event, policyFlags)) &#123;                <span class="hljs-keyword">return</span>; <span class="hljs-comment">// event was consumed by the filter</span>            &#125;            mLock.lock();        &#125;        <span class="hljs-comment">// Just enqueue a new motion event.</span>        MotionEntry* newEntry = <span class="hljs-keyword">new</span> MotionEntry(args-&gt;eventTime,                args-&gt;deviceId, args-&gt;source, policyFlags,                args-&gt;action, args-&gt;actionButton, args-&gt;flags,                args-&gt;metaState, args-&gt;buttonState,                args-&gt;edgeFlags, args-&gt;xPrecision, args-&gt;yPrecision, args-&gt;downTime,                args-&gt;displayId,                args-&gt;pointerCount, args-&gt;pointerProperties, args-&gt;pointerCoords, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);        needWake = enqueueInboundEventLocked(newEntry);         mLock.unlock();    &#125; <span class="hljs-comment">// release lock</span>    <span class="hljs-keyword">if</span> (needWake) &#123;        mLooper-&gt;wake();    &#125;&#125;</code></pre></div><p>需要注意这里 ，mPolicy-&gt;filterInputEvent 直接 return了，也就是说这里如果返回 false，那么就直接 return 了， 不继续执行下面的步骤。</p><p>继续看 mPolicy-&gt;filterInputEvent</p><p>frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">NativeInputManager::filterInputEvent</span><span class="hljs-params">(<span class="hljs-keyword">const</span> InputEvent* inputEvent, <span class="hljs-keyword">uint32_t</span> policyFlags)</span> </span>&#123;    ATRACE_CALL();    jobject inputEventObj;    JNIEnv* env = jniEnv();    <span class="hljs-keyword">switch</span> (inputEvent-&gt;getType()) &#123;    <span class="hljs-keyword">case</span> AINPUT_EVENT_TYPE_KEY:        inputEventObj = android_view_KeyEvent_fromNative(env,                <span class="hljs-keyword">static_cast</span>&lt;<span class="hljs-keyword">const</span> KeyEvent*&gt;(inputEvent));        <span class="hljs-keyword">break</span>;    <span class="hljs-keyword">case</span> AINPUT_EVENT_TYPE_MOTION:        inputEventObj = android_view_MotionEvent_obtainAsCopy(env,                <span class="hljs-keyword">static_cast</span>&lt;<span class="hljs-keyword">const</span> MotionEvent*&gt;(inputEvent));        <span class="hljs-keyword">break</span>;    <span class="hljs-keyword">default</span>:        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">// dispatch the event normally</span>    &#125;             <span class="hljs-comment">// The callee is responsible for recycling the event.</span>    jboolean pass = env-&gt;CallBooleanMethod(mServiceObj, gServiceClassInfo.filterInputEvent,            inputEventObj, policyFlags);    <span class="hljs-keyword">if</span> (checkAndClearExceptionFromCallback(env, <span class="hljs-string">"filterInputEvent"</span>)) &#123;        pass = <span class="hljs-literal">true</span>;    &#125;    env-&gt;DeleteLocalRef(inputEventObj);    <span class="hljs-keyword">return</span> pass;&#125;</code></pre></div><p>这里从 jni 调回到 java 层， 也就是 InputManagerService 的 filterInputEvent 方法。</p><p>com/android/server/input/InputManagerService.java</p><div class="hljs"><pre><code class="hljs aspectj"><span class="hljs-comment">// Native callback.</span><span class="hljs-keyword">final</span> <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">filterInputEvent</span><span class="hljs-params">(InputEvent event, <span class="hljs-keyword">int</span> policyFlags)</span> </span>&#123;    <span class="hljs-keyword">synchronized</span> (mInputFilterLock) &#123;        <span class="hljs-keyword">if</span> (mInputFilter != <span class="hljs-keyword">null</span>) &#123;            <span class="hljs-keyword">try</span> &#123;                mInputFilter.filterInputEvent(event, policyFlags);            &#125; <span class="hljs-keyword">catch</span> (RemoteException e) &#123;                <span class="hljs-comment">/* ignore */</span>            &#125;            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;        &#125;    &#125;    event.recycle();    <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;&#125;</code></pre></div><p>跟代码流程发现, 这个 mInputFilter 是 AccessibilityInputFilter 的一个实例, 在 辅助功能里面打开开关的时候,会调用 AccessibilityManagerService 的 updateInputFilter 方法来设置 InputFilter.</p><p>android/view/InputFilter.java</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">filterInputEvent</span><span class="hljs-params">(InputEvent event, <span class="hljs-keyword">int</span> policyFlags)</span> </span>&#123;    mH.obtainMessage(MSG_INPUT_EVENT, policyFlags, <span class="hljs-number">0</span>, event).sendToTarget();&#125;<span class="hljs-keyword">case</span> MSG_INPUT_EVENT: &#123;    <span class="hljs-keyword">final</span> InputEvent event = (InputEvent)msg.obj;    <span class="hljs-keyword">try</span> &#123;        <span class="hljs-keyword">if</span> (mInboundInputEventConsistencyVerifier != <span class="hljs-keyword">null</span>) &#123;            mInboundInputEventConsistencyVerifier.onInputEvent(event, <span class="hljs-number">0</span>);        &#125;        onInputEvent(event, msg.arg1);    &#125; <span class="hljs-keyword">finally</span> &#123;        event.recycle();    &#125;    <span class="hljs-keyword">break</span>;&#125;</code></pre></div><p>继续看 onInputEvent(event, msg.arg1);<br>com/android/server/accessibility/AccessibilityInputFilter.java</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onInputEvent</span><span class="hljs-params">(InputEvent event, <span class="hljs-keyword">int</span> policyFlags)</span> </span>&#123;    <span class="hljs-keyword">if</span> (mEventHandler == <span class="hljs-keyword">null</span>) &#123;        <span class="hljs-keyword">if</span> (DEBUG) Slog.d(TAG, <span class="hljs-string">"mEventHandler == null for event "</span> + event);        <span class="hljs-keyword">super</span>.onInputEvent(event, policyFlags);        <span class="hljs-keyword">return</span>;    &#125;    EventStreamState state = getEventStreamState(event);    <span class="hljs-keyword">if</span> (state == <span class="hljs-keyword">null</span>) &#123;        <span class="hljs-keyword">super</span>.onInputEvent(event, policyFlags);        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">int</span> eventSource = event.getSource();    <span class="hljs-keyword">if</span> ((policyFlags &amp; WindowManagerPolicy.FLAG_PASS_TO_USER) == <span class="hljs-number">0</span>) &#123;        state.reset();        mEventHandler.clearEvents(eventSource);        <span class="hljs-keyword">super</span>.onInputEvent(event, policyFlags);        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">if</span> (state.updateDeviceId(event.getDeviceId())) &#123;        mEventHandler.clearEvents(eventSource);    &#125;    <span class="hljs-keyword">if</span> (!state.deviceIdValid()) &#123;        <span class="hljs-keyword">super</span>.onInputEvent(event, policyFlags);        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">if</span> (event <span class="hljs-keyword">instanceof</span> MotionEvent) &#123;        <span class="hljs-keyword">if</span> ((mEnabledFeatures &amp; FEATURES_AFFECTING_MOTION_EVENTS) != <span class="hljs-number">0</span>) &#123;            MotionEvent motionEvent = (MotionEvent) event;            processMotionEvent(state, motionEvent, policyFlags);            <span class="hljs-keyword">return</span>;        &#125; <span class="hljs-keyword">else</span> &#123;            <span class="hljs-keyword">super</span>.onInputEvent(event, policyFlags);        &#125;    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (event <span class="hljs-keyword">instanceof</span> KeyEvent) &#123;        KeyEvent keyEvent = (KeyEvent) event;        processKeyEvent(state, keyEvent, policyFlags);    &#125;&#125;</code></pre></div><p>继续看 processMotionEvent</p><div class="hljs"><pre><code class="hljs pf">private void processMotionEvent(EventStreamState <span class="hljs-keyword">state</span>, MotionEvent event, int policyFlags) &#123;    if (!<span class="hljs-keyword">state</span>.shouldProcessScroll() &amp;&amp; event.getActionMasked() == MotionEvent.ACTION_SCROLL) &#123;        super.<span class="hljs-keyword">on</span>InputEvent(event, policyFlags);        return;    &#125;    if (!<span class="hljs-keyword">state</span>.shouldProcessMotionEvent(event)) &#123;        return;    &#125;    batchMotionEvent(event, policyFlags);&#125;</code></pre></div><p>继续看 batchMotionEvent</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">batchMotionEvent</span><span class="hljs-params">(MotionEvent event, <span class="hljs-keyword">int</span> policyFlags)</span> </span>&#123;    <span class="hljs-keyword">if</span> (DEBUG) &#123;        Slog.i(TAG, <span class="hljs-string">"Batching event: "</span> + event + <span class="hljs-string">", policyFlags: "</span> + policyFlags);    &#125;    <span class="hljs-keyword">if</span> (mEventQueue == <span class="hljs-keyword">null</span>) &#123;        mEventQueue = MotionEventHolder.obtain(event, policyFlags);        scheduleProcessBatchedEvents();        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">if</span> (mEventQueue.event.addBatch(event)) &#123;        <span class="hljs-keyword">return</span>;    &#125;    MotionEventHolder holder = MotionEventHolder.obtain(event, policyFlags);    holder.next = mEventQueue;    mEventQueue.previous = holder;    mEventQueue = holder;&#125;</code></pre></div><p>继续看 scheduleProcessBatchedEvents</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">scheduleProcessBatchedEvents</span><span class="hljs-params">()</span> </span>&#123;    mChoreographer.postCallback(Choreographer.CALLBACK_INPUT,            mProcessBatchedEventsRunnable, <span class="hljs-keyword">null</span>);&#125;</code></pre></div><p>会在下一个 Vsync 周期的时候执行 mProcessBatchedEventsRunnable , 也就是 Choreographer.CALLBACK_INPUT ， 熟悉 Choregrapher 的同学应该知道这里在做什么。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Runnable mProcessBatchedEventsRunnable = <span class="hljs-keyword">new</span> Runnable() &#123;    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;        <span class="hljs-keyword">final</span> <span class="hljs-keyword">long</span> frameTimeNanos = mChoreographer.getFrameTimeNanos();        &#125;        processBatchedEvents(frameTimeNanos);        <span class="hljs-keyword">if</span> (mEventQueue != <span class="hljs-keyword">null</span>) &#123;            scheduleProcessBatchedEvents();        &#125;    &#125;&#125;;</code></pre></div><p>那么代码在这里就比较清晰了， 是因为存在 AccessibilityInputFilter 导致 InputDIspatcher 线程没有被唤醒，而是把事件处理放到了下一个 Vsync 里面去处理。<br>结论</p><p>问题就在这个 Runnable 里面, 正常情况下, 如果没有打开 AccessibilityInputFilter , 那么上层不会对 Input 事件做任何的拦截, 一旦有 AccessibilityInputFilter , 那么就会走上面的逻辑, 这时候 InputDispatcher 不会跟着 InputReader 的节奏来走 , 而是跟着 Vsync 的节奏来走, 从 Trace 上也可看到这点;</p><p><a href="https://www.androidperformance.com/images/media/performancecase/15482437370372.jpg" target="_blank" rel="noopener"><img src="https://www.androidperformance.com/images/media/performancecase/15482437370372.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></a></p><p>那么这个 AccessibilityInputFilter 是从哪里来的呢？答案就是 Accessibility 服务，也就是常说的无障碍服务。</p><h1 id="罪魁祸首"><a href="#罪魁祸首" class="headerlink" title="罪魁祸首"></a>罪魁祸首</h1><p>经过上面的分析我们知道问题的原因是无障碍服务 ，无障碍服务的本质是为了服务哪些盲人之类的不方便操作的用户，但是某些 App 为了实现特定的功能，也加入了自己的 Accessibility 服务， 比如各大手机市场的“一键安装”功能，用户是方便了，但是用不好，也会有负面的作用，比如这一例，导致用户手机整机卡顿，不知道的用户，我估计都要退机了。</p><p>那么罪魁祸首是谁呢？目前发现有两个，一个讯飞输入法，一个是应用宝。打开 设置-系统-无障碍服务，可以看到里面的各种软件都有参与到，不过这个默认是关闭的，很多应用会引导用户去开启，许多用户不明所以，就稀里糊涂打开了。</p><p>无障碍服务页面如下：<br><a href="https://www.androidperformance.com/images/media/performancecase/15482437928005.jpg" target="_blank" rel="noopener"><img src="https://www.androidperformance.com/images/media/performancecase/15482437928005.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></a></p><p>关于无障碍服务有多NB，大家可以自己看看下面的弹框，这东西可以检测你的信用卡号和密码，至于短信内容、微信聊天内容那都是小 Case。</p><p><a href="https://www.androidperformance.com/images/media/performancecase/15482438028084.jpg" target="_blank" rel="noopener"><img src="https://www.androidperformance.com/images/media/performancecase/15482438028084.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></a></p><p>至于在这个例子里面引起整机卡顿的，就是下面这个 监听 ”执行手势“ 这个，一旦有应用监听这个的话， InputDIspatcher 线程就会走 Vsync 的周期，导致报点处理不及时，从而让滑动的对象以为这一帧没有事件进入，所以也没有内容的变更，就不会进行页面的更新，从而导致卡顿。<br><a href="https://www.androidperformance.com/images/media/performancecase/15482438143185.jpg" target="_blank" rel="noopener"><img src="https://www.androidperformance.com/images/media/performancecase/15482438143185.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="img"></a></p><h1 id="自检"><a href="#自检" class="headerlink" title="自检"></a>自检</h1><p>如果你使用的是 Android 手机，强烈建议你关掉所有的无障碍服务（如果你不需要的话），像自动安装应用这种功能，不值得你为此付出这么大的风险。这个是 Android 原生的问题，我们在 Pixle 和 其他三方手机上都有发现这个问题。</p><ol><li>关闭路径：设置-系统-无障碍服务 ， 进去后把你已经打开的都关上。</li><li>强烈建议 <strong>应用宝、讯飞输入法</strong> ，不要监听手势事件。</li></ol><h1 id="本文知乎地址"><a href="#本文知乎地址" class="headerlink" title="本文知乎地址"></a>本文知乎地址</h1><p>由于博客留言交流不方便，点赞或者交流，可以移步本文的知乎界面<br><a href="https://zhuanlan.zhihu.com/p/55585722" target="_blank" rel="noopener">知乎 - Android 平台应用宝和讯飞输入法无障碍服务导致的全局卡顿分析</a></p><h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p>小厂系统研发工程师 , 更多信息可以点击 <a href="https://www.androidperformance.com/about/" target="_blank" rel="noopener">关于我</a> , 非常希望和大家一起交流 , 共同进步 .</p><blockquote><p><strong>一个人可以走的更快 , 一群人可以走的更远</strong></p></blockquote><p>原文作者：<a href="https://androidperformance.com/" target="_blank" rel="noopener">Gracker</a></p><p>原文链接：<a href="https://androidperformance.com/2019/01/21/android-performance-case-jank-accessbility/" target="_blank" rel="noopener">https://androidperformance.com/2019/01/21/android-performance-case-jank-accessbility/</a></p><p>发表日期：<a href="https://androidperformance.com/2019/01/21/android-performance-case-jank-accessbility/" target="_blank" rel="noopener">一月 21日 2019, 12:22:22 凌晨</a></p><p>更新日期：<a href="https://androidperformance.com/2019/01/21/android-performance-case-jank-accessbility/" target="_blank" rel="noopener">November 4th 2019, 10:42:51 pm</a></p><p>版权声明：本文采用<a href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可</p>]]></content>
    
    
    
    <tags>
      
      <tag>转载</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 新增友链页面</title>
    <link href="/2020/02/13/Hexo%20%E6%96%B0%E5%A2%9E%E5%8F%8B%E9%93%BE%E9%A1%B5%E9%9D%A2/"/>
    <url>/2020/02/13/Hexo%20%E6%96%B0%E5%A2%9E%E5%8F%8B%E9%93%BE%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">N</span><p>exT 本身的友链放在侧栏，不能显示头像简介，只有链接，而且友链多了之后就显得非常乱，于是乎，我没可以新建一个页面来存放友链</p><a id="more"></a><h3 id="新建友链界面"><a href="#新建友链界面" class="headerlink" title="新建友链界面"></a>新建友链界面</h3><div class="hljs"><pre><code class="hljs bash">hexo new page links</code></pre></div><p>这样会在 <code>/source/</code> 下创建 <code>links/index.md</code>。在文档的 <code>front matter</code> 添加 <code>type: links</code>，编辑好自己需要的友链页面内容。<br>例如：</p><div class="hljs"><pre><code class="hljs markdown">---title: Friends Linkstype: links---------  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fa fa-heart"</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span><span class="hljs-code">    &lt;span&gt;留言添加友链&lt;/span&gt;</span>  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fa fa-heart"</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span>------<span class="hljs-section">## 友链格式</span><span class="hljs-bullet">- </span>网站名称：Royce<span class="hljs-bullet">- </span>网站地址：https://royce2003.top<span class="hljs-bullet">- </span>网站描述：OI小白<span class="hljs-bullet">- </span>网站Logo/头像：https://royce2003.top/img/avatar.jpg</code></pre></div><h3 id="新建友链渲染文件"><a href="#新建友链渲染文件" class="headerlink" title="新建友链渲染文件"></a>新建友链渲染文件</h3><p>在 <code>/themes/next/layout/_scripts/pages/</code> 目录下建一个 <code>link.swig</code> 文件，写入以下代码</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-string">&#123;%</span> <span class="hljs-string">block</span> <span class="hljs-string">content</span> <span class="hljs-string">%&#125;</span>    <span class="hljs-string">&lt;div</span> <span class="hljs-string">id="links"&gt;</span>        <span class="hljs-string">&lt;style&gt;</span>            <span class="hljs-string">.container</span> <span class="hljs-string">.main-inner</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">width:</span> <span class="hljs-string">1100px;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.links-content&#123;</span>                <span class="hljs-string">margin-top:1rem;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.link-navigation::after</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">content:</span> <span class="hljs-string">" "</span><span class="hljs-string">;</span>                <span class="hljs-attr">display:</span> <span class="hljs-string">block;</span>                <span class="hljs-attr">clear:</span> <span class="hljs-string">both;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">width:</span> <span class="hljs-number">45</span><span class="hljs-string">%;</span>                <span class="hljs-attr">font-size:</span> <span class="hljs-string">1rem;</span>                <span class="hljs-attr">padding:</span> <span class="hljs-string">10px</span> <span class="hljs-string">20px;</span>                <span class="hljs-attr">border-radius:</span> <span class="hljs-string">4px;</span>                <span class="hljs-attr">transition-duration:</span> <span class="hljs-number">0.</span><span class="hljs-string">15s;</span>                <span class="hljs-attr">margin-bottom:</span> <span class="hljs-string">1rem;</span>                <span class="hljs-string">display:flex;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">@media(max-width:</span> <span class="hljs-string">1400px)&#123;</span>                <span class="hljs-string">.card&#123;</span>                    <span class="hljs-attr">width:</span> <span class="hljs-number">40</span><span class="hljs-string">%</span> <span class="hljs-type">!important</span><span class="hljs-string">;</span>                <span class="hljs-string">&#125;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card:nth-child(odd)</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">float:</span> <span class="hljs-string">left;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card:nth-child(even)</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">float:</span> <span class="hljs-string">right;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card:hover</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">transform:</span> <span class="hljs-string">scale(1.1);</span>                <span class="hljs-attr">box-shadow:</span> <span class="hljs-number">0</span> <span class="hljs-string">2px</span> <span class="hljs-string">6px</span> <span class="hljs-number">0</span> <span class="hljs-string">rgba(0,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0.12</span><span class="hljs-string">),</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-string">6px</span> <span class="hljs-number">0</span> <span class="hljs-string">rgba(0,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0.04</span><span class="hljs-string">);</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card</span> <span class="hljs-string">a</span> <span class="hljs-string">&#123;</span>                <span class="hljs-string">border:none;</span>             <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card</span> <span class="hljs-string">.ava</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">width:</span> <span class="hljs-string">3rem!important;</span>                <span class="hljs-attr">height:</span> <span class="hljs-string">3rem!important;</span>                <span class="hljs-string">margin:0!important;</span>                <span class="hljs-attr">margin-right:</span> <span class="hljs-string">1em!important;</span>                <span class="hljs-string">border-radius:4px;</span>                            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card</span> <span class="hljs-string">.card-header</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">font-style:</span> <span class="hljs-string">italic;</span>                <span class="hljs-attr">overflow:</span> <span class="hljs-string">hidden;</span>                <span class="hljs-attr">width:</span> <span class="hljs-number">100</span><span class="hljs-string">%;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card</span> <span class="hljs-string">.card-header</span> <span class="hljs-string">a</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">font-style:</span> <span class="hljs-string">normal;</span>                <span class="hljs-attr">color:</span> <span class="hljs-comment">#2bbc8a;</span>                <span class="hljs-attr">font-weight:</span> <span class="hljs-string">bold;</span>                <span class="hljs-attr">text-decoration:</span> <span class="hljs-string">none;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card</span> <span class="hljs-string">.card-header</span> <span class="hljs-string">a:hover</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">color:</span> <span class="hljs-comment">#d480aa;</span>                <span class="hljs-attr">text-decoration:</span> <span class="hljs-string">none;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.card</span> <span class="hljs-string">.card-header</span> <span class="hljs-string">.info</span> <span class="hljs-string">&#123;</span>                <span class="hljs-string">font-style:normal;</span>                <span class="hljs-string">color:#a3a3a3;</span>                <span class="hljs-string">font-size:14px;</span>                <span class="hljs-attr">min-width:</span> <span class="hljs-number">0</span><span class="hljs-string">;</span>                <span class="hljs-attr">overflow:</span> <span class="hljs-string">hidden;</span>                <span class="hljs-attr">white-space:</span> <span class="hljs-string">nowrap;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">span.focus-links</span> <span class="hljs-string">&#123;</span>                <span class="hljs-attr">font-style:</span> <span class="hljs-string">normal;</span>                <span class="hljs-attr">margin-left:</span> <span class="hljs-string">10px;</span>                <span class="hljs-attr">position:</span> <span class="hljs-string">unset;</span>                <span class="hljs-attr">left:</span> <span class="hljs-number">0</span><span class="hljs-string">;</span>                <span class="hljs-attr">padding:</span> <span class="hljs-number">0</span> <span class="hljs-string">7px</span> <span class="hljs-number">0</span> <span class="hljs-string">5px;</span>                <span class="hljs-attr">font-size:</span> <span class="hljs-string">11px;</span>                <span class="hljs-attr">border-color:</span> <span class="hljs-comment">#42c02e;</span>                <span class="hljs-attr">border-radius:</span> <span class="hljs-string">40px;</span>                <span class="hljs-attr">line-height:</span> <span class="hljs-string">24px;</span>                <span class="hljs-attr">height:</span> <span class="hljs-string">22px;</span>                <span class="hljs-attr">color:</span> <span class="hljs-comment">#fff !important;</span>                <span class="hljs-attr">background-color:</span> <span class="hljs-comment">#42c02e;</span>                <span class="hljs-attr">display:</span> <span class="hljs-string">inline-block;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">span.focus-links:hover&#123;</span>                <span class="hljs-attr">background-color:</span> <span class="hljs-comment">#318024;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.friends-btn&#123;</span>                <span class="hljs-attr">text-align:</span> <span class="hljs-string">center;</span>                <span class="hljs-attr">color:</span> <span class="hljs-comment">#555!important;</span>                <span class="hljs-attr">background-color:</span> <span class="hljs-comment">#fff;</span>                <span class="hljs-attr">border-radius:</span> <span class="hljs-string">3px;</span>                <span class="hljs-attr">font-size:</span> <span class="hljs-string">15px;</span>                <span class="hljs-attr">box-shadow:</span> <span class="hljs-string">inset</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-string">10px</span> <span class="hljs-number">0</span> <span class="hljs-string">rgba(0,0,0,.35);</span>                <span class="hljs-attr">border:</span> <span class="hljs-string">none!important;</span>                <span class="hljs-attr">transition-property:</span> <span class="hljs-string">unset;</span>                <span class="hljs-attr">padding:</span> <span class="hljs-number">0</span> <span class="hljs-string">15px;</span>                <span class="hljs-attr">margin:</span> <span class="hljs-string">inherit;</span>            <span class="hljs-string">&#125;</span>            <span class="hljs-string">.friends-btn:hover&#123;</span>                <span class="hljs-attr">color:</span> <span class="hljs-string">rgb(255,</span> <span class="hljs-number">255</span><span class="hljs-string">,</span> <span class="hljs-number">255</span><span class="hljs-string">)</span> <span class="hljs-type">!important</span><span class="hljs-string">;</span>                <span class="hljs-attr">border-radius:</span> <span class="hljs-string">3px;</span>                <span class="hljs-attr">font-size:</span> <span class="hljs-string">15px;</span>                <span class="hljs-attr">box-shadow:</span> <span class="hljs-string">inset</span> <span class="hljs-string">0px</span> <span class="hljs-string">0px</span> <span class="hljs-string">10px</span> <span class="hljs-string">0px</span> <span class="hljs-string">rgba(0,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-number">0.35</span><span class="hljs-string">);</span>                <span class="hljs-attr">background-image:</span> <span class="hljs-string">linear-gradient(90deg,</span> <span class="hljs-comment">#a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);</span>                <span class="hljs-attr">margin:</span> <span class="hljs-string">inherit;</span>            <span class="hljs-string">&#125;</span>        <span class="hljs-string">&lt;/style&gt;</span>        <span class="hljs-string">&lt;div</span> <span class="hljs-string">class="links-content"&gt;</span>            <span class="hljs-string">&lt;div</span> <span class="hljs-string">class="link-navigation"&gt;</span>                <span class="hljs-string">&#123;%</span> <span class="hljs-string">for</span> <span class="hljs-string">link</span> <span class="hljs-string">in</span> <span class="hljs-string">theme.mylinks</span> <span class="hljs-string">%&#125;</span>                    <span class="hljs-string">&lt;div</span> <span class="hljs-string">class="card"&gt;</span>                        <span class="hljs-string">&lt;img</span> <span class="hljs-string">class="ava"</span> <span class="hljs-string">src="&#123;&#123;</span> <span class="hljs-string">link.avatar</span> <span class="hljs-string">&#125;&#125;"/&gt;</span>                        <span class="hljs-string">&lt;div</span> <span class="hljs-string">class="card-header"&gt;</span>                        <span class="hljs-string">&lt;div&gt;&lt;a</span> <span class="hljs-string">href="&#123;&#123;</span> <span class="hljs-string">link.site</span> <span class="hljs-string">&#125;&#125;"</span> <span class="hljs-string">target="_blank"&gt;</span> <span class="hljs-string">&#123;&#123;</span> <span class="hljs-string">link.nickname</span> <span class="hljs-string">&#125;&#125;&lt;/a&gt;</span> <span class="hljs-string">&lt;a</span> <span class="hljs-string">href="&#123;&#123;</span> <span class="hljs-string">link.site</span> <span class="hljs-string">&#125;&#125;"&gt;&lt;span</span> <span class="hljs-string">class="focus-links"&gt;关注&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;</span>                        <span class="hljs-string">&lt;div</span> <span class="hljs-string">class="info"&gt;&#123;&#123;</span> <span class="hljs-string">link.info</span> <span class="hljs-string">&#125;&#125;&lt;/div&gt;</span>                        <span class="hljs-string">&lt;/div&gt;</span>                    <span class="hljs-string">&lt;/div&gt;</span>                <span class="hljs-string">&#123;%</span> <span class="hljs-string">endfor</span> <span class="hljs-string">%&#125;</span>            <span class="hljs-string">&lt;/div&gt;</span>            <span class="hljs-string">&#123;&#123;</span> <span class="hljs-string">page.content</span> <span class="hljs-string">&#125;&#125;</span>            <span class="hljs-string">&lt;/div&gt;</span>        <span class="hljs-string">&lt;/div&gt;</span><span class="hljs-string">&#123;%</span> <span class="hljs-string">endblock</span> <span class="hljs-string">%&#125;</span></code></pre></div><h3 id="修改渲染文件"><a href="#修改渲染文件" class="headerlink" title="修改渲染文件"></a>修改渲染文件</h3><p>然后修改 <code>/themems/next/layout/page.swig</code> 文件，</p><div class="hljs"><pre><code class="hljs diff">&#123;% block title %&#125;    &#123;%- set page_title_suffix = ' | ' + title %&#125;    &#123;%- if page.type <span class="hljs-comment">=== 'categories' and not page.title %&#125;</span>      &#123;&#123;- __('title.category') + page_title_suffix &#125;&#125;    &#123;%- elif page.type <span class="hljs-comment">=== 'tags' and not page.title %&#125;</span>      &#123;&#123;- __('title.tag') + page_title_suffix &#125;&#125;      <span class="hljs-addition">+   &lt;!-- 友情链接--&gt;</span><span class="hljs-addition">+   &#123;% elif page.type === 'links' and not page.title %&#125;</span><span class="hljs-addition">+   &#123;&#123; __('title.links') + page_title_suffix &#125;&#125;</span>        &#123;%- elif page.type <span class="hljs-comment">=== 'schedule' and not page.title %&#125;</span>      &#123;&#123;- __('title.schedule') + page_title_suffix &#125;&#125;    &#123;%- else %&#125;      &#123;&#123;- page.title + page_title_suffix &#125;&#125;    &#123;%- endif %&#125;&#123;% endblock %&#125;</code></pre></div><p>然后还是在这个 <code>page.swig</code> 文件中，引入刚才新建的 <code>swig</code> 页面：</p><div class="hljs"><pre><code class="hljs diff">&#123;% elif page.type <span class="hljs-comment">=== 'categories' %&#125;</span>          &lt;div class="category-all-page"&gt;            &lt;div class="category-all-title"&gt;              &#123;&#123; _p('counter.categories', site.categories.length) &#125;&#125;            &lt;/div&gt;            &lt;div class="category-all"&gt;              &#123;&#123; list_categories() &#125;&#125;            &lt;/div&gt;          &lt;/div&gt;<span class="hljs-addition">+           &lt;!-- 友情链接--&gt;</span><span class="hljs-addition">+          &#123;% elif page.type === 'links' %&#125;</span><span class="hljs-addition">+              &#123;% include '_scripts/pages/links.swig' %&#125;</span>        &#123;% elif page.type <span class="hljs-comment">=== 'schedule' %&#125;</span>          &lt;div class="event-list"&gt;          &lt;/div&gt;          &#123;% include '_scripts/pages/schedule.swig' %&#125;        &#123;% else %&#125;          &#123;&#123; page.content &#125;&#125;        &#123;%- endif %&#125;      &lt;/div&gt;</code></pre></div><h3 id="配置-config文件"><a href="#配置-config文件" class="headerlink" title="配置_config文件"></a>配置<code>_config</code>文件</h3><h4 id="增加友链"><a href="#增加友链" class="headerlink" title="增加友链"></a>增加友链</h4><p>最后，添加友链的话，需要在<code>主题配置文件</code>文件末尾添加：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">defaultlinks:</span> <span class="hljs-comment"># 跟着身边的大佬走，努力成为小大佬</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">nickname:</span> <span class="hljs-string">Neworld2002</span>     <span class="hljs-comment"># 昵称</span>    <span class="hljs-attr">site:</span> <span class="hljs-string">https://neworld2002.github.io/</span> <span class="hljs-comment"># 友链地址</span>    <span class="hljs-attr">info:</span> <span class="hljs-string">OI大佬</span>  <span class="hljs-comment"># 描述</span>    <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://i.loli.net/2019/03/17/5c8dff0100f07.jpg</span>    <span class="hljs-comment"># 头像地址</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">nickname:</span> <span class="hljs-string">newsheep</span>    <span class="hljs-attr">site:</span> <span class="hljs-string">http://newsheep2003.github.io/</span>    <span class="hljs-attr">info:</span> <span class="hljs-string">社长大大</span>    <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://newsheep2003.github.io/images/apple-touch-icon.png?v=5.1.3</span><span class="hljs-attr">friendslinks:</span> <span class="hljs-comment"># 五湖四海的朋友们</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">nickname:</span> <span class="hljs-string">维他入我心</span>    <span class="hljs-attr">site:</span> <span class="hljs-string">https://wtrwx.top</span>    <span class="hljs-attr">info:</span> <span class="hljs-string">科技/生活日常～</span>    <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://wtrwx.top/img/avatar.png</span></code></pre></div><p><code>defaultlinks</code>: 对应的是 link.swig 文件中 👨‍🎓 跟着身边的大佬走，努力成为小大佬<br><code>friendslinks</code>:呼应的是 link.swig 文件中 🍭 五湖四海的朋友们<br>此处内容可以根据自己需要自行修改</p><h4 id="开启显示"><a href="#开启显示" class="headerlink" title="开启显示"></a>开启显示</h4><p>同时我们还需要在主题配置文件中开启 Links</p><div class="hljs"><pre><code class="hljs diff">menu:  home: / || home  # top: /top/ || signal  tags: /tags/ || tags  # categories: /categories/ || th  archives: /archives/ || archive<span class="hljs-deletion">- # links: /links/ || link</span><span class="hljs-addition">+ links: /links/ || link</span>  # schedule: /schedule/ || calendar  sitemap: /sitemap.xml || sitemap  commonweal: /404/ || heartbeat  about: /about/ || user</code></pre></div><p>然后就可以使用了！</p><hr><p><a href="https://bestzuo.cn/posts/2016690040.html" target="_blank" rel="noopener">参考文章</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>NexT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+GitHub 静态博客搭建教程</title>
    <link href="/2020/02/12/Hexo+GitHub%20%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <url>/2020/02/12/Hexo+GitHub%20%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2020/02/12/kPWqXHzFxO7Tgvh.jpg" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><span class="drop-cap">2</span><p>019 年 11 月 CSP Day1 当晚，发现身边大佬都在写游记，我也因此心血来潮，咕咕咕，几天之后我才开始写。同时又碰巧学长退役，看见了巨佬的博客，我的天哪，这完善程度，这流畅度，这内容的深度 emmm 不愧是巨佬，厚着脸皮求教程，要来一个链接，在教程的帮助下，折腾了好久终于有了自己的博客。现在距离建站已经过去了差不多 3,4 个月，博客越来越完善了 <del>(就差内容了)</del><a id="more"></a></p><p>故写下此教程，记录搭建过程和自己踩过的坑</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>是一款基于 Node.js 的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 或 Coding 上，是搭建博客的首选框架。这里我们选用的是 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>，你没看错，<del>全球最大的同性恋交友网站</del>。Hexo 同时也是 GitHub 上的开源项目，参见： <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">hexojs/hexo</a> 如果想要更加全面的了解 Hexo，可以到其官网 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 了解更多的细节，因为 Hexo 的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><p>前面说过 Hexo 是一个静态博客框架，基于 Node.js，它将 Markdown 文章通过渲染引擎，在几秒内，即可利用靓丽的主题生成静态网页，再结合 Git 命令进行部署。这使其成为一个快速、简洁且高效的博客框架。</p><p> <del>(前面都在扯淡)</del></p><p>这是我的个人博客效果: <a href="https://royce2003.github.io" target="_blank" rel="noopener">Royce</a></p><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><h2 id="在Github创建仓库"><a href="#在Github创建仓库" class="headerlink" title="在Github创建仓库"></a>在Github创建仓库</h2><p>登录 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>，如果没有 GitHub 帐号，使用你的邮箱注册注册</p><p>点击 GitHub 中的右上角的 + 创建新仓库（new repository），仓库名应该为：yourname.github.io 这里的 yourname 使用你的 GitHub 帐号名称代替，这是固定写法 <strong>（文章接下来出现的yourname皆为你的GitHub账号名）</strong><br><img src="https://i.loli.net/2020/02/12/d9Ua8O1yk2AfelX.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="Snipaste_2020-02-12_13-31-25.png"></p><h2 id="安装所需软件并连接-GitHub"><a href="#安装所需软件并连接-GitHub" class="headerlink" title="安装所需软件并连接 GitHub"></a>安装所需软件并连接 GitHub</h2><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><p><img src="https://www.runoob.com/wp-content/uploads/2015/02/f7246b600c338744a9591cd7530fd9f9d62aa0f8.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="Git"></p><p>Git 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><p>在 <a href="https://git-scm.com/" target="_blank" rel="noopener">官网</a>下载安装，安装时一路继续就好了。</p><p>安装完成后在命令行内输入 <code>git</code> 查看是否成功<br>若提示 <code>‘git’是内部或外部命令，也不是可运行的程序或批处理文件。</code> 就说明失败了。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Hexo 基于 Node.js，Node 官网地址：<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Download</a> 在官网下载安装包，注意安装 Node.js 会包含环境变量及 npm 的安装<br>安装后检测 Node.js 和 npm 是否安装成功，在命令行中输入 <code>node -v</code> 和 <code>npm -v</code>:<br>（显示版本号即安装成功）<br><img src="https://i.loli.net/2020/02/12/DPsrECaUHhL6elb.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="Snipaste_02-12_14-19-06.png"></p><h2 id="连接GitHub"><a href="#连接GitHub" class="headerlink" title="连接GitHub"></a>连接GitHub</h2><p>成功安装后在桌面右键点击 <code>Git Bash Here</code><br><img src="https://i.loli.net/2020/02/12/E5D8AtoN7FYVTkm.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="Snipaste_2020-02-12_14-09-11.png"></p><p>设置user.name和user.email配置信息，<br>在弹出界面中输入以下内容</p><div class="hljs"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">"你的GitHub用户名"</span>git config --global user.email <span class="hljs-string">"你的GitHub注册邮箱"</span></code></pre></div><p>然后创建 <code>SSH</code></p><div class="hljs"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">"你的GitHub注册邮箱"</span></code></pre></div><p>然后直接三个回车即可，即不设置密码</p><p>然后在 <code>C:\Users\Username\.ssh</code> 路径下找到名为 <code>id_rsa.pub</code> 的文件，就是你刚刚创建的密钥，右键用记事本打开然后复制全部内容</p><p>然后进入 GitHub 添加密钥<br><img src="https://i.loli.net/2020/02/12/vF19hOiTDaEGdWL.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="Snipaste_2020-02-12_14-30-04.png"><br>将复制的内容粘贴至 Key 中，title 随便填然后点击 <code>Add SSH key</code><br><img src="https://i.loli.net/2020/02/12/lFQmqtGL51CzrT6.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="Snipaste_02-12_14-31-56.png"><br>在 Git Bash 中检测 GitHub 公钥设置是否成功</p><div class="hljs"><pre><code class="hljs bash">ssh -T git@github.com</code></pre></div><p>当出现 <code>Hi,yourname! You&#39;ve successfully......</code> 则已经成功<br>这里之所以设置 GitHub 密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在 GitHub 上，私钥放置在自己的电脑里。GitHub 要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了 <strong>省去每次输入密码的步骤</strong> ，采用了 ssh，当你推送的时候，git 就会匹配你的私钥跟 GitHub 上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>Hexo 就是我们的个人博客网站的框架，我们需要在电脑里创建一个文件夹（称之为博客根目录），用来存放 Hexo 的相关文件以及博客文章，文件夹名字随意（建议不要出现中文），我文件夹名字为 <code>Hexo-Blog</code>。创建好后，<strong>进入文件夹中</strong>，右键进入 <code>Git Bash Here</code></p><p>（注意，之后有关操作都需要在博客根目录进入 <code>Git Bash Here</code>）</p><p>输入以下内容</p><div class="hljs"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span></code></pre></div><h2 id="初始化博客："><a href="#初始化博客：" class="headerlink" title="初始化博客："></a>初始化博客：</h2><div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo init</span></code></pre></div><p>文件夹中大致如下</p><div class="hljs"><pre><code class="hljs 1c">Hexo-Bolg<span class="hljs-string">|----node_modules</span><span class="hljs-string">|----public</span><span class="hljs-string">|----scaffolds</span><span class="hljs-string">|---- source</span>    <span class="hljs-string">|---- _post</span><span class="hljs-string">|---- themes</span><span class="hljs-string">|---- _config.yaml</span></code></pre></div><ol><li><code>node_modules</code> 是 <code>node.js</code> 各种库的目录，</li><li><code>public</code> 是生成的网页文件目录（一开始可能没有）</li><li><code>scaffolds</code> 里面就三个文件，存储着新文章和新页面的初始设置</li><li><code>source</code> 是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件</li><li><code>themes</code> 存放着主题文件</li><li><code>_config.yaml</code> 站点配置文件</li></ol><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><p>按顺序输入以下命令：</p><div class="hljs"><pre><code class="hljs verilog">hexo <span class="hljs-keyword">generate</span>hexo server</code></pre></div><p>Hexo命令后面会作介绍，完成后，会看到</p><div class="hljs"><pre><code class="hljs pgsql"><span class="hljs-keyword">INFO</span>  <span class="hljs-keyword">Start</span> processing<span class="hljs-keyword">INFO</span>  Hexo <span class="hljs-keyword">is</span> running at http://localhost:<span class="hljs-number">4000</span> . Press Ctrl+C <span class="hljs-keyword">to</span> stop.</code></pre></div><p>Hexo 正在 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 运行，按 Ctrl+C 可停止</p><p>可以按住 Ctrl 用鼠标直接点链接，也可以在浏览器输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 就可以看到你生成的博客了<br><img src="https://i.loli.net/2020/02/12/rZVgGTtFyXUEs43.png" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt="Snipaste_02-12_15-27-32.png"><br>但是目前只能本地预览，所以还需部署到 GitHub</p><h2 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h2><p>我们需要将 hexo 和 GitHub 关联起来，也就是将 hexo 生成的文章部署到 GitHub 上，打开站点配置文件 _config.yml（博客根目录中），划到最后,将 deploy 中的内容修改成下面的样子（yourname改成你GitHub的用户名）</p><div class="hljs"><pre><code class="hljs less"><span class="hljs-attribute">deploy</span>:  <span class="hljs-attribute">type</span>: git  <span class="hljs-attribute">repo</span>: git<span class="hljs-variable">@github</span>.<span class="hljs-attribute">com</span>:Royce2019/Royce2019.github.io.git  <span class="hljs-attribute">branch</span>: master</code></pre></div><p>然后我们还需要安装部署所需插件 <code>deploy-git</code></p><div class="hljs"><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> hexo-deployer-git <span class="hljs-comment">--save</span></code></pre></div><p>然后按顺序输入以下命令</p><div class="hljs"><pre><code class="hljs verilog">hexo cleanhexo <span class="hljs-keyword">generate</span>hexo deploy</code></pre></div><p>全部完成后访问，恭喜，你的博客已经搭建完成，当然，只是一个雏形</p><p>博客地址： <a href="http://yourname.github.io" target="_blank" rel="noopener">http://yourname.github.io</a></p><h2 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h2><p>下面会介绍常用的Hexo命令（若有<code>==&gt;</code>则右边为简写）</p><ol><li>npm install hexo -g # 安装 Hexo</li><li>npm update hexo -g  # 升级</li><li>hexo init # 初始化博客</li><li>hexo new “mypost” ==&gt; hexo n “mypost”   # 新建文章（在 <code>/source/_posts</code> 文件夹中创建 <code>mypost.md</code> 文件）</li><li>hexo generate ==&gt; hexo g # 生成页面(页面在 public 文件夹中)</li><li>hexo server ==&gt; hexo s # 本地预览</li><li>hexo deploy ==&gt; hexo d # 部署</li><li>hexo clean # 清除缓存</li><li>hexo server # Hexo 会监视文件变动并自动更新，无须重启服务器</li><li>hexo server -s # 静态模式</li><li>hexo server -p 5000 # 更改端口</li><li>hexo server -i 192.168.1.1 # 自定义 IP</li></ol><p>配置修改后需 <code>hexo g</code> 重新生成界面，<code>hexo s</code> 本地预览过程中若对某些配置文件（好像主题配置文件可以）修改，可直接刷新本地预览页面，按 Ctrl+C 可停止本地预览</p><p>命令之间可用 <code>&amp;&amp;</code> 相连接<br>如 <code>hexo g &amp;&amp; hexo s</code> 和 <code>hexo g &amp;&amp; hexo d</code> 等等<br>当然 对于上面两种常用的命令，hexo提供了简写 <code>hexo s -g</code>（生成界面并本地预览） 和 <code>hexo g -d</code>（生成界面并部署）</p><p>对博客修改之后只有进行了部署才会发布到网上</p><h2 id="完善配置文件-config-yaml"><a href="#完善配置文件-config-yaml" class="headerlink" title="完善配置文件 _config.yaml"></a>完善配置文件 <code>_config.yaml</code></h2><p>只提供主要配置的中文<br>按 <code>Ctrl+F</code> 可进行搜索<br>(#后为注释)</p><p>首先修改网站基本信息</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-comment"># Site</span><span class="hljs-attr">title:</span>          <span class="hljs-comment"># 网站标题</span><span class="hljs-attr">subtitle:</span> <span class="hljs-string">''</span><span class="hljs-attr">description:</span>    <span class="hljs-comment"># 网站描述</span><span class="hljs-attr">keywords:</span>       <span class="hljs-comment"># 网站关键词</span><span class="hljs-attr">author:</span>         <span class="hljs-comment"># 博客作者名字</span><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span> <span class="hljs-comment"># 语言</span><span class="hljs-attr">timezone:</span> <span class="hljs-string">''</span></code></pre></div><p>将链接改为你博客域名（yourname.github.io）</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">url:</span> <span class="hljs-string">http://yoursite.com</span></code></pre></div><p>你博客文章的地址，默认为 yourname.github.io/year/mouth/day/title<br>，可自行修改<br>例如你的一篇文章叫 post，如果按照默认设置则文章地址是 xxxxxxx/2020/02/10/post<br>如果是我图片上的设置则地址是 xxxxxxx/2020/post</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span></code></pre></div><p>每页的文章数量</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">per_page:</span> <span class="hljs-number">10</span></code></pre></div><p>你选择的主题，默认即为<code>landscape</code>，接下来会介绍</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">landscape</span></code></pre></div><h2 id="文章编写"><a href="#文章编写" class="headerlink" title="文章编写"></a>文章编写</h2><h3 id="初识Markdown"><a href="#初识Markdown" class="headerlink" title="初识Markdown"></a>初识Markdown</h3><p>Hexo 文章使用 markdown 语法</p><blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><p>Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。</p><p>Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台WordPress和大型CMS如Joomla、Drupal都能很好的支持Markdown。</p></blockquote><p>推荐一个Markdown教程：<a href="https://segmentfault.com/markdown" target="_blank" rel="noopener">教程</a></p><p>初始化的时候，已经自动帮我们创建了一个名为 <code>hello-world.md</code> 的文件 <code>.md</code> 即为markdown文章的后缀名</p><div class="hljs"><pre><code class="hljs markdown">---title: Hello World---Welcome to [<span class="hljs-string">Hexo</span>](<span class="hljs-link">https://hexo.io/</span>)! This is your very first post. Check [<span class="hljs-string">documentation</span>](<span class="hljs-link">https://hexo.io/docs/</span>) for more info. If you get any problems when using Hexo, you can find the answer in [<span class="hljs-string">troubleshooting</span>](<span class="hljs-link">https://hexo.io/docs/troubleshooting.html</span>) or you can ask me on [<span class="hljs-string">GitHub</span>](<span class="hljs-link">https://github.com/hexojs/hexo/issues</span>).........................</code></pre></div><p>两个 <code>---</code> 中间的部分我们称之为 <code>Front-matter</code> ，即文章的属性，该部分来自 <code>\scaffolds\post.md</code> ,这个md文件中放着一份模板，之后用 <code>hexo n “xxx”</code> 命令新建的文件的 <code>Front-matter</code> 都来自这，我们可以自己修改该文件。  </p><p>title 标题，date 建立日期，updated 更新日期，tags 标签，categories 分类 </p><p>除了使用命令新建文章还可以自己在 <code>_post</code> 文件夹中创建 <code>.md</code> 文件，需要注意的是，使用命令创建的文章会自动帮我们写好 <code>Front-matter</code>，而手动创建的需要我们自己写。</p><h3 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h3><p>图床一般是指储存图片的服务器，就是专门用来存放图片，同时允许你把图片对外连接的网上空间，不少图床都是免费的。<br>就是将图片传到网站上，然后在写文章时通过该网站提供的图片链接插入图片，markdown 教程中应该会提到</p><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>可访问 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo主题商店</a>挑选喜欢的主题<br>，接下来的演示采用 <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT主题</a></p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>不同主题不同方式，可以查看对应主题网站</p><div class="hljs"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</code></pre></div><p>此时 <code>/themes</code> 下多了一个 <code>next</code> 文件夹，该文件夹内存放该主题文件<br>你会发现文件夹中也有一个 <code>_config.yaml</code> ，我们称之为 <code>主题配置文件</code> 。另一个是 <code>站点配置文件</code> 。这个 <code>主题配置文件</code> 以后再讲<br>安装完成之后在 <code>站点配置文件</code> 中更改主题即可</p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>至此博客已经基本搭建完成，关于主题配置的详细内容下篇文章再写。<br>接下来还会写 绑定自已域名，Github+Coding 国内外双线部署，主题美化，网站SEO，搭建自己的图床等内容，虽然很多我自己带还没搞，不过已经在计划之中了，希望不要咕咕咕咕咕咕咕</p><hr><p><a href="https://zhuanlan.zhihu.com/p/80140564" target="_blank" rel="noopener">参考文章</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>最大公约数算法之横向评测</title>
    <link href="/2020/02/09/%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%AE%97%E6%B3%95%E4%B9%8B%E6%A8%AA%E5%90%91%E8%AF%84%E6%B5%8B/"/>
    <url>/2020/02/09/%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%AE%97%E6%B3%95%E4%B9%8B%E6%A8%AA%E5%90%91%E8%AF%84%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">最</span>大公约数<p>简称 <code>Gcd</code><br>当然还有一个简称 <code>hcf</code> 嘿嘿嘿<br>（可我不敢用 hcf QAQ）</p><p>求法有好多种</p><ul><li>穷举法</li><li>碾转相除法</li><li><ul><li>欧几里得算法</li></ul></li><li><ul><li>扩展欧几里得算法</li></ul></li><li>Stein 算法</li><li>碾转相减法</li><li>利用位运算（不知道叫什么，非常快就对了）</li></ul><a id="more"></a><h1 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h1><h2 id="1-穷举法"><a href="#1-穷举法" class="headerlink" title="1. 穷举法"></a>1. 穷举法</h2><p>没什么说的</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Gcd1</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;<span class="hljs-keyword">int</span> Gcd = <span class="hljs-number">1</span>, minn = min(a, b);<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>; i&lt;=minn; i++)        <span class="hljs-keyword">if</span> (!a%i &amp;&amp; !b%i)            Gcd = i;<span class="hljs-keyword">return</span> Gcd;&#125;</code></pre></div><h2 id="2-辗转相除法"><a href="#2-辗转相除法" class="headerlink" title="2. 辗转相除法"></a>2. 辗转相除法</h2><p>又称为 <code>欧几里得算法</code></p><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>$$<br>Gcd(a,;b) = Gcd(b,;a;mod;b)<br>$$</p><p>其中，a <code>mod</code> b是a除以b所得的余数。</p><h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><blockquote><ol><li><p>充分性：<br> 设 g 是 a,b 的公约数，则 a,b 可由 g 来表示：<br> a = xg, b = yg (x,y为整数)<br> 又，a 可由 b 表示（任意一个数都可以由另一个数来表示）：<br> a = kb + r (k 为整数，r 为 a 除以 b 所得余数)<br> =&gt; r = a - kb = xg - kyg = (x - ky)g<br> 即，g 也是 r 的约数。<br> 这样，g 就是 (b, r) 即 (b, a mod b) 的公约数。</p></li><li><p>必要性：<br> 设g是 (b, a mod b) 的公约数，类似于 1.，同样可以推出 g 也是 (a, b) 的公约数。</p></li></ol><p>综合 1.2.可得 (a, b) 和 (b, a mod b) 的公约数是一样的，当然最大公约数也是一样的。</p></blockquote><p>代码如下:</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-comment">// 碾转相除(递归写法)</span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Gcd2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;    <span class="hljs-keyword">if</span> (!b) <span class="hljs-keyword">return</span> a;    <span class="hljs-keyword">return</span> Gcd2(b, a % b);&#125;<span class="hljs-comment">//碾转相除(迭代写法)</span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Gcd3</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;    <span class="hljs-keyword">while</span>(b) &#123;        <span class="hljs-keyword">int</span> t = b;        b = a % b;        a = t;    &#125;    <span class="hljs-keyword">return</span> a;&#125;</code></pre></div><p>补充:<br>（看大佬博客发现的，以下内容均来自 <a href="https://baike.baidu.com/item/扩展欧几里得算法/2029414?fromtitle=`扩展欧几里德算法`&fromid=1053275" target="_blank" rel="noopener">百度百科</a>和 <a href="https://www.cnblogs.com/drizzlecrj/archive/2007/09/14/892340.html" target="_blank" rel="noopener">大佬博客</a>）<br><code>扩展欧几里得算法</code>（英语：Extended Euclidean algorithm）是<code>欧几里得算法</code>（又叫辗转相除法）的扩展。<br>已知整数 a、b，<code>扩展欧几里得算法</code>可以在求得a、b的最大公约数的同时，能找到整数 x、y （其中一个很可能是负数），使它们满足<code>贝祖等式</code>，即<br>$$<br>ax + by = Gcd(a,;b)<br>$$</p><p>如果 a 是负数，可以把问题转化成<br>$$<br>| a | ( -x )     + by = Gcd(| a |,;b)<br>$$<br>然后令x’ = (-x)。</p><p>通常谈到最大公约数时，我们都会提到一个非常基本的事实：给予二个整数 a、b，必存在整数 x、y 使得 ax + by = Gcd(a,b)。<br>有两个数 a,b，对它们进行辗转相除法，可得它们的最大公约数——这是众所周知的。然后，收集辗转相除法中产生的式子，倒回去，可以得到 ax+by=Gcd (a,b) 的整数解。<br>扩展欧几里得算法可以用来计算模反元素(也叫模逆元)，而模反元素在 <code>RSA</code> 加密算法中有举足轻重的地位。</p><p>代码如下:</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">exGcd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b, <span class="hljs-keyword">int</span> &amp;x, <span class="hljs-keyword">int</span> &amp;y)</span> </span>&#123;    <span class="hljs-keyword">if</span>(b == <span class="hljs-number">0</span>) &#123;        x = <span class="hljs-number">1</span>;        y = <span class="hljs-number">0</span>;        <span class="hljs-keyword">return</span> a;    &#125;    <span class="hljs-keyword">int</span> r = exGcd(b, a % b, x, y);    <span class="hljs-keyword">int</span> t = x;    x = y;    y = t - a / b * y;    <span class="hljs-keyword">return</span> r;&#125;</code></pre></div><p>把这个实现和 Gcd 的递归实现相比，发现多了下面的 x,y 赋值过程，这就是扩展欧几里德算法的精髓。<br>可以这样思考:<br>对于<br>$$<br>a’ = b, b’ = a % b<br>$$<br>而言，我们求得 x, y使得<br>$$<br>a’x + b’y = Gcd(a’, b’)<br>$$<br>由于<br>$$<br>b’ = a % b = a - a / b * b<br>$$<br>(注：这里的/是程序设计语言中的除法)<br>那么可以得到:<br>$$<br>a’x + b’y = Gcd(a’, b’)\⟹<br>bx + (a - a / b * b)y = Gcd(a’, b’) = Gcd(a, b)\⟹<br>ay +b(x - a / b<em>y) = Gcd(a, b)<br>$$<br>因此对于 a 和 b 而言，他们的相对应的 p，q 分别是 y 和 (x-a/b</em>y)</p><h2 id="3-Stein-算法"><a href="#3-Stein-算法" class="headerlink" title="3. Stein 算法"></a>3. Stein 算法</h2><p>（以下内容参考 <a href="https://www.cnblogs.com/drizzlecrj/archive/2007/09/14/892340.html" target="_blank" rel="noopener">大佬博客</a>）</p><h3 id="欧几里得算法缺陷"><a href="#欧几里得算法缺陷" class="headerlink" title="欧几里得算法缺陷"></a>欧几里得算法缺陷</h3><p>欧几里德算法是计算两个数最大公约数的传统算法，他无论从理论还是从效率上都是很好的。但是他有一个致命的缺陷，这个缺陷只有在大素数时才会显现出来。 </p><p>考虑现在的硬件平台，一般整数最多也就是 64 位，对于这样的整数，计算两个数之间的模是很简单的。对于字长为 32 位的平台，计算两个不超过32位的整数的模，只需要一个指令周期，而计算 64 位以下的整数模，也不过几个周期而已。但是对于更大的素数，这样的计算过程就不得不由用户来设计，为了计算两个超过 64 位的整数的模，用户也许不得不采用类似于多位数除法手算过程中的试商法，这个过程不但复杂，而且消耗了很多 CPU 时间。对于现代密码算法，要求计算 128 位以上的素数的情况比比皆是，设计这样的程序迫切希望能够<font color="red">抛弃除法和取模</font>。 （注：说到抛弃除法和取模，其实辗转相除法可以写成减法的形式）</p><h3 id="算法思想"><a href="#算法思想" class="headerlink" title="算法思想"></a>算法思想</h3><p>Stein 算法由 J. Stein 1961 年提出，这个方法也是计算两个数的最大公约数。和欧几里德算法 算法不同的是，Stein 算法只有整数的移位和加减法，这对于程序设计者是一个福音。 </p><p>为了说明 Stein 算法的正确性，首先必须注意到以下结论： </p><p>Gcd(a,a) = a，也就是一个数和他自身的公约数是其自身<br>Gcd(ka,kb) = k Gcd(a,b)，也就是最大公约数运算和倍乘运算可以交换，特殊的，当 k=2 时，说明两个偶数的最大公约数必然能被 2 整除。</p><h3 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h3><p>1、如果 An=Bn,那么 An(或Bn)<em>Cn 是最大公约数,算法结束<br>2、如果 An=0，Bn 是最大公约数，算法结束<br>3、如果 Bn=0，An 是最大公约数，算法结束<br>4、设置 A1=A、B1=B 和 C1=1<br>5、如果 An 和 Bn 都是偶数，则 An+1=An/2，Bn+1=Bn/2，Cn+1=Cn</em>2 (注意，乘 2 只要把整数左移一位即可，除 2 只要把整数右移一位即可)<br>6、如果 An 是偶数，Bn 不是偶数，则 An+1=An/2，Bn+1=Bn，Cn+1=Cn(很显然啦，2 不是奇数的约数)<br>7、如果 Bn 是偶数，An 不是偶数，则 Bn+1=Bn/2，An+1=An，Cn+1=Cn(很显然啦，2 不是奇数的约数)<br>8、如果 An 和 Bn 都不是偶数，则 An+1=|An-Bn|/2，Bn+1=min(An,Bn)，Cn+1=Cn<br>9、n 加 1，转 1</p><h3 id="C-的实现"><a href="#C-的实现" class="headerlink" title="C++的实现:"></a>C++的实现:</h3><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Gcd4</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;    <span class="hljs-keyword">if</span>(a == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;    <span class="hljs-keyword">if</span>(b == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> a;    <span class="hljs-keyword">if</span>(a % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> &amp;&amp; b % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">2</span> * Gcd4(a &gt;&gt; <span class="hljs-number">1</span>, b &gt;&gt; <span class="hljs-number">1</span>);    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>)  <span class="hljs-keyword">return</span> Gcd4(a &gt;&gt; <span class="hljs-number">1</span>, b);    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> Gcd4(a, b &gt;&gt; <span class="hljs-number">1</span>);    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> Gcd4(<span class="hljs-built_in">abs</span>(a - b), min(a, b));&#125;</code></pre></div><p>考虑欧几里德算法，最恶劣的情况是，每次迭代 a = 2b -1,这样，迭代后，r= b-1。如果 a 小于 2N，这样大约需要 4N 次迭代。而考虑 Stein 算法，每次迭代后，显然 AN+1BN+1≤ ANBN/2，最大迭代次数也不超过 4N 次。也就是说，迭代次数几乎是相等的。但是，需要注意的是，对于大素数，试商法将使每次迭代都更复杂，因此<font color="red">对于大素数 Stein 将更有优势</font></p><h2 id="4-辗转相减法"><a href="#4-辗转相减法" class="headerlink" title="4. 辗转相减法"></a>4. 辗转相减法</h2><p>即尼考曼彻斯法</p><p>若 a &gt; b，则 a = a - b<br>若 b &gt; a，则 b = b - a<br>若 a == b，则 a(或b) 即为最大公约数<br>若 a != b，则回到 1</p><h3 id="证明-1"><a href="#证明-1" class="headerlink" title="证明"></a>证明</h3><blockquote><p>设<br>a = bq1 + r1 (0 &lt; r1 &lt; b)<br>b = r1q2 + r2 (0 &lt; r2 &lt; r1)<br>r1 = r2q3 + r3 (0 &lt; r3 &lt; r2)<br>……<br>只要 r1, r2, r3…… 不是 0 就可以继续写下去<br>我们看到：<br>b &gt; r1 &gt; r2 &gt; r3 &gt; …… &gt; 0<br>b 是有限的 r1, r2, r3 是整数<br>所以至多 b 步后，必有 rn = 0<br>rn - 2 = rn - 1qn + rn<br>rn - 1 = rn * qn + 1 + 0<br>由此可以得到 (a, b) = rn<br>(来自百度百科)</p></blockquote><h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-comment">// 辗转相减法（递归写法）</span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Gcd5</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;    <span class="hljs-keyword">if</span>(a == b) <span class="hljs-keyword">return</span> a;    <span class="hljs-keyword">return</span> a &gt; b ? Gcd5(a-b, b) : Gcd5(a, b-a);&#125;<span class="hljs-comment">// 辗转相减法（迭代写法）</span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Gcd6</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;    <span class="hljs-keyword">while</span>(a != b) &#123;        <span class="hljs-keyword">if</span>(a &gt; b)            a = a - b;        <span class="hljs-keyword">else</span>            b = b - a;    &#125;    <span class="hljs-keyword">return</span> a;&#125;</code></pre></div><h2 id="5-利用位运算"><a href="#5-利用位运算" class="headerlink" title="5.利用位运算"></a>5.利用位运算</h2><p>不会证明，也没找到证明，直接上代码</p><h3 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h3><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Gcd7</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;　　<span class="hljs-keyword">while</span>(b^=a^=b^=a%=b);　　<span class="hljs-keyword">return</span> a;&#125;</code></pre></div><p>是不是超短，但是非常快</p><h1 id="运行时间对比"><a href="#运行时间对比" class="headerlink" title="运行时间对比"></a>运行时间对比</h1><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-comment">// 测试代码</span><span class="hljs-comment">// 对于同种算法仅测试递归写法</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;windows.h&gt;</span></span><span class="hljs-comment">// 穷举法</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Gcd1</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b)</span> </span>&#123;    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> Gcd = <span class="hljs-number">1</span>, minn = <span class="hljs-built_in">std</span>::min(a, b);    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> i=<span class="hljs-number">2</span>; i&lt;=minn; i++)        <span class="hljs-keyword">if</span> (!a%i &amp;&amp; !b%i)            Gcd = i;&#125;<span class="hljs-comment">// 碾转相除(递归写法)</span><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">Gcd2</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b)</span> </span>&#123;    <span class="hljs-keyword">if</span> (!b) <span class="hljs-keyword">return</span> a;    <span class="hljs-keyword">return</span> Gcd2(b, a % b);&#125;<span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">Gcd4</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b)</span> </span>&#123;    <span class="hljs-keyword">if</span>(a == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> b;    <span class="hljs-keyword">if</span>(b == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> a;    <span class="hljs-keyword">if</span>(a % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> &amp;&amp; b % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">2</span> * Gcd4(a &gt;&gt; <span class="hljs-number">1</span>, b &gt;&gt; <span class="hljs-number">1</span>);    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>)  <span class="hljs-keyword">return</span> Gcd4(a &gt;&gt; <span class="hljs-number">1</span>, b);    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> Gcd4(a, b &gt;&gt; <span class="hljs-number">1</span>);    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> Gcd4(<span class="hljs-built_in">abs</span>(a - b), <span class="hljs-built_in">std</span>::min(a, b));&#125;<span class="hljs-comment">// 辗转相减法（递归写法）</span><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">Gcd5</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b)</span> </span>&#123;    <span class="hljs-keyword">if</span>(a == b) <span class="hljs-keyword">return</span> a;    <span class="hljs-keyword">return</span> a &gt; b ? Gcd5(a-b, b) : Gcd5(a, b-a);&#125;<span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">Gcd7</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b)</span> </span>&#123;    <span class="hljs-keyword">while</span>(b^=a^=b^=a%=b);    <span class="hljs-keyword">return</span> a;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-keyword">double</span> time=<span class="hljs-number">0</span>;    LARGE_INTEGER nFreq;    LARGE_INTEGER nBeginTime;    LARGE_INTEGER nEndTime;    QueryPerformanceFrequency(&amp;nFreq);    QueryPerformanceCounter(&amp;nBeginTime);    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a = <span class="hljs-number">77353649739</span>;    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b = <span class="hljs-number">2147483647</span>;    Gcd1(a, b);    QueryPerformanceCounter(&amp;nEndTime);    time=(<span class="hljs-keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="hljs-keyword">double</span>)nFreq.QuadPart;    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"运行时间："</span>&lt;&lt;time*<span class="hljs-number">1000</span>&lt;&lt;<span class="hljs-string">"ms\n"</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><p>结果：</p><blockquote><p>Gcd1(a, b) 运行时间：14641.3 ms<br>Gcd2(a, b) 运行时间：0.0007 ms<br>Gcd4(a, b) 运行时间：0.0051 ms<br>Gcd5(a, b) 运行时间：0.0057 ms<br>Gcd6(a, b) 运行时间：0.0017 ms<br>Gcd7(a, b) 运行时间：0.0007 ms</p></blockquote><p>可见<code>辗转相除法</code>与<code>利用位运算</code>的两个算法最快。</p><p>那么加大数据，再次比较这两种算法</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a = <span class="hljs-number">18446344013706551617</span>;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b = <span class="hljs-number">12416744005372551613</span>;</code></pre></div><p>多次运行结果：</p><blockquote><p>Gcd2(a, b) 运行时间：0.0007~0.0008 ms</p><p>Gcd7(a, b) 运行时间：0.0002~0.0005 ms</p></blockquote><p>可见利用位运算的算法是最快的，<del>又短又快</del> 嘿嘿嘿</p><h1 id="2-20更新"><a href="#2-20更新" class="headerlink" title="2.20更新"></a>2.20更新</h1><p>加大数据，并用 Linux 内置 time 测试时间</p><p>数据越加越大</p><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-comment">//辗转相除</span>real    <span class="hljs-number">0</span>m0<span class="hljs-number">.014</span>suser    <span class="hljs-number">0</span>m0<span class="hljs-number">.000</span>ssys     <span class="hljs-number">0</span>m0<span class="hljs-number">.016</span>s<span class="hljs-comment">//位运算</span>real    <span class="hljs-number">0</span>m0<span class="hljs-number">.013</span>suser    <span class="hljs-number">0</span>m0<span class="hljs-number">.000</span>ssys     <span class="hljs-number">0</span>m0<span class="hljs-number">.016</span>s</code></pre></div><p>好像也没差多少啊？</p><p>还是我测的方法不对</p><p>测试方法如下：</p><p>两个方法分两个文件写</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-comment">//test1</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">Gcd</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b)</span> </span>&#123;    <span class="hljs-keyword">if</span> (!b) <span class="hljs-keyword">return</span> a;    <span class="hljs-keyword">return</span> Gcd(b, a % b);&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a = <span class="hljs-number">1844674407370955143</span>;    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b = <span class="hljs-number">1844674407370955137</span>;    Gcd(a, b);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-comment">//test2</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">Gcd</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b)</span> </span>&#123;    <span class="hljs-keyword">while</span>(b^=a^=b^=a%=b);    <span class="hljs-keyword">return</span> a;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a = <span class="hljs-number">1844674407370955143</span>;    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> b = <span class="hljs-number">1844674407370955137</span>;    Gcd(a, b);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><p>然后命令行 <code>g++ test1.cpp -o test1</code> 和 <code>g++ test2.cpp -o test2</code></p><p>然后 <code>time ./test1</code> 和 <code>time ./test2</code></p><p>（应该没错啊）</p><hr><ol><li>部分介绍内容来源<a href="https://baike.baidu.com/" target="_blank" rel="noopener">百度百科</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>OI</tag>
      
      <tag>c++</tag>
      
      <tag>横向评测</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>再见 2019，你好 2020</title>
    <link href="/2019/12/31/2019%E6%80%BB%E7%BB%93/"/>
    <url>/2019/12/31/2019%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h3 id="上"><a href="#上" class="headerlink" title="上"></a>上</h3><span class="drop-cap">1</span>9 年的上半年，备战中考。<p>初三了，能明显感觉到大家都开始认真了。初三上学期感觉自己一直不在状态，没考好，慢慢紧张起来。<br>在学校天天听老师念叨<br>下学期状态慢慢调整回来了，也不再那么紧张，每天两点一线的生活已经习惯了，班级里也不再像以前一样。</p><p>记得考前几个星期，好朋友出现<del>感情问题</del>，放学后在车站帮他疏导疏导，之后便聊起了人生，他中考之后就要去加拿大了，或许再也见不到。当时约定他努力学习考进多伦多大学，我也努力进多伦多，这样就又可以做同学了。现在再看，这或许是对离别的安慰，但又或许是前进的动力。他送了我个高达，我送了他个火石挂件，他的高达我还在，但不知道我的火石挂件如何了。</p><p>不知不觉便到了中考前夕，记得那个晚上和一个学姐一个学长聊了很多，也对高中生活有了更多的了解。虽说讲的大部分是关于高中的阴暗面，但我心中仍满怀对高中生活的憧憬</p><p>第二天中考，到学校，居然买了可乐棒棒糖给我们！！不过好像是等到考完才发给我们，后面才知道是班主任自己掏的钱。</p><p>中考那几天，除了第一科的时候比较紧张，后面都还好，时间很快，转眼就考完了，之后便开始玩了。后面不怎么记得了，貌似当天下午就几个人出去玩了。</p><p>毕业典礼在光华大礼堂举行，听着校长的唠叨，但却不觉得烦，老师们还精心录制了视频，也为我们做了视频，很尴尬的是2班的集体照和我们班的弄个错了，不过还是很感动。结束之后回到班级，班级里开了一个小 party，请来了各科老师，拍了合照，成功与各科老师合了影！</p><p>到了出成绩那天，早一起来我爸就来问我成绩出了没，查成绩的时候手都在抖，703，感觉和预期差不多，再问了下其他同学，感觉考的还不错，接着就开始等通知书。</p><h3 id="下"><a href="#下" class="headerlink" title="下"></a>下</h3><p>记得那时候进了几个二中新生群，有人预测报送班分数线 700，也有人说更高，对此我也抱着随缘的态度，进了那就运气好，没进也没什么关系。之后又在群里看到信息社的人，加了好友了解了一番，便加入了信息社。</p><p>7 月 10 号，独自一人去学校机房面基<del>（害怕）</del></p><p>由于没去过，不认识路，群里一个叫李乐禛的人在校门口等我。</p><p>那是我第一次见到乐禛，一见面好尴尬哦，之后就被他带到了 6 楼，在机房门口看见了老师和另外几个人，进去之后随便找了个地方坐下，在乐禛的指导下成了一名 <code>OIer</code> ？</p><p><img src="https://cos.royce2003.top/ac33bbfd/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>过了没几天收到了通知书，然后去学校报到，然后就开始衔接课了。陆陆续续信息社的人也多了起来。没想到还有小学同学，双胞胎姐姐妹妹，完了小学分的清清楚楚，现在完全分不清了。</p><p>之后是一个三天的军训，第一天身体原因咕了，军训完也认识了班里许多人。没去基地可惜了。</p><p>之后便正式上课了。</p><p>九月初因为考试放学早，一起同校的许多人商量着回去看老师。回到了 M1，那熟悉的校门，熟悉的教学楼，熟悉的操场，勾起了我心底的伤感。走上熟悉的楼梯，走过熟悉的走廊，透过窗户，看到了我们和蔼的廖老师，挺着大肚子还在坚持工作，她在监考也就没交她出来了。然后去了秀珠办公室，听他吐槽这一届的差劲，回想起她原来对我们说的话：“你是我们带过最差的一届。”，xswl。几个月没见，就感觉已经老了好多，或许是因为更操心了吧。</p><p>九月十号再回母校看老师，秀珠带学生去军训了，没见到。这次和我们美丽的前段长和可爱年轻的小黄妈一起体验了下学校的高级会议室（据说校长单独找人谈话用的）。还见到了永远年轻的晓晶，我们一起在里面聊了许多，时而吐槽其他老师时而聊聊现在。</p><p>还是 M1 好啊！</p><p><img src="https://cos.royce2003.top/ac33bbfd/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/ac33bbfd/03.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/ac33bbfd/04.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/ac33bbfd/05.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/ac33bbfd/06.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>11 月中旬参加了 CSP，没考好但收获很大。</p><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这一年失去了很多，同时也收获了很多。</p><p>人生就是这样吧，有了失去才会有收获。 有得必有失，有失必有得。 得到了成熟，就失去了天真；得到知识，就失去了汗水；得到了城市的喧嚣，就失去了乡村的宁静。</p><p>但失去也意味着得到：磨练换来成长，勤奋带来收获。</p><blockquote><p>我一向在思考，一向在挣扎，我不明白，人为什么一向在追求，却又一向在失去，这样的得与失之间，我们究竟得到了什么，又失去了多少，得与失之间我们又该怎样去权衡，我们是否该为了不失去而不追求，为了多得到而少给予，这一切纠结的思绪在我为自我的理想而追求时得到了理清，我的经历告诉我：追求是对人生最好的诠释，我们在追求时应对得失，在得失之间收获一切。所以此刻，我很坦然，我明白，在一次次的得失较量之间，我将学会一些东西，一些会在我的前进之路上为我披荆斩棘的东西，它们将是我人生中最宝贵的财富。 –《得失之间》</p></blockquote><p>新的一年，朝着自己的理想，努力奋斗!</p><p>祝大家在新的一年里心想事成</p><p><img src="https://cos.royce2003.top/ac33bbfd/07.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>Royce</tag>
      
      <tag>总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1346 电车</title>
    <link href="/2019/12/10/P1346%20%E7%94%B5%E8%BD%A6/"/>
    <url>/2019/12/10/P1346%20%E7%94%B5%E8%BD%A6/</url>
    
    <content type="html"><![CDATA[<h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目[^1]"></a>题目[^1]</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><span class="drop-cap">在</span><p>一个神奇的小镇上有着一个特别的电车网络，它由一些路口和轨道组成，每个路口都连接着若干个轨道，每个轨道都通向一个路口（不排除有的观光轨道转一圈后返回路口的可能）。在每个路口，都有一个开关决定着出去的轨道，每个开关都有一个默认的状态，每辆电车行驶到路口之后，只能从开关所指向的轨道出去，如果电车司机想走另一个轨道，他就必须下车切换开关的状态。</p><p>为了行驶向目标地点，电车司机不得不经常下车来切换开关，于是，他们想请你写一个程序，计算一辆从路口 A 路口 B 最少需要下车切换几次开关。</p><a id="more"></a><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行有 3 个整数 2&lt;=N&lt;=100，1&lt;=A，B&lt;=N，分别表示路口的数量，和电车的起点，终点。</p><p>接下来有 N 行，每行的开头有一个数字 Ki(0&lt;=Ki&lt;=N-1)，表示这个路口与 Ki 条轨道相连，接下来有 Ki 个数字表示每条轨道所通向的路口，开关默认指向第一个数字表示的轨道。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出文件只有一个数字，表示从 A 到 B 所需的最少的切换开关次数，若无法从 A 前往 B，输出 -1。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><div class="hljs"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">2</span> <span class="hljs-number">1</span><span class="hljs-symbol">2 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span><span class="hljs-symbol">2 </span><span class="hljs-number">3</span> <span class="hljs-number">1</span><span class="hljs-symbol">2 </span><span class="hljs-number">1</span> <span class="hljs-number">2</span></code></pre></div><p><strong>输出 #1</strong> </p><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-number">0</span></code></pre></div><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>其实非常简单啦，只需将开关默认指向的轨道的边权赋值为 0，其他为 1。</p><p>然后跑一边 <code>spfa</code> 就好了。</p><p><code>spfa</code> 没死！！！</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;queue&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXN 10010</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXM 500010</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INF 2147483647</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-built_in">queue</span>&lt;<span class="hljs-keyword">int</span>&gt; q;<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span> &#123;</span><span class="hljs-keyword">int</span> next,to,w;&#125;edge[MAXM];<span class="hljs-keyword">int</span> n,m,s,ki,cnt,A,B;<span class="hljs-keyword">int</span> head[MAXN],vis[MAXN],dis[MAXN];<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">spfa</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)dis[i] = INF;q.push(A);dis[A] = <span class="hljs-number">0</span>;vis[A] = <span class="hljs-number">1</span>;<span class="hljs-keyword">while</span>(!q.empty()) &#123;<span class="hljs-keyword">int</span> u = q.front();q.pop();vis[u] = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=head[u];i;i=edge[i].next) &#123;<span class="hljs-keyword">int</span> v = edge[i].to;<span class="hljs-keyword">if</span>(dis[v]&gt;dis[u]+edge[i].w) &#123;dis[v] = dis[u] + edge[i].w;<span class="hljs-keyword">if</span>(!vis[v]) &#123;vis[v] = <span class="hljs-number">1</span>;q.push(v);&#125;&#125;&#125;&#125;<span class="hljs-keyword">return</span> dis[B]==INF ? <span class="hljs-number">-1</span> : dis[B];&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">edge_add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> v,<span class="hljs-keyword">int</span> w)</span> </span>&#123;cnt++;edge[cnt].next = head[u];edge[cnt].to = v;edge[cnt].w = w;head[u] = cnt;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; A &gt;&gt; B;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) &#123;<span class="hljs-built_in">cin</span> &gt;&gt; ki;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=ki;j++) &#123;<span class="hljs-built_in">cin</span> &gt;&gt; m;<span class="hljs-keyword">if</span>(j==<span class="hljs-number">1</span>)edge_add(i,m,<span class="hljs-number">0</span>);<span class="hljs-keyword">else</span>edge_add(i,m,<span class="hljs-number">1</span>);&#125;&#125;<span class="hljs-built_in">cout</span> &lt;&lt; spfa();<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><p>黄题++</p><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P1346" target="_blank" rel="noopener">P1346 电车 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OI</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1194 买礼物</title>
    <link href="/2019/12/07/P1194%20%E4%B9%B0%E7%A4%BC%E7%89%A9/"/>
    <url>/2019/12/07/P1194%20%E4%B9%B0%E7%A4%BC%E7%89%A9/</url>
    
    <content type="html"><![CDATA[<h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目[^1]"></a>题目[^1]</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>又到了一年一度的明明生日了，明明想要买 B 样东西，巧的是，这 B 样东西价格都是 A 元。</p><p>但是，商店老板说最近有促销活动，也就是：</p><a id="more"></a><p>如果你买了第 I 样东西，再买第 J 样，那么就可以只花 $K_{I,J}$ 元，更巧的是，$K_{I,J}$ 竟然等于 $K_{J,I}$。</p><p>现在明明想知道，他最少要花多少钱。</p><!--more--><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行两个整数，A,B。</p><p>接下来B行，每行 B 个数，第 I 行第 J 个为 $K_{I,J}$。</p><p>我们保证 $K_{I,J}=K_{J,I}$,并且 $K_{I,I}=0$。</p><p>特别的，如果 $K_{I,J}=0$，那么表示这两样东西之间不会导致优惠。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，为最小要花的钱数。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><div class="hljs"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">1</span><span class="hljs-number">0</span></code></pre></div><p><strong>输出 #1</strong></p><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-number">1</span></code></pre></div><p><strong>输入 #2</strong></p><div class="hljs"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">3</span><span class="hljs-symbol">0 </span><span class="hljs-number">2</span> <span class="hljs-number">4</span><span class="hljs-symbol">2 </span><span class="hljs-number">0</span> <span class="hljs-number">2</span><span class="hljs-symbol">4 </span><span class="hljs-number">2</span> <span class="hljs-number">0</span></code></pre></div><p><strong>输出 #2</strong></p><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-number">7</span></code></pre></div><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>样例解释 22</p><p>先买第 22 样东西，花费 33 元，接下来因为优惠，买 1,31,3 样都只要 22 元，共 77 元。</p><p>（同时满足多个“优惠”的时候，聪明的明明当然不会选择用 44 元买剩下那件，而选择用 22 元。）</p><p>数据规模</p><p>对于$30%$的数据,$1 \le B \le 10$。</p><p>对于$100%$的数据,$1 \le B \le 500,0 \le A,K_{I,J} \le 1000$。</p><p>2018.7.25 新添数据一组</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p><del>典型阅读理解题</del></p><p>B 个商品，都是 A ……….</p><p>一道最小生成树题，非常佩服出题者的思想%%%</p><p>谁能把买东西和最小生成树结合起来呢（最短路写 a+b 的大佬除外）</p><p>好题啊，在机房写的时候，几位巨佬都说是好题</p><p>认真读题发现 <code>x-y</code> 的边权其实就是买了之后再买 y 的价格</p><p>或者买了 y 之后再买 x 的价格</p><p>那这样就很好做了</p><p>不过这题的输入和普通的题不一样，普通题给的是一组一组的边，而这题给了个邻接矩阵 ，为了方便我在输入的时候转成了用结构体来存</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span> &#123;</span>    <span class="hljs-keyword">int</span> u,v,w;&#125;edge[MAXM];<span class="hljs-comment">// B 为邻接矩阵的边长 </span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=B;i++)        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=B;j++) &#123;            <span class="hljs-built_in">cin</span> &gt;&gt; t;            <span class="hljs-keyword">if</span>(i==j) <span class="hljs-keyword">continue</span>;            ++cnt;            <span class="hljs-keyword">if</span>(t==<span class="hljs-number">0</span>) edge[cnt].w = A;            <span class="hljs-keyword">else</span> edge[cnt].w = t;            edge[cnt].u = i;            edge[cnt].v = j;        &#125;</code></pre></div><p>存图完成，接下来跑一遍 <code>kruskal</code> 就 ok 了</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;    <span class="hljs-keyword">if</span>(f[x]==x)        <span class="hljs-keyword">return</span> x;    <span class="hljs-keyword">return</span> f[x] = find(f[x]);&#125;<span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(Edge a,Edge b)</span> </span>&#123;    <span class="hljs-keyword">return</span> a.w &lt; b.w;&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=B;i++)f[i] = i;sort(edge+<span class="hljs-number">1</span>,edge+cnt+<span class="hljs-number">1</span>,cmp);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=cnt;i++) &#123;<span class="hljs-keyword">if</span>(sum+<span class="hljs-number">1</span>==B)        <span class="hljs-keyword">break</span>;    <span class="hljs-keyword">int</span> x = find(edge[i].u);    <span class="hljs-keyword">int</span> y = find(edge[i].v);    <span class="hljs-keyword">if</span>(x!=y) &#123;        f[x] = y;        sum++;        ans += edge[i].w;    &#125;</code></pre></div><p>这么简单？当然不可能，这时候再认真思考下 <code>ans</code> 存的是什么？</p><p>边的权值相加，那权值表示商品的价格，可总共 B 个商品，但我们直连了 B-1 条边，所以最后还要加上一个商品的原价 A。</p><p>那么让 <code>ans</code> 的初值为 A 即可</p><p>综上，把代码合起来，整理下就 ok 了。</p><p>然后我就 90 分了 QAQ</p><p>最后一个点 wa 了？</p><p>下个测试点</p><blockquote><p>输入数据</p><p>3 3<br>0 4 4<br>4 0 4<br>4 4 0</p><p>输出数据</p><p>9</p></blockquote><p>问题马上就出来了，商品原价 3 元，可买了某一个再买另一个居然还要 4 块？<del>促销不应该更便宜吗</del></p><p>那既然这样，当权值大于 A 的时候就把 A 作权值，修改下存图的代码就好了</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=B;i++)        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=B;j++) &#123;            <span class="hljs-built_in">cin</span> &gt;&gt; t;            <span class="hljs-keyword">if</span>(i==j) <span class="hljs-keyword">continue</span>;            cnt++;            <span class="hljs-keyword">if</span>(t==<span class="hljs-number">0</span> || t&gt;A) edge[cnt].w = A;            <span class="hljs-keyword">else</span> edge[cnt].w = t;            edge[cnt].u = i;            edge[cnt].v = j;        &#125;</code></pre></div><p>最后附上 AC 代码</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXN 50000</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXM 25000000</span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-keyword">int</span> t,A,B,cnt,ans,sum;<span class="hljs-keyword">int</span> f[MAXN];<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span> &#123;</span>    <span class="hljs-keyword">int</span> u,v,w;&#125;edge[MAXM];<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;    <span class="hljs-keyword">if</span>(f[x]==x)        <span class="hljs-keyword">return</span> x;    <span class="hljs-keyword">return</span> f[x] = find(f[x]);&#125;<span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(Edge a,Edge b)</span> </span>&#123;    <span class="hljs-keyword">return</span> a.w &lt; b.w;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-built_in">cin</span> &gt;&gt; A &gt;&gt; B;    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=B;i++)        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=B;j++) &#123;            <span class="hljs-built_in">cin</span> &gt;&gt; t;            <span class="hljs-keyword">if</span>(i==j) <span class="hljs-keyword">continue</span>;            cnt++;            <span class="hljs-keyword">if</span>(t==<span class="hljs-number">0</span> || t&gt;A)<span class="hljs-comment">// 注意 t&gt;A 则存入 A</span>                edge[cnt].w = A;            <span class="hljs-keyword">else</span>                edge[cnt].w = t;            edge[cnt].u = i;            edge[cnt].v = j;        &#125;    ans += A;<span class="hljs-comment">// 注意 ans 的初值</span>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=B;i++)        f[i] = i;    sort(edge+<span class="hljs-number">1</span>,edge+cnt+<span class="hljs-number">1</span>,cmp);    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=cnt;i++) &#123;        <span class="hljs-keyword">if</span>(sum+<span class="hljs-number">1</span>==B)            <span class="hljs-keyword">break</span>;        <span class="hljs-keyword">int</span> x = find(edge[i].u);        <span class="hljs-keyword">int</span> y = find(edge[i].v);        <span class="hljs-keyword">if</span>(x!=y) &#123;            sum++;            f[x] = y;            ans += edge[i].w;        &#125;    &#125;    <span class="hljs-built_in">cout</span> &lt;&lt; ans;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P1194" target="_blank" rel="noopener">P1194 买礼物 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OI</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3385【模板】负环</title>
    <link href="/2019/11/29/P3385%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E8%B4%9F%E7%8E%AF/"/>
    <url>/2019/11/29/P3385%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E8%B4%9F%E7%8E%AF/</url>
    
    <content type="html"><![CDATA[<h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目[^1]"></a>题目[^1]</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>暴力枚举 / SPFA / Bellman-ford / 奇怪的贪心 / 超神搜索</p><p>寻找一个从顶点 11 所能到达的负环，负环定义为：一个边权之和为负的环。</p><a id="more"></a><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p><strong>本题有多组数据</strong></p><p>第一行一个正整数 T 表示数据组数，对于每组数据：</p><p>第一行两个正整数 N, M，表示图有 N 个顶点，M 条边</p><p>接下来 M 行，每行三个整数 $a, b, w$，表示 $a \rightarrow b$ 有一条权值为 w 的边（若 w&lt;0 则为单向，否则双向）。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>共 T 行。对于每组数据，存在负环则输出一行 <code>YE5</code>(不含引号)，否则输出一行 <code>N0</code>(不含引号)。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><p><strong>输入 #1</strong></p><div class="hljs"><pre><code class="hljs basic"><span class="hljs-number">2</span><span class="hljs-symbol">3 </span><span class="hljs-number">4</span><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">2</span><span class="hljs-symbol">1 </span><span class="hljs-number">3</span> <span class="hljs-number">4</span><span class="hljs-symbol">2 </span><span class="hljs-number">3</span> <span class="hljs-number">1</span><span class="hljs-symbol">3 </span><span class="hljs-number">1</span> -<span class="hljs-number">3</span><span class="hljs-symbol">3 </span><span class="hljs-number">3</span><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span><span class="hljs-symbol">2 </span><span class="hljs-number">3</span> <span class="hljs-number">4</span><span class="hljs-symbol">3 </span><span class="hljs-number">1</span> -<span class="hljs-number">8</span></code></pre></div><p><strong>输出 #1</strong></p><div class="hljs"><pre><code class="hljs gcode"><span class="hljs-symbol">N0</span>YE<span class="hljs-number">5</span></code></pre></div><h4 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h4><p>$n\le 2000，m\le 3000，-10000\le w \le 10000，T\le 10$。</p><p>建议复制输出格式中的字符串。</p><p>本题数据感谢 @<a href="https://www.luogu.com.cn/user/5643" target="_blank" rel="noopener">negiizhao</a> 的精心构造，请不要使用玄学算法。</p><p>本题数据有更新。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>方法很简单，我用的 <code>SPFA</code>，新增一个数组存每个点的入队次数，当某点的入队次数超过点的总数 n，即说明存在负环。</p><!--more--><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;queue&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXN 500100</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXM 500010</span><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> INF = <span class="hljs-number">1e9</span>;<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-keyword">int</span> n,m,u,v,w,cnt,T;<span class="hljs-keyword">int</span> head[MAXN],dis[MAXN],vis[MAXN],num[MAXN];<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span> &#123;</span><span class="hljs-keyword">int</span> to,next,w;&#125;edge[MAXM&lt;&lt;<span class="hljs-number">1</span>];<span class="hljs-comment">//相当于MAXM*2</span><span class="hljs-built_in">queue</span> &lt;<span class="hljs-keyword">int</span>&gt; q;<span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">spfa</span><span class="hljs-params">()</span> </span>&#123;fill(dis+<span class="hljs-number">1</span>,dis+n+<span class="hljs-number">1</span>,INF);    <span class="hljs-built_in">memset</span>(vis,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(vis));    <span class="hljs-built_in">memset</span>(num,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(num));<span class="hljs-keyword">while</span>(!q.empty()) q.pop();q.push(<span class="hljs-number">1</span>);vis[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;dis[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(!q.empty())&#123;<span class="hljs-keyword">int</span> u = q.front();q.pop();vis[u] = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=head[u];i;i=edge[i].next) &#123;<span class="hljs-keyword">int</span> v = edge[i].to;<span class="hljs-keyword">if</span>(dis[v]&gt;dis[u]+edge[i].w) &#123;dis[v] = dis[u] + edge[i].w;<span class="hljs-keyword">if</span>(!vis[v]) &#123;q.push(v);vis[v] = <span class="hljs-number">1</span>;num[v]++;<span class="hljs-keyword">if</span>(num[v]&gt;n)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;&#125;&#125;&#125;&#125;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> v,<span class="hljs-keyword">int</span> w)</span> </span>&#123;edge[++cnt].to=v;edge[cnt].w=w;edge[cnt].next=head[u];head[u]=cnt;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-built_in">cin</span> &gt;&gt; T;<span class="hljs-keyword">while</span>(T--) &#123;<span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m;<span class="hljs-built_in">memset</span>(head,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(head));<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++) &#123;<span class="hljs-built_in">cin</span> &gt;&gt; u &gt;&gt; v &gt;&gt; w;<span class="hljs-keyword">if</span>(w&gt;=<span class="hljs-number">0</span>) add(v,u,w);add(u,v,w);&#125;<span class="hljs-keyword">if</span>(spfa())<span class="hljs-built_in">cout</span> &lt;&lt;<span class="hljs-string">"YE5"</span>&lt;&lt;<span class="hljs-built_in">endl</span>;<span class="hljs-keyword">else</span><span class="hljs-built_in">cout</span> &lt;&lt;<span class="hljs-string">"N0"</span>&lt;&lt;<span class="hljs-built_in">endl</span>;&#125;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><p>需要注意的是<strong>若w&lt;0则为单向，否则双向</strong>。所以 w 为 0 时为<code>双向边</code>。当时被卡了半天 emm</p><p><a href="/posts/4d5decec.html">例题传送门</a></p><p>[^1]: 题目来源：<a href="https://www.luogu.com.cn/problem/P3385" target="_blank" rel="noopener">P3385 - 洛谷 | 计算机科学教育新生态</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OI</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2136 拉近距离</title>
    <link href="/2019/11/28/P2136%20%E6%8B%89%E8%BF%91%E8%B7%9D%E7%A6%BB/"/>
    <url>/2019/11/28/P2136%20%E6%8B%89%E8%BF%91%E8%B7%9D%E7%A6%BB/</url>
    
    <content type="html"><![CDATA[<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><blockquote><p>我是源点，你是终点。我们之间有负权环。 ——小明 </p></blockquote><a id="more"></a><p>负环的 <del>经验题</del> and <del>语文阅读理解？</del></p><p>此题中的 w 为减少的距离，与正常的不同。</p><p>结合输入输出</p><div class="hljs"><pre><code class="hljs angelscript">输入样例<span class="hljs-number">3</span> <span class="hljs-number">3</span><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">-1</span><span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">-10</span>输出<span class="hljs-number">-2</span></code></pre></div><p>再画两张图<br><img src="https://cos.royce2003.top/4d5decec/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p><img src="https://cos.royce2003.top/4d5decec/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>这时你就会发现只需将 <code>-w</code> 当作权值进行最短路运算即可</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;queue&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXN 5010</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXM 50010</span><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> INF = <span class="hljs-number">1e9</span>;<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-keyword">int</span> n,m,u,v,w,cnt,T;<span class="hljs-keyword">int</span> head[MAXN],dis[MAXN],vis[MAXN],num[MAXN];<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span> &#123;</span><span class="hljs-keyword">int</span> to,next,w;&#125;edge[MAXM&lt;&lt;<span class="hljs-number">1</span>];<span class="hljs-built_in">queue</span> &lt;<span class="hljs-keyword">int</span>&gt; q;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">spfa</span><span class="hljs-params">()</span> </span>&#123;fill(dis+<span class="hljs-number">1</span>,dis+n+<span class="hljs-number">1</span>,INF);q.push(<span class="hljs-number">1</span>);vis[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;dis[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(!q.empty()) &#123;<span class="hljs-keyword">int</span> u = q.front();q.pop();vis[u] = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=head[u];i;i=edge[i].next) &#123;<span class="hljs-keyword">int</span> v = edge[i].to;<span class="hljs-keyword">if</span>(dis[v]&gt;dis[u]+edge[i].w) &#123;dis[v] = dis[u] + edge[i].w;<span class="hljs-keyword">if</span>(!vis[v]) &#123;q.push(v);vis[v] = <span class="hljs-number">1</span>;num[v]++;<span class="hljs-keyword">if</span>(num[v]&gt;n) &#123;<span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"Forever love"</span>;<span class="hljs-keyword">return</span>;&#125;&#125;&#125;&#125;&#125;<span class="hljs-built_in">cout</span> &lt;&lt; dis[n];&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> v,<span class="hljs-keyword">int</span> w)</span> </span>&#123;edge[++cnt].to=v;edge[cnt].w=w;edge[cnt].next=head[u];head[u]=cnt;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++) &#123;<span class="hljs-built_in">cin</span> &gt;&gt; u &gt;&gt; v &gt;&gt; w;add(u,v,-w);&#125;spfa();<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><p>然后你就 wa 一个点。<br>让我们再认真看看题目，只能小明主动吗？小红也可以主动点啊，所以再从 n 开始跑一次就可以 ac 了</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdlib&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;queue&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXN 5010</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXM 50010</span><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> INF = <span class="hljs-number">1e9</span>;<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-keyword">int</span> n,m,u,v,w,cnt,T;<span class="hljs-keyword">int</span> head[MAXN],dis[MAXN],vis[MAXN],num[MAXN];<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span> &#123;</span><span class="hljs-keyword">int</span> to,next,w;&#125;edge[MAXM&lt;&lt;<span class="hljs-number">1</span>];<span class="hljs-built_in">queue</span> &lt;<span class="hljs-keyword">int</span>&gt; q;<span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">spfa</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s)</span> </span>&#123;fill(dis+<span class="hljs-number">1</span>,dis+n+<span class="hljs-number">1</span>,INF);    <span class="hljs-built_in">memset</span>(vis,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(vis));q.push(s);vis[s] = <span class="hljs-number">1</span>;dis[s] = <span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(!q.empty()) &#123;<span class="hljs-keyword">int</span> u = q.front();q.pop();vis[u] = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=head[u];i;i=edge[i].next) &#123;<span class="hljs-keyword">int</span> v = edge[i].to;<span class="hljs-keyword">if</span>(dis[v]&gt;dis[u]+edge[i].w) &#123;dis[v] = dis[u] + edge[i].w;<span class="hljs-keyword">if</span>(!vis[v]) &#123;q.push(v);vis[v] = <span class="hljs-number">1</span>;num[v]++;<span class="hljs-keyword">if</span>(num[v]&gt;n) &#123;<span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"Forever love"</span>;<span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);&#125;&#125;&#125;&#125;&#125;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u,<span class="hljs-keyword">int</span> v,<span class="hljs-keyword">int</span> w)</span> </span>&#123;edge[++cnt].to=v;edge[cnt].w=w;edge[cnt].next=head[u];head[u]=cnt;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++) &#123;<span class="hljs-built_in">cin</span> &gt;&gt; u &gt;&gt; v &gt;&gt; w;add(u,v,-w);&#125;spfa(<span class="hljs-number">1</span>);    <span class="hljs-keyword">int</span> mi=dis[n];    spfa(n);    <span class="hljs-built_in">cout</span>&lt;&lt;min(mi,dis[<span class="hljs-number">1</span>]);<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div><p>至此绿题++</p><p><a href="/posts/fd36a626.html">模板传送门</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OI</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2019 CSP 游记</title>
    <link href="/2019/11/24/2019%20CSP%20%E6%B8%B8%E8%AE%B0/"/>
    <url>/2019/11/24/2019%20CSP%20%E6%B8%B8%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">O</span>I第一年，不忘初心砥砺前行！<a id="more"></a><h3 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h3><p>第一次参加 CSP，贼激动。</p><p>早上七点多前往二路做 k108 去动车站（我貌似是最迟到的….）动车上左边 cjl 右边 zy（小声bb：看cjl调他那个游戏手柄半天搞不好有点好笑）在车上写了会儿模板，途中加林突然好心指了个错误<del>（吓到我了）</del>。很快“前方到站—-福州！”　</p><p>途中拍了几段超治愈的视频，强迫症极度舒适。<br>之后便坐公交到了酒店。</p><p>上车前</p><blockquote><p>lz：“带零钱了吗”（手里拿着好几个硬币掂啊掂）<br>我们：“嗯嗯嗯”</p></blockquote><p>马上上车时</p><blockquote><p>lz：“带零钱了吗”x2<br>（手里掂硬币）x2<br>我们：“嗯嗯嗯”x2</p></blockquote><p>lz超级贴心哇！！不过大家貌似都带了</p><p>吐槽酒店前台，我和 zyy 的身份证应该是第二个递过去的，结果倒数第三个办好入住<del>cao</del>，被安排在了 801（七（八）人的聚集地 我 zyy ljj czx hjj hyy cxyu （ljz））。</p><p>中午在酒店门口一个转角的饭店随便吃了点（烧麦贼坑人，我 zyy czx hjj都被坑到了 czyu 貌似也有，当然还有 ljj 被皮蛋瘦肉粥坑到了）此处也成了之后几天吃早饭的地方（酒店早餐真的真的没东西吃）。</p><p>和服务员的对话</p><blockquote><p>“我的烧麦能先拿过来吗”<br>“好的马上”<br>…….几分钟过去了<br>“<del>在？</del>我的烧麦能先拿过来吗”<br>“好的马上”<br>…….几分钟过去了<br>“我的烧麦还没拿过来吗？”<br>“马上来了”<br>“（大声起来）前面问了几遍了都说马上，怎么还没来？”<br>…..10s 后烧麦到了….</p></blockquote><hr><p>下午貌似打了会儿电竞就去三中试机了（测试电脑能不能编译运行程序之类的），不会高精 a+b，就只好打个普通 a+b 和并查集练手（几分钟就结束了），之后还剩很多时间，xzt 还教了我高精 a+b，感谢！感谢！<br>还见到了 zzq 大神的照片%%%</p><p><img src="https://cos.royce2003.top/d66957d/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>回到酒店，由于蓝咕咕是学仔，还没来，于是乎我们又开始电竞了，801 再次聚集一大批人（貌似每天都很多人）<br>时间飞快，晚上就到了，在美团点了份外卖（送的好慢啊）。。。。<br>然后忘记干了什么。。。。</p><p>很快蓝咕咕和朱先生到了，于是乎，和列东中学的一起开了个小会（考前注意），蓝咕咕讲师。电脑莫名被征用（蓝鸟电脑貌似没法连电视，<del>然后为什么不征用 lz 电脑？（求解答）</del>）中途蓝鸟按 f11 想编译运行，然后没反应，再按，还是没反应，我终于忍不住伸出手想去先按下 Fn，结果。。。朱先生的奶茶被我打翻了。。啊啊啊啊我的电脑。。。不过貌似并没有撒电脑上。。差一点点。。。还好。接着讲了fc的用法。。<del>又翻车了</del>。。这次我的锅，配 vscode 的时候乱搞了环境变量，然后就出现诡异问题了（终于在 11 月 19 号解决了，时隔4天<del>咕咕咕</del>）<br>　　<br><img src="https://cos.royce2003.top/d66957d/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br>　<br><img src="https://cos.royce2003.top/d66957d/03.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>大概十点多结束了（应该是）<br>貌似是社长上的最后一节课了难过呜伤心呜呜呜X﹏x</p><p>几个人又一起回了 801 开始了深夜学习！！</p><p><img src="https://cos.royce2003.top/d66957d/04.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>十一点多蓝鸟来了（以为来<del>扫黄</del>查房）<del>没想到</del>端了个电脑来一起学习（忘记lz有没有来了）吐槽下酒店的床，真的真的太轻了吧，我们两人坐地上靠着床都靠不住 emmmm 不过地上垫个毯子坐在确实舒服，快十二点蓝鸟回去睡觉了，又剩下了我们几个。。。<br>然后开始尝试拍⭐⭐（福州污染大，几乎没有⭐）</p><p><img src="https://cos.royce2003.top/d66957d/05.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p><img src="https://cos.royce2003.top/d66957d/06.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br>　　<br>那个晚上，板子刷了一遍，最短路弱化打了好几遍，普通版的也打了好几遍（因此上蓝）</p><p><img src="https://cos.royce2003.top/d66957d/07.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>重载那部分真的不理解啊，只好背下来咯</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span> &#123;</span><span class="hljs-keyword">int</span> pos,dis;    <span class="hljs-keyword">bool</span> <span class="hljs-keyword">operator</span>&lt;(<span class="hljs-keyword">const</span> node &amp;a) <span class="hljs-keyword">const</span> &#123;<span class="hljs-keyword">return</span> a.dis&lt;dis;&#125;&#125;;priority_queue&lt;node&gt; q;</code></pre></div><p>默了五六遍终于记住了 emmm</p><p>接下来的事记不大清楚了。依稀记得<br>czx 床上躺了一会儿，起来吐槽固体传音快（貌似是这样）<br>然后 hjj 也睡了会儿<br>hyy 在我和 zyy 下棋的时候睡了一小会儿<br>czyu 早就睡了，可能睡到十二点多 or 一点多<br>ljj 也躺了会儿，估计没睡<br>zyy 没躺也没睡（好像）<br>我躺了会儿没睡</p><p>三点多不行了，我和 zyy 去隔壁房价睡觉了，说好四点十分叫我两，然后我醒来？？？zyy 呢？一看 4:20 了，记得四点 5 6分 的时候还在和 zyy 讲话啊。。。。房间莫名多出 cxyu，问 hyy：“咋不叫我？”“看你睡着了就没叫”。。好暖心啊。<br>再回到 801，linjj 还在学，hjj 睡着了，于是乎我和 zyy 又开始学，突然莫人手机开始响。。。。hjj 的闹钟。。。貌似她自己并没有听到（带耳机的缘故？）<br>cao 本以为一下就停了。。。。一直不停<br>啊，这 hjj 对自己太狠了吧（虽说没什么用），然后 cxyu 和 hyy 赶来拿走了她的手机，可还有闹钟咋办<del>砸了</del>关机√顺便取消关机闹钟。hjj 就这样<del>再也没醒了</del></p><p>大概四点左右催完 ljj 去睡觉，我 zyy czx来到了 6 楼，准备睡觉，然后莫名开始学 and 玩？准备结束了，cxyu 发来图片说天花板有东西闪？？？<del>吓到我了</del>其实是个报警器</p><p><img src="https://cos.royce2003.top/d66957d/08.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>好吧，去楼上康康，又溜到八楼，一翻沟通，最终觉得她也先去6楼，想顺便去 801 拿个电脑去学，然后房卡在 zyy 那，cxyu 去拿我在楼上等。。。。她跑 7 楼去了。。。，后面我自己下去拿了，然后<del>潜入</del> 801 <del>偷</del>电脑。尴尬的事来了，桌面 上<del>zyy</del> 和 hjj 的和 luojj 的电脑（luojj 12:30 送电脑来给我们用，大好人！感谢！前面忘记说了实名举报 hjj 玩了 luojj 的电脑游戏<del>不得不说那声音太好听了</del>），然后发现两台电脑都关了，没有密码 emmmm，cxyu 瞄了一眼 hjj，看她睡得那么香嘻嘻嘻，偷来 hjj 的电脑走到床边，<del>一脸奸笑</del>把<del>邪恶的</del>手伸向hjj…..（脑补画面）（其实就是拿 hjj 手指解锁emmm）受不鸟了，我溜到走廊静静等等……然后她空手出来了……什么都没偷到，空手去了 6 楼（第二天发现 luojj 电脑根本没锁 emmmm）</p><p>到了 610，然后我貌似还学了一会，cxyu 说要学，我：“五分钟就好”……十分钟之后我还在看…..貌似又过了几分钟，啊终于结束了，上床睡觉。可怜的 czx 只好和我挤一张了（我睡着之前看他貌似是睡了，不知道后面怎么了）。<br>（12点之后是不是要写到 Day1 哇）</p><h3 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h3><p>早上六点多手机突然想起来，一看，我妈？？？接电话之后才知道昨天给 lz 留电话叫起床的时候留成我妈的了。。。。好尴尬呀。去了昨天中午吃饭的地方买了烧麦。<br>临走前写了个 <code>DFS</code></p><p><img src="https://cos.royce2003.top/d66957d/09.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>前往福州三中。　一进去，哇好大呀，这教学楼太有排面了。<br><img src="https://cos.royce2003.top/d66957d/10.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/d66957d/11.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br>but 机房要爬 6 楼差评。进去之前开始失忆 <code>priority</code> ？<code>prio</code>？？<code>pr</code>？等等怎么读？？<br>完了完了。。。。。完全忘记，然后进考场，priority，瞬间又记起来了……</p><p>进去第一件事 整理桌面<br>建个文件夹，桌面上能放进去的都塞了进去，留个考试文件</p><p>拿到解压密码，开始猜特殊含义 emmmm 貌似没有<br>开始看 t1 <a href="https://www.luogu.org/problem/P5657" target="_blank" rel="noopener">格雷码</a>。。看不懂题目，放弃 。<br>t2 <a href="https://www.luogu.org/problem/P5658" target="_blank" rel="noopener">括号树</a>，看懂题目了，<code>括号匹配+子串</code> 还在 <code>树</code> 上？？括号匹配的题做过，子串也做过类似的，可搞在一起不会写啊，关键是还在树上，告辞。等等，这数据范围妙啊，是条 <code>链</code>，嘻嘻，那貌似可做。。。。四十分钟过去了。。。写崩了，放弃<br>开始 t3 <a href="https://www.luogu.org/problem/P5659" target="_blank" rel="noopener">树上的树</a>。。。题目也看懂了，不会写。。wait？？？又有 <code>链</code> ，再次开始骗分。。。40 分钟过去了。。崩了（甚至想些冒泡排序）<br>过去差不多一个半小时了，什么都还没写出来，逐渐炸毛。。重回t1看题目，终于看懂题目了，貌似可做，先是想到递推，尝试写了下。。。又崩了，然后开始写递归，大概四十分钟写了部分分的，然后突然想到题目的顺序逆序（我以为要排序。。）然后觉得刚刚都写错了，删删删。。。开始怀疑人生，周围大佬们都在猛烈地敲打键盘，就我一个蒟蒻。。。<br>然后开始准备找规律，找啊找找啊，貌似快推出来了，开始激动，然后。。没然后了。。剩差不多一小时，一题没写出来，万般无奈下开始 <code>打表</code> ，然后瞄了一眼数据范围，前 50 分 2^10？？？1024。。再加上 2^9 2^8…….两千多行了吧。。。思索一会后觉得程序打表，把刚刚的模拟稍微改了改，完成！！15 分钟后终于好了，两千多行！第一次打这么多啊（应该也是最后一次），吐出一口<del>浊气</del>全身轻松。<br>差不多半小时后结束，出去听巨佬们的谈话，貌似大家都觉得不简单。</p><p>考完后还参观了三中，挺漂亮的（肚子咕咕咕）<br>中午随便点了个外卖吃，下午在电竞中度过<del>4399 真好玩</del>，晚上邹哥在醉得意请吃饭,吃的超好！！</p><p><img src="https://cos.royce2003.top/d66957d/12.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p><img src="https://cos.royce2003.top/d66957d/13.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>回酒店的路上，cxyu <del>可能脑袋坏了</del>体验盲人走路（邹哥还跟着我们，其他人先走了）快到酒店时邹哥：“有研究说……(忘了邹哥怎么说的了)”。。。。。开始地理？？电梯里还问 cxyu 有什么感受？？<br>晚上在蓝鸟的主持下完了场狼人杀，我第二轮就挂了，全程摸鱼。。。</p><p>狼人杀结束后知道回收的程序发出来了，luogu 也有题目了，赶紧去测，结果提示<code>代码过长</code>，放弃了。</p><p>之后鸟和 lz 开始<del>捉</del>找人谈话（害怕）我和 zyy 第一个被叫下去，问了些 CSP 有个的问题，很快就结束了。最后<del>全部</del>大部分人结束后，我又被交了下去，还有 ljj xzt tfh <del>czx 由于睡着了就没叫去</del> 房间里还有 cx zzl 然后<del>秘密</del>谈话一波<br>回到 801，有点困就爬床上想休息几分钟，再次睁开眼？？？早上了？？</p><h3 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h3><p>lz 的敲门声叫醒了迷迷糊糊的我和 zyy<br>？zyy 怎么和我同张床，后面才知道另一张床被某个恶人占了（强烈谴责），随便吃了早饭又出发前往福州三中。</p><p><img src="https://cos.royce2003.top/d66957d/14.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p>走到六楼，进考场。</p><p><del>进去第一件事 整理桌面<br>建个文件夹，桌面上能放进去的都塞了进去，留个考试文件</del><br>拿到解压密码，好像完全乱打的<br>开始t1 <a href="https://www.luogu.org/problem/P5664" target="_blank" rel="noopener">Emiya 家今天的饭</a>？？看不懂输入？？什么鬼<br>放弃下一题，又看不懂，下一题<br>t2 <a href="https://www.luogu.org/problem/P5665" target="_blank" rel="noopener">划分</a>贪心？赶紧可做，先过<br>t3 <a href="https://www.luogu.org/problem/P5666" target="_blank" rel="noopener">树的重心</a><br>以前听说过重心的概念，想不到居然在 ccf 的试卷上知道了什么是重心，可有什么用，不会啊。。。。<br>返回 t2，写了快一小时，结果样例都没过。又调了半小时，还是毫无进展。<br>再回到t1认真看题目，终于搞懂了输入，dp？？可还是不会。开始暴力。。又是不过样例。开始思考人生，算了 t1 打表吧。<br>打完 t1 的表还剩好久，不想做 t2t3 了，主要是不会，然后开始研究 ccf 的少年机，每个盘翻了一遍过去，然后开始找游戏<br>扫雷，嘿嘿嘿。。。30 分钟过去了<br>才 11:25，于是乎，蜘蛛纸牌，嘿嘿嘿<br>玩到不想玩了，11:55，差不多结束了，检查了下文件输入输出，文件夹名称，文件名称，等待考试结束。</p><p>出考场后看大家貌似都挺不高兴的。</p><p>也没怎么说话，慢慢走回酒店。<br>点了个外卖，开始收行李，下午 2:30 的车，比较赶，外卖 1:30 才到，抓紧吃了点开始收行李，到了集合时间还没吃完，只好边走边吃，在出发前终于吃完了</p><p>走到公交车站，车来的很快<br>lz 又开始问：“带零钱了吗？”<br>…………<br>再夸次 lz 贴心！！<br>到动车站xzt的身份证找不到了 emmm 办了临时的，没有错过车</p><p>坐在车上好困，都在睡觉<br>中途 zyy 叫我下棋，经常过隧道网不好也就没下了，然后又我睡了<br>hjj 手机放在窗户那拍视频，然后睡着了，拍了快一小时，哈哈哈哈哈哈。<br>之后也就没发生什么事了</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>2019年，我参加竞赛的第一年，noip 也改名成了 csp（博客域名也加了 2019，以此纪念这意义重大的一年）</p><p>不知道是幸运还是不幸运，参加了第一届的 csp，6题里没一题写出来，day2 的难度在 luogu 的评级和 noi 一样？（欣慰）<br>当然，我也应该自我反思，接下来的时间继续努力，明年 csp 加油考个好成绩</p><p>蓝鸟退役了，朱先生也退役了，高三的也都退役了，高二可能也还有人退役<br>朱先生第一次认识是在机房写代码的时候，突然走过来说：“给我看看”，有点害怕，然后乖乖交出鼠标，他点到新手村看了看问了下我名字然后就走了…之后再见到我又问了我名字…<br>貌似还问了好几次<br>第一轮第二轮都和他一个考场（沾巨气啊）。<br>人很好，不过看着有点凶，很强，希望他能考上好大学，<del>貌似不需要我希望</del>，因为本身就年段前几的存在…祝 18 虽生日快乐🎂</p><p>蓝鸟，可爱的社长，人很好，声音好听，在机房经常拿着根棍子，不舍得，不过既然是蓝咕咕自己的选择，那一定深思熟虑过，祝考上好大学（是不是有点早了）<br>好伤心 QAQ</p><p>想到三年后自己退役，会伤心很久，也肯定会哭。因为不舍的信竞的小伙伴，也不舍的 OI，不过那都是后话了。<br>这次 csp 没考好，期中考也没考好<br>接下来的时间，继续努力</p><p>and某人还欠我顿饭！！！</p><hr><p>官方发了公告说是明年继续举办 NOIP ？<br>迷惑行为<br>算是幸运吧，参加了唯一的一届 CSP，不知道以后还会不会重新改成 CSP…</p><hr><p>一学期过去了，因为整理图床，再次看了这篇文章<br>或许只有我们这些因为能和队友们一起去住宾馆，才有这些欢乐吧…<br>然后发现自己原来写的真的…都想重写一遍了…</p>]]></content>
    
    
    
    <tags>
      
      <tag>Royce</tag>
      
      <tag>游记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【转载】2019信息社十月推送</title>
    <link href="/2019/10/30/2019%E4%BF%A1%E6%81%AF%E7%A4%BE%E5%8D%81%E6%9C%88%E6%8E%A8%E9%80%81/"/>
    <url>/2019/10/30/2019%E4%BF%A1%E6%81%AF%E7%A4%BE%E5%8D%81%E6%9C%88%E6%8E%A8%E9%80%81/</url>
    
    <content type="html"><![CDATA[<span class="drop-cap">十</span>月推送：科普向<p>逻辑真假与电路有什么关系？如何利用布尔表达式优化电路？<br>感谢来自中国人民警察大学的前二中学长来稿！</p><a id="more"></a><p><img src="https://cos.royce2003.top/1cc325d4/01.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/1cc325d4/02.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/1cc325d4/03.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/1cc325d4/04.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""><br><img src="https://cos.royce2003.top/1cc325d4/05.webp-default" srcset="https://cdn.jsdelivr.net/gh/Royce2019/BlogSource/loading.webp" alt=""></p><p><a href="https://user.qzone.qq.com/2567446457/mood/b91f0899a575b95d401d0a00" target="_blank" rel="noopener">原文链接</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>转载</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
